/*
--------------------------------------------------------------------------------
================================================================================
                          +:                                                   
WWW@*WWWWWWW+  *WWWWWWW*  :=@       @WWWWWWWWW*WWW*  =WWW*WWWWWWWWWW@*WWW+  @WW
WWW@*WWWWWWWWW**WWWWWWWWW=   =*     @WWWWWWWWW*WWW*  =WWW*WWWWWWWWWW@*WWW+  @WW
WWW@*WWW+  WWWW*WWW*  @WWW :WWWWWW+ @WWW*    *+WWW*  =WWW*WWW#=#WWWW#*WWWWW@@WW
WWW@*WWW+  @WWW*WWW*  #WWW @WWWWWWW @WWW#WWWW@+WWW*  =WWW*WWW#WWWWW* *WWWWW@@WW
WWW@*WWW@  @WWW*WWW*  #WWW += =# += @WWW      +WWWW: =WWW*WWW=  @WWW@      *WWW
WWW@ *WWWWWWWWW*WWW*  #WWW   =WW@   @WWW       :WWWWWWWWW*WWW=   WWW@:WWWWWWWW@
@@@@   +@@@@@@@+@@@+  #WWW          @WWW         :WWWWWWW+W@@=   @@@@:@@@@@@#  

###############################################################################
Ion Fury
Code by Jonathan Strander, Fox Martins, Richard Gobeille, and Evan Ramos
All code as written belongs to Voidpoint and the respective authors.
(c) 2019 Voidpoint, LLC
--------------------------------------------------------------------------------
While we encourage you to experiment, modifications are allowed WITHOUT any
warranty or guarantee of support. Editing these files is AT YOUR OWN RISK, and
we encourage you to make backups.
--------------------------------------------------------------------------------

NOTES:
This file contains most of the code for player, barring a few specific functions
for weapons, keycards, and some things that require being triggered earlier
in the order of operations. Much of the HUD drawing code is also located here.
================================================================================
--------------------------------------------------------------------------------
*/

// Didn't use the generic temp vars because interference is bad


var bb // debug, spawn a bowling bomb
var plasma // debug, shoot plasma bolts
var flame_on // debug, shoot flames
var dartgal
var debug_fade 1 0
// var smg 1 0 // enable test smg
var fly_z
var slope_run 1 0
var testsnd -1 0
var hazard_breath 0 1
var hazard_breath2 0 1
var payne_mode
define PAYNE_TIME 300

var gun_pos_type
var gun_pos_type_last
var w2_autoswitch
var flat_glass
var testhud

array num_targets 7
var need_target_icon 0 2
var last_target -1 2
var target_icon_id -1 2
var toggle 0 2

var p_lastxv
var p_lastyv
var p_eol_x 0 1
var p_eol_y 0 1
var p_eol_z 0 1
var p_eol_tfz 0 1
var p_need_land_z
var p_need_water_land
var p_need_land_sound 0 1
var p_need_water_rise
var p_need_water_ls
var p_need_discard_quote
var p_crouch_z
var p_jump_sound
var p_dead_count
var p_dead_count2
var p_dead_ang -1 0
var p_dead_rot
var p_last_hp
var p_secret_last 0 2
var p_killed_last 0 2
var p_ladder_disp_xoff 0 2
var p_ladder_disp_yoff 0 2
var p_bob
var p_need_laddersound 0 1
var p_nextlevel_ladreset 0 1
var p_drown_dmg
var p_keyflash_delay
var p_horde_restart
var p_quickladder -1 1
var p_dead_face 0 1
var p_flash_kit 0 1
var p_override_floorpicnum 0 1
var p_halt_footstep 0 1
var reset_time_input
var p_stayput_sector -1 1

var force_mode 1 0
define DROWNTIMER 5
define LOVERBOY_ALT_TIME 20

var boss_fillhp

define LADDERSPEED 688          // Modify this value to speed up or slow down ladders
var p_ladder_other 0 1
define MAXBREADCRUMBS 256
var p_ladder_push
define SLIMEDMGRATE 30
var p_slimedmg_count
define SLIMEDMG 2

var way_current -1 2
var way_num

var way_tics 0 2

var show_teaser

// Status bar settings

appendevent EVENT_SETDEFAULTS
  // 120 if we want the full status bar
  setuserdef[].statusbarflags 124

  setuserdef[].screen_size 4
  setuserdef[].statusbarmode 0
  setuserdef[].althud 0
endevent

/*
// screen area size

appendevent EVENT_UPDATESCREENAREA
    ife userdef[].screen_size 8
    {
        set GetWindowY 480
        shiftl GetWindowY 16
        set temp 80 // bottom status bar pixel height
        shiftl temp 16
        scalevar temp temp userdef[].statusbarscale 100
        sub GetWindowY temp
        state 480Full16_to_ydim
        setuserdef[].return 3 GetWindowY
    }
endevent
*/

// Make game palette not affect the HUD in Polymost

var last_surface_picnum 0 1
var last_surface_pal 0 1

appendevent EVENT_DISPLAYROOMS
    ifg camerasect -1
    ifl camerasect NUMSECTORS // needed for some reason
    ife sector[camerasect].lotag 2
    {
        switch last_surface_pal
            default
                ife last_surface_picnum SURFACE_SLIME
                    setplayer[].palette BASEPAL_SLIME
                else
                ife last_surface_picnum 6256
                    setplayer[].palette BASEPAL_SLIME
                else
                    setplayer[].palette BASEPAL_WATER
            break
            case 7
            case 48
            case 70
                setplayer[].palette BASEPAL_WATER
            break
            case 4
            case 5
            case 45
            case 46
            case 67
            case 68
                setplayer[].palette BASEPAL_SLIME
            break
            case 2
            case 3
            case 43
            case 44
            case 66
            case 104
            case 105
            case 125
            case 126
                setplayer[].palette BASEPAL_BROWN
            break
        endswitch
    }
    else
        setplayer[].palette 0
endevent
/*
appendevent EVENT_DISPLAYSBAR // Be carefull with using rotatesprite before this
    ifn rendmode 0 // remove these statements if you want the palette to affect the HUD in Polymost
        setplayer[].palette 0
endevent
*/
// Display palfrom effect between weapons and HUD in Polymost

var old_pals_time -1

appendevent EVENT_DISPLAYSTART
    ifn rendmode 0
    {
        set old_pals_time player[myconnectindex].pals_time
        setplayer[myconnectindex].pals_time 0
        screenpal 0 0 0 0 // why is this necessary?
    }
endevent

appendevent EVENT_DISPLAYEND
    ifn rendmode 0
    ifn old_pals_time -1
    {
        setplayer[myconnectindex].pals_time old_pals_time
        set old_pals_time -1
    }
endevent

appendevent EVENT_DISPLAYSBAR // Be carefull with using rotatesprite before this
    ifn rendmode 0
    ifg old_pals_time 0
    {
        set temp player[].pals 0
        set temp2 player[].pals 1
        set temp3 player[].pals 2
        shiftl temp 2
        shiftl temp2 2
        shiftl temp3 2
        clamp temp 0 255
        clamp temp2 0 255
        clamp temp3 0 255
        setuserdef[].global_r temp
        setuserdef[].global_g temp2
        setuserdef[].global_b temp3
        set hudx_alpha -old_pals_time
        shiftl hudx_alpha 2
        add hudx_alpha 256
        clamp hudx_alpha 0 255

        rotatespritea 160 100 131072 0 5530 0 0 1032 hudx_alpha windowx1 windowy1 windowx2 windowy2

        setuserdef[].global_r 255
        setuserdef[].global_g 255
        setuserdef[].global_b 255
    }
endevent

// Debug menu

appendevent EVENT_TURNAROUND
    set RETURN -1
    ife show_debug_menu 0
        set show_debug_menu 1
    else
        set show_debug_menu 0
endevent

var t_test
var t_tile
var t_x
var t_y
appendevent EVENT_DISPLAYMENU
    ifn force_mode 0
    {
        redefinequote 115 gamestate.bin
        readarrayfromfile gamestate_temp 115
        set temp6 gamestate_temp[0]
        ife force_mode 1
        {
            or temp6 32768
            readarrayfromfile gamestate 115
            setarray gamestate[0] temp6
            redefinequote 115 gamestate.bin
            writearraytofile gamestate 115
        }
        else ife force_mode -1
        {
            ifand temp6 32768
                xor temp6 32768
            readarrayfromfile gamestate 115
            setarray gamestate[0] temp6
            redefinequote 115 gamestate.bin
            writearraytofile gamestate 115
        }
        set force_mode 0
    }
endevent

defstate dbg_do_bg
    set hudx_scale 57344
    set hudx_x 1
    add hudx_y 11
    set hudx_tilenum 5454
    set hudx_pal 77
    state DrawTile640x480Screen
    add hudx_x 63
    state DrawTile640x480Screen
    add hudx_x 63
    state DrawTile640x480Screen
    set hudx_pal 0
ends

defstate dbg_do_txt
    set hudx_x 5
    add hudx_y 2
    set hudx_scale 32768
    set hudx_tilenum STARTALPHANUM
    state DrawText640x480Screen
ends


appendevent EVENT_DISPLAYREST
    ifn force_mode 0
    {
        redefinequote 115 gamestate.bin
        readarrayfromfile gamestate_temp 115
        set temp6 gamestate_temp[0]
        ife force_mode 1
        {
            or temp6 32768
            readarrayfromfile gamestate 115
            setarray gamestate[0] temp6
            redefinequote 115 gamestate.bin
            writearraytofile gamestate 115
        }
        else ife force_mode -1
        {
            ifand temp6 32768
                xor temp6 32768
            readarrayfromfile gamestate 115
            setarray gamestate[0] temp6
            redefinequote 115 gamestate.bin
            writearraytofile gamestate 115
        }
        set force_mode 0
    }
    
    ife show_debug_menu 1
    {
        state ResetTile
        state ResetText
        set hudx_x 2
        set hudx_y 1
        set hudx_tilenum 2457 
        set hudx_orientation 273
        set hudx_scale 57344
        state DrawTile640x480Screen
        redefinequote 12 DEBUG COMMAND MENU
        set hudx_x 9
        set hudx_y 3
        set hudx_quote 12
        set hudx_tilenum STARTALPHANUM
        state DrawText640x480Screen

        add hudx_y 9
        state dbg_do_bg
        redefinequote 12 [^091^00] FLY ^00
        ife fly 1
            redefinequote 13 (^05on^00)
        else
            redefinequote 13 (^08off^00)
        qstrcat 12 13
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^092^00] PAUSE AI ^00
        ife pause_ai 1
            redefinequote 13 (^05on^00)
        else
            redefinequote 13 (^08off^00)
        qstrcat 12 13
        state dbg_do_txt
/*
        state dbg_do_bg
        redefinequote 12 [^093^00] SPAWN CULTIST
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^094^00] SPAWN MECHSECT
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^095^00] SPAWN LIBERATOR
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^096^00] SPAWN GREATER PRIEST
        state dbg_do_txt
*/
        state dbg_do_bg
        redefinequote 12 [^097^00] SEE BREADCRUMBS ^00
        ife see_breadcrumbs 1
            redefinequote 13 (^05on^00)
        else
            redefinequote 13 (^08off^00)
        qstrcat 12 13
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^098^00] PATROL IGNORE PLAYER ^00
        ife skip_see 1
            redefinequote 13 (^05on^00)
        else
            redefinequote 13 (^08off^00)
        qstrcat 12 13
        state dbg_do_txt

        state dbg_do_bg
        redefinequote 12 [^090^00] DRAW PROFILER ^00
        ife profiler 1
            redefinequote 13 (^05on^00)
        else
            redefinequote 13 (^08off^00)
        qstrcat 12 13
        state dbg_do_txt


        // secrets
        set hudx_x 5
        set hudx_y 192
        
        redefinequote 12 ^09+^00 Secrets found: %ld
        qsprintf 12 12 p_secrets_left
        state DrawText640x480Screen
        
        redefinequote 12 ^09+^00 Total secrets: %ld
        qsprintf 12 12 p_secrets
        add hudx_y 11
        state DrawText640x480Screen
        

        // kills
        redefinequote 12 ^09+^00 Killed enemies: %ld
        qsprintf 12 12 p_killed_left
        add hudx_y 11
        state DrawText640x480Screen
        
        redefinequote 12 ^09+^00 Total enemies: %ld
        qsprintf 12 12 p_killed
        add hudx_y 11
        state DrawText640x480Screen
        
    }
    ife t_test 1
    {
        set hud_x 160
        add hud_x t_x
        set hud_y 100
        add hud_y t_y
        redefinequote 12 OFFSET_X: %ld  | OFFSET_Y: %ld
        qsprintf 12 12 t_x t_y
        gametextz STARTALPHANUM 10 2 12 0 0 273 0 0 xdim ydim 16384
        set hud_tilenum t_tile
        myospal hud_x hud_y hud_tilenum 0 0 0
    }
endevent

appendevent EVENT_WEAPKEY1
    ife show_debug_menu 1
    {
        set RETURN -1
        ife fly 0
            set fly 1
        else
            set fly 0
    }
endevent

appendevent EVENT_WEAPKEY2
    ife show_debug_menu 1
    {
        set RETURN -1
        ife pause_ai 0
            set pause_ai 1
        else
            set pause_ai 0
    }
endevent

appendevent EVENT_WEAPKEY3
    ife show_debug_menu 1
    {
        set RETURN -1
        spawn A_CULTIST
    }
endevent

appendevent EVENT_WEAPKEY4
   ife show_debug_menu 1
    {
        set RETURN -1
        spawn A_MECHSECT
    }
endevent

appendevent EVENT_WEAPKEY5
    ife show_debug_menu 1
    {
        set RETURN -1
        spawn A_SHOTGUNNER
    }
endevent

appendevent EVENT_WEAPKEY6
    ife show_debug_menu 1
    {
        set RETURN -1
        spawn A_GREATER
    }
endevent

appendevent EVENT_WEAPKEY7
    ife show_debug_menu 1
    {
        set RETURN -1
        ife see_breadcrumbs 0
            set see_breadcrumbs 1
        else
            set see_breadcrumbs 0
    }
endevent

appendevent EVENT_WEAPKEY8
    ife show_debug_menu 1
    {
        set RETURN -1
        ife skip_see 0
            set skip_see 1
        else
            set skip_see 0
    }
endevent

appendevent EVENT_WEAPKEY10
    ife show_debug_menu 1
    {
        set RETURN -1
        ife profiler 0
            set profiler 1
        else
            set profiler 0
    }
endevent


eventloadactor A_WAYPOINT
        cstat 33280
enda

var ignore_me 0 2
useractor notenemy A_WAYPOINT
    ifspritepal 9
    {
        for temp sprofstat STAT_ACTOR
        {
            ifand tiledata[sprite[temp].picnum].gameflags 32 ifg sprite[temp].extra 0
            {
                canseespr THISACTOR temp temp2
                ife temp2 1
                {
                    ife counter 0
                    {
                        setav[temp].ignore_me 1
                        add counter 1
                    }
                    getav[temp].ignore_me temp2
                    ife temp2 1
                    {
                        geta[].x face_x
                        sub face_x sprite[temp].x

                        geta[].y face_y
                        sub face_y sprite[temp].y

                        getangle face_return face_x face_y

                        seta[temp].ang face_return

                        ldist temp2 THISACTOR temp
                        ifl temp2 128
                            setav[temp].ignore_me 2
                        ifg counter 100
                            setav[temp].ignore_me 2
                    }
                    else
                    {
                        geta[].ang temp2
                        inv temp2
                        setav[temp].ignore_me temp2
                    }
                }
            }
        }
        ifg counter 0
            add counter 1
        ifg counter 150
            killit
    }
enda

action NULLACTION 0 1 1 1 1
eventloadactor A_SOUND_EMITTER
    cstat 32768
enda
appendevent EVENT_SPAWN
    ifactor A_SOUND_EMITTER
        changespritestat THISACTOR STAT_SOUNDEMITTER
endevent
useractor notenemy A_SOUND_EMITTER
    changespritestat THISACTOR STAT_SOUNDEMITTER
enda

appendevent EVENT_WORLD
    for temp7 sprofstat STAT_SOUNDEMITTER
    {
        setu[].vm_sprite temp7
        ifl sprite.lotag 0
        {
            set temp sprite.lotag
            abs temp
            soundvar temp
        }
        else
        {
            ifl sprite[].extra 1
                seta[].extra 1

            geta[].z temp
            sub temp 4096
            seta[].z temp
            set temp5 0
            ifn num_flag32 0
            {
                for temp5 range num_flag32
                {
                    set temp gameflag32[temp5]
                    ifg sprite[temp].extra 0
                    {
                        ldist temp2 THISACTOR temp
                        ifl temp2 sprite[].extra
                        {
                            getav[temp].enemy_init temp3
                            set temp4 tilesizy[sprite[temp].picnum]
                            shiftl temp4 2
                            mul temp4 sprite[temp].yrepeat
                            shiftr temp4 2
                            set cansee_height temp4
                            set cansee_target temp
                            state cansee_actor
                            ife cansee_return_o 1
                            {
                                ife actorvar[temp].enemy_crouched 0
                                {
                                    seta[temp].httimetosleep 300
                                    changespritestat temp STAT_ACTOR
                                }
                                getav[temp].enemy_endoftheline temp2
                                ifn temp2 -1
                                    set temp3 0
                                ife sprite[temp].picnum A_MECHSECT
                                    ife actorvar[temp].ms_faller 1
                                    {
                                            ifge actorvar[temp].enemy_init 10
                                                set temp3 0
                                    }
                                getav[temp].enemy_ife temp2
                                ifn temp2 0
                                    set temp3 -127
                                ife temp3 0
                                {
                                    ife actorvar[temp].enemy_crouched 0
                                    {
                                        ife sprite[temp].picnum A_MECHSECT
                                        {
                                            ife actorvar[temp].ms_faller 1
                                            {
                                                dist temp2 THISACTOR temp
                                                set temp3 sprite.extra
                                                ifspawnedby A_MECHSECT
                                                    div temp3 3
                                                else
                                                    shiftr temp3 2
                                                ifl temp2 temp3
                                                    ife actorvar[temp].enemy_init 90
                                                        setav[temp].enemy_init 10
                                            }
                                            else
                                                setav[temp].enemy_init 1
                                        }
                                        else
                                            setav[temp].enemy_init 1
                                    }
                                    else
                                        setav[temp].enemy_init 1
                                    getav[temp].enemy_endoftheline temp2
                                    ifn temp2 -1
                                    {
                                        setav[temp].enemy_endoftheline -1
                                        setav[temp].se_hitag 0
                                    }
                                }
                                else ifn temp3 -127
                                {
                                    ife sprite[temp].picnum A_MECHSECT
                                    {
                                        dist temp2 THISACTOR temp
                                        set temp3 sprite.extra
                                        ifspawnedby A_MECHSECT
                                            div temp3 3
                                        else
                                            shiftr temp3 2
                                        ifl temp2 temp3
                                        {
                                            ife actorvar[temp].ms_faller 1
                                            {
                                                ife actorvar[temp].enemy_init 90
                                                    setav[temp].enemy_init 10
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        seta[].xrepeat 0
        changespritestat THISACTOR STAT_ACTOR
    }
endevent

var mgox 0 2
var mgoy 0 2
var mgx 0 2
var mgy 0 2
var mgz 0 2
var mgz2 0 2
var movegoang -1 0
eventloadactor A_MOVEGO
    geta[].hitag se_hitag
    seta[].hitag 0
    geta[].lotag se_lotag
    seta[].lotag 0
    geta[].extra se_extra
    ifl se_extra 0
        set se_extra 0
    geta[].yvel se_yvel
    ifl se_yvel 0
        set se_yvel 0
enda
useractor notenemy A_MOVEGO
    cstat 32768
    ifaction 0
    {
        geta[].sectnum se_above
        gets[se_above].wallptr st_do_once
        getw[st_do_once].x mgox
        getw[st_do_once].y mgoy
        action NULLACTION
    }
    for temp sprofstat STAT_LOCATOR
    {
        ifg se_lotag 0
        {
            ife sprite[temp].hitag se_lotag
            {
                ldist temp2 THISACTOR temp
                ifle temp2 256
                    seta[].ang sprite[temp].ang
            }
        }
    }
    ifg se_yvel 0
    {
        ife activateshit[se_yvel] 1
        {
            geta .ang temp
            add temp 1024
            and temp 2047
            seta .ang temp
        }
    }
    ifn movegoang -1
        seta[].ang movegoang
    /* redefinequote 11 %ld %ld
    qsprintf 11 11 mgox mgoy
    quote 11 */
    set temp 0
    ifn wall[st_do_once].x mgox
        set temp 1
    else ifn wall[st_do_once].y mgoy
        set temp 1
    else ifand se_extra 4
        set temp 1
    ife temp 1
    {
        set temp 0
        ifand se_extra 64
        {
            getflorzofslope player.cursectnum player.posx player.posy temp2
            sub temp2 1024
            ifg sprite[player.i].z temp2
                set temp 1
        }
        else ifp ponground
            set temp 1
        ifand se_extra 16
            nullop
        else ife temp 1 ife player[].cursectnum se_above
        {
             ife shakeitbabysm 0
                ifand se_extra 2
                    add shakeitbabysm 24


            getw[st_do_once].x mgox
            getw[st_do_once].y mgoy

            ifg se_hitag 0
                set move_v se_hitag
            else
                set move_v 128
                
            set temp move_v
            shiftr temp 2
            sub move_v temp
            ifp pducking
            {
                set temp move_v
                shiftl temp 2
                div temp 5
                add move_v temp
                shiftr temp 3
                add move_v temp
            }
            mul move_v 3
            shiftr move_v 1
            state move_actor
            shiftl move_xv 9
            shiftl move_yv 9

            getp[myconnectindex].posxv temp4
            ifl temp4 5 ifg temp4 -5
                set temp4 0
            add temp4 move_xv
            setp[myconnectindex].posxv temp4
            getp[myconnectindex].posyv temp4
            ifl temp4 5 ifg temp4 -5
                set temp4 0
            add temp4 move_yv
            setp[myconnectindex].posyv temp4

        }

        getw[st_do_once].x mgox
        getw[st_do_once].y mgoy
        ifg se_hitag 0
            set move_v se_hitag
        else
            set move_v 128
        shiftr move_v 3
        state move_actor
        set temp5 THISACTOR
        for temp spritesofsector se_above
        {
            setu[].vm_sprite temp5
            set temp2 0
            ifand se_extra 128
            {
                getflorzofslope sprite[temp].sectnum sprite[temp].x sprite[temp].y temp2
                sub temp2 1024
                ifle sprite[temp].z temp2
                    set temp2 1
                else
                    set temp2 0
            }
            ifn temp2 0
                nullop
            else ifand se_extra 1
            {
                set temp6 0
                ifn sprite[temp].statnum STAT_EFFECTOR
                    ifn sprite[temp].statnum STAT_ACTIVATOR
                        set temp6 1
                ifand actorvar[temp5].se_extra 8
                    ife sprite[temp].statnum STAT_GENERIC_DEBRIS
                        set temp6 2
                ifand se_extra 32
                    ifand tiledata[sprite[temp].picnum].gameflags 32
                        set temp6 2
                        
                ifn temp6 2
                {
                    ife temp6 1
                    {
                        getw[st_do_once].x mgox
                        getw[st_do_once].y mgoy
                        ifg se_hitag 0
                            set move_v se_hitag
                        else
                            set move_v 128
                        shiftr move_v 3
                        state move_actor
                    }
                    else
                    {
                        getw[st_do_once].x mgox
                        getw[st_do_once].y mgoy
                        set move_v 128
                        shiftr move_v 3
                        state move_actor
                    }
                    ife sprite[temp].statnum 0
                    {
                        setav[temp].mgz 1
                        changespritestat temp 1
                    }
                    getav[temp].mgz temp2
                    setu[].vm_sprite temp
                    geta[].x temp2
                    add temp2 move_xv
                    seta[].x temp2
                    geta[].y temp2
                    add temp2 move_yv
                    seta[].y temp2
                }
            }
            else
            {
                set temp6 0
                ifand actorvar[temp5].se_extra 8
                    ife sprite[temp].statnum STAT_GENERIC_DEBRIS
                        set temp6 2

                ifand se_extra 32
                    ifand tiledata[sprite[temp].picnum].gameflags 32
                        set temp6 2
                ifn temp6 2
                {
                    ife sprite[temp].statnum 0
                    {
                        setav[temp].mgz 1
                        changespritestat temp 1
                    }
                    getav[temp].mgz temp2
                    setu[].vm_sprite temp
                    geta[].x temp2
                    add temp2 move_xv
                    seta[].x temp2
                    geta[].y temp2
                    add temp2 move_yv
                    seta[].y temp2
                }
            }
        }
        setu[].vm_sprite temp5
    }
enda



useractor notenemy A_SECRETS_LEFT
    cstat 32768

    ife player[].cursectnum sprite[].sectnum
    {
        set temp p_secrets_area
        abs temp
        sub temp p_secrets_area_got
        ifge temp 0
        {

            ife p_secrets_show 0
                set p_secrets_show 100
            else ifle p_secrets_show 94
                set p_secrets_show 94
        }
        ifg p_secrets_area 0 ifn sprite[].pal 9
            inv p_secrets_area
    }
enda

// Secrets missing text

appendevent EVENT_DISPLAYREST
    ifn p_secrets_show 0
    {
        state ResetTile
        state ResetText
        set hudx_x 320
        set hudx_y 360
        set hudx_scale 32768
        set hudx_pal 8
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        ifg p_secrets_show 8
        {
            set hudx_alpha p_secrets_show
            sub hudx_alpha 92
        }
        else
        {
            set hudx_alpha 8
            sub hudx_alpha p_secrets_show
        }
        shiftl hudx_alpha 5
        clamp hudx_alpha 0 255
        set hudx_quote 12
        set temp p_secrets_area
        abs temp
        sub temp p_secrets_area_got
        switch temp
            case 0
                redefinequote 12 You are now missing %ld secrets in this area...
                break
            case 1
                redefinequote 12 You are still missing %ld secret in this area...
                break
            default
                redefinequote 12 You are still missing %ld secrets in this area...
                break
        endswitch
        qsprintf 12 12 temp
        set hudx_txtflags 2
        state DrawText640x480Screen
    }
endevent

//

var p_killfall
var p_killfall_msg
var p_killfall_buffer
eventloadactor A_KILLER_FALL
    geta .hitag se_hitag
    seta .hitag 0
    geta .lotag se_lotag
    seta .lotag 0
enda
useractor notenemy A_KILLER_FALL
    cstat 32768
    ifg se_hitag 0
    {
        ifg p_killfall 40
        {
            ifg counter 1
            {
                sub counter 1
                set counter2 0
            }
            else ife counter 1
            {
                add counter2 1
                clamp counter2 0 63
                set fade_amount counter2
                ife counter2 63 ifg p_killfall 40
                {
                    add counter3 1
                    ifg counter3 30
                    {
                        set temp sprite[player.i].htfloorz
                        sub temp 1024
                        ifl player.posz temp
                            setp .posz temp
                    }
                }
            }
        }
        else
        {
            set counter3 0
            set counter se_hitag
        }
    }
    ife player[].cursectnum sprite[].sectnum
    {
        ife fly 1
        {
            ife player[].movement_lock 15
                setp[].movement_lock 0

            set p_killfall 0
            ifg player[].posz sprite[].z
                set p_killfall -1
        }
        else ifg player[].posz sprite[].z
        {
            ifl p_killfall 0
                set p_killfall 0
            setp[].movement_lock 15
            ife p_killfall 0
                rand p_killfall_msg 2
            ifle p_killfall 40
            {
                set temp2 120
                set temp p_killfall
                shiftr temp 1
                add temp p_killfall
                clamp temp 0 80
                sub temp2 temp
                inittimer temp2
                getp[].poszv temp
                clamp temp 0 256
                setp[].poszv temp
                set temp2 0
                ifp ponground
                    nullop
                else
                {
                    ifp palive
                        ifl p_killfall 63
                            set temp2 1
                }
                ifhitspace ife temp2 1
                {
                    set p_killfall 40
                    setp[].sound_pitch 64
                    // this fixes an issue where you get a repeated screaming sound with god mode when
                    // you hit the floor and jumped while holding USE... but it was funny so we left it
                    /* ife userdef[].god 1
                    {
                        getp .truefz temp2
                        sub temp2 4096
                        ifge sprite[player.i].z temp2
                            nullop
                        else
                            globalsound S_SHELLY_HURTFATAL02
                    }
                    else */
                        globalsound S_SHELLY_HURTFATAL02
                    setp[].sound_pitch 0
                }
            }
            else
                inittimer 120
            ifl p_killfall 61
            {
                ifl p_killfall 20
                    add p_killfall 2
                else
                    add p_killfall 1
                ifg p_killfall 40
                {
                    getp[].poszv temp
                    shiftl temp 2
                    clamp temp 0 8192
                    setp[].poszv temp
                }
            }
            getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
            getp[].i temp2
            sub temp 512
            set temp3 0
            ifg sprite[temp2].z temp
                set temp3 1
            else
            {
                set temp sprite[temp2].htfloorz
                sub temp 128
                ifg sprite[temp2].z temp
                    set temp3 1
            }
            ife temp3 1
            {
                ifl p_killfall 5 ifp palive
                    set p_killfall 41
                ifg p_killfall 40
                {
                    addphealth -1000
                    ifn p_killfall 63 ifp pdead
                    {
                        globalsound S_GIBSPLODE03
                        globalsound S_IMPACT_HEADSHOT
                        set p_killfall 63
                        ifhitspace
                            set p_killfall_buffer 1
                    }
                }
                setp[].movement_lock 0
            }
        }
    }
    else ife player[].movement_lock 0 ifge p_killfall 0
        set p_killfall 0
enda

appendevent EVENT_DISPLAYMENU
    inittimer 120
endevent

// Killed text

appendevent EVENT_DISPLAYREST
    ifp palive
    ifn p_killfall 0
    ifl p_killfall 40
    {
        state ResetTile
        state ResetText
        set hudx_x 320
        set hudx_y 360
        set hudx_scale 40960
        set hudx_pal 10
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        ifg p_killfall 8
        {
            set hudx_alpha p_killfall
            sub hudx_alpha 32
        }
        else
        ifl p_killfall 0
        {
            set hudx_alpha 8
            add hudx_alpha p_killfall
        }
        else
        {
            set hudx_alpha 8
            sub hudx_alpha p_killfall
        }
        shiftl hudx_alpha 5
        ifl p_killfall 0
        {
            shiftr hudx_alpha 1
            add hudx_alpha 128
        }
        clamp hudx_alpha 0 255
        set hudx_quote 12
        ifl p_killfall 0
            redefinequote 12 You shouldn't be here.
        else
        {
            switch p_killfall_msg
                case 0
                    redefinequote 12 You're definitely going to die... Press USE to scream.
                    break
                case 1
                    redefinequote 12 You're falling to your death... Press USE to scream.
                    break
                case 2
                    redefinequote 12 You're about to smash against the ground... Press USE to scream.
                    break
            endswitch
        }
        set hudx_txtflags 2
        state DrawText640x480Screen
    }
endevent

//

appendevent EVENT_CHECKTOUCHDAMAGE

    ifg RETURN 49151
    {
        set temp RETURN
        sub temp 49152
        getav[temp].actor_moveable temp2
        ife temp2 1
        {
            getav[temp].actor_moveable_xv temp2
            set temp3 player[].posxv
            shiftr temp3 15
            ifl temp3 2 ifg temp3 -2
                set temp3 0
            add temp2 temp3
            setav[temp].actor_moveable_xv temp2

            getav[temp].actor_moveable_yv temp2
            set temp3 player[].posyv
            shiftr temp3 15
            ifl temp3 2 ifg temp3 -2
                set temp3 0
            add temp2 temp3
            setav[temp].actor_moveable_yv temp2
        }

    }
    else ifg RETURN 32767
    {
        set temp RETURN
        sub temp 32768
        ife wall[temp].overpicnum T_FORCEFIELD
            ifand wall[temp].cstat 64
            {
                getw[temp].pal temp7
                getw[temp].x temp2
                getw[temp].y temp3
                getw[temp].point2 temp4
                getw[temp4].x temp5
                getw[temp4].y temp6
                sub temp2 temp5
                sub temp3 temp6
                getangle temp temp2 temp3
                add temp 1536
                and temp 2047
                
                geta .ang temp2
                seta .ang temp
                set move_v sprite.xvel
                shiftr move_v 3
                add move_v 24
                clamp move_v 32 65536
                state move_actor
                shiftl move_xv 16
                shiftl move_yv 16
                
                seta .ang temp2
                getp .posxv temp2
                add temp2 move_xv
                setp .posxv temp2
                
                getp .posyv temp2
                add temp2 move_yv
                setp .posyv temp2
                ifl player.pals_time 20
                {
                    setp .pals 0 60
                    setp .pals 1 60
                    setp .pals 2 63
                    setp .pals_time 30
                    set temp RETURN
                    
                    espawn A_GENERIC_PARTICLE
                    getp .posz temp2
                    sub temp2 512
                    seta[RETURN].z temp2
                    seta[RETURN].xrepeat 120
                    setav[RETURN].particle_force_pal temp7
                    
                    espawn A_GENERIC_PARTICLE
                    getp .posz temp2
                    sub temp2 518
                    seta[RETURN].z temp2
                    seta[RETURN].xrepeat 120
                    setav[RETURN].particle_force_pal temp7
                    
                    espawn A_GENERIC_PARTICLE
                    getp .posz temp2
                    sub temp2 512
                    seta[RETURN].z temp2
                    seta[RETURN].xrepeat 123
                    setav[RETURN].particle_force_pal temp7
                    
                    espawn A_GENERIC_PARTICLE
                    getp .posz temp2
                    sub temp2 518
                    seta[RETURN].z temp2
                    seta[RETURN].xrepeat 123
                    setav[RETURN].particle_force_pal temp7
                    
                    for itervar range 10
                    {
                        espawn A_GENERIC_PARTICLE
                        getp .posz temp2
                        sub temp2 512
                        seta[RETURN].z temp2
                        seta[RETURN].xrepeat 128
                        ife temp7 0
                            set temp7 7
                        setav[RETURN].particle_force_pal temp7
                    }
                    
                    set RETURN temp
                    setp .sound_pitch 512
                    rand temp 2
                    add temp S_ENV_ZAP1
                    soundvar temp
                    rand temp 1
                    add temp S_MELEE_THUD01
                    soundvar temp
                    setp .sound_pitch 0
                }
                
                // getangle temp move_xv move_yv
            }
    }
endevent

var p_see_promptable 0 1
var p_prompt_count 0 1
var p_prompt_temp
var p_prompt_temp2
var p_prompt_temp3
var p_prompt_keypal 0 2
defstate do_lz_use_checkpic
    ldist p_prompt_temp hitsprite THISACTOR
    ife actorvar[hitsprite].actor_switch_usable 0
        break
    ifge p_prompt_temp 1024
        break
    switch sprite[hitsprite].picnum
        case A_ACCESSCARDSWITCH_SPAWN
        case A_ACCESSCARDSWITCH_OFF
        case A_ACCESSCARDSWITCH_ON
        case A_ACCESSCARDSWITCH2_ON
        case A_ACCESSCARDSWITCH2_OFF
            ifand sprite[hitsprite].cstat 32768
                nullop
            else
            {
                ifand g_do_use_prompt 1
                    or p_see_promptable 1
                ifand g_do_use_prompt 8
                {
                    or p_see_promptable 8
                    set p_prompt_keypal sprite[hitsprite].pal
                }
            }
            break
        case A_LIGHTSWITCH_ON
        case A_LIGHTSWITCH_OFF
        case A_ELEVATOR_DN_SWITCH_OFF
        case A_ELEVATOR_DN_SWITCH_ON
        case A_ELEVATOR_UP_SWITCH_OFF
        case A_ELEVATOR_UP_SWITCH_ON
        case A_DIPSWITCH_OFF
        case A_DIPSWITCH_ON
        case A_ROTARYSWITCH_OFF
        case A_ROTARYSWITCH_ON
        case A_LEVERSWITCH_OFF
        case A_LEVERSWITCH_ON
        case A_ISOLATORSWITCH_OFF
        case A_ISOLATORSWITCH_ON
        case A_BREAKERSWITCH_OFF
        case A_BREAKERSWITCH_ON
        case A_DIPSWITCH2_OFF
        case A_DIPSWITCH2_ON
        case A_PUSHBUTTONSWITCH_OFF
        case A_PUSHBUTTONSWITCH_ON
        case A_ROTARYSWITCH2_OFF
        case A_ROTARYSWITCH2_ON
        case A_LEVERSWITCH2_OFF
        case A_LEVERSWITCH2_ON
        case A_BREAKERSWITCH2_OFF
        case A_BREAKERSWITCH2_ON
        case A_LEVERSWITCH3_OFF
        case A_LEVERSWITCH3_ON
        case A_VALVESWITCH_1
        case A_VALVESWITCH_2
        case A_VALVESWITCH_1_CLOSE
        case A_VALVESWITCH_2_CLOSE
        case A_CORDSWITCH_OFF
        case A_CORDSWITCH_ON
            ifand sprite[hitsprite].cstat 32768
                nullop
            else ifand g_do_use_prompt 1
                or p_see_promptable 1
            break
        case A_BATONSWITCH_OFF
        case A_BATONSWITCH_ON
        case A_BATONSWITCH_TIMED
            ifand sprite[hitsprite].cstat 32768
                nullop
            else ifand g_do_use_prompt 4
                or p_see_promptable 4
            break
    endswitch
ends

defstate do_lz_use_checkdoor
    set p_prompt_temp hitx
    sub p_prompt_temp player.posx
    mul p_prompt_temp p_prompt_temp
    
    set p_prompt_temp2 hity
    sub p_prompt_temp2 player.posy
    mul p_prompt_temp2 p_prompt_temp2
    
    add p_prompt_temp p_prompt_temp2
    sqrt p_prompt_temp p_prompt_temp
    abs p_prompt_temp
    ifge p_prompt_temp 1280
        break
    ifn wall[hitwall].nextwall -1
    {
        set p_prompt_temp wall[hitwall].nextsector
        ifn p_prompt_temp -1
        {
            ife sect_activator[p_prompt_temp] 0
            {
                gets[p_prompt_temp].lotag p_prompt_temp2
                switch p_prompt_temp2
                    case 20
                    case 21
                    case 22
                    case 23
                    case 25
                        ifand g_do_use_prompt 2
                            or p_see_promptable 2
                        break
                endswitch
            }
        }
    }
ends

defstate do_lz_use_prompt
    ifg p_prompt_count 0
    {
        ifg p_prompt_count 90
            sub p_prompt_count 2
        else ifl p_prompt_count 11
            sub p_prompt_count 2
        else
            sub p_prompt_count 10
        clamp p_prompt_count 0 65536
    }
    ife LEVEL 0
    {
        ife g_do_use_prompt 0
            break
    }
    else
    {
        ife EP_MAIN 0 ifl LEVEL 3 ifg p_see_promptable 0
        {
            ifand p_see_promptable 4
            {
                // for other platforms this should be 49 (quick key) if anything)
                getgamefuncbind 441 19
                redefinequote 440 ^80Use the baton ^10%s ^80to spark these terminals.
                qsprintf 440 440 441
            }
            ifand p_see_promptable 8
            {
                switch p_prompt_keypal
                    case PAL_KEYCARD_1
                    default
                        qstrcpy 440 88
                        break
                    case PAL_KEYCARD_2
                        qstrcpy 440 89
                        break
                    case PAL_KEYCARD_3
                        qstrcpy 440 90
                        break
                    case PAL_KEYCARD_4
                        qstrcpy 440 91
                        break
                endswitch
            }
            ifge p_prompt_count 90
                nullop
            else
            {
                ife p_prompt_count 0
                    set p_prompt_count 100
                else
                {
                    ifl p_prompt_count 11
                        add p_prompt_count 90
                    else
                        set p_prompt_count 90
                }
            }
        }
        break
    }
    ifg p_see_promptable 0
    {
        ifand p_see_promptable 4
        {
            getgamefuncbind 441 49
            redefinequote 440 ^80Use the baton ^10%s ^80to spark these terminals.
            qsprintf 440 440 441
        }
        else ifand p_see_promptable 8
        {
            ife player.got_access 0
            {
                qstrcpy 440 87
                redefinequote 441  ^92 to use terminals like these.
                qstrcat 440 441
            }
            else
            {
                getgamefuncbind 441 6
                redefinequote 440 ^92Press ^80USE ^10%s ^92to unlock this terminal with the ^14Access Card^92.
                qsprintf 440 440 441
            }

            set p_prompt_temp sprite.htg_t 0
            mod p_prompt_temp 8
            ife p_prompt_temp 0
                ifn player.got_access 0
                    ife flash_keycards 0
                        add flash_keycards 2
        }
        else
        {
            getgamefuncbind 441 6
            redefinequote 440 ^80Press USE ^10%s ^80to interact with the world.
            qsprintf 440 440 441
        }
        ifge p_prompt_count 90
            nullop
        else
        {
            ife p_prompt_count 0
                set p_prompt_count 100
            else
            {
                ifl p_prompt_count 11
                    add p_prompt_count 90
                else
                    set p_prompt_count 90
            }
        }
        ifhitspace
            ifg g_do_use_prompt 0
            {
//                ifand p_see_promptable 1
                    ifand g_do_use_prompt 1
                        xor g_do_use_prompt 1
//                 ifand p_see_promptable 2
                    ifand g_do_use_prompt 2
                        xor g_do_use_prompt 2
            }
    }
ends

appendevent EVENT_DISPLAYREST
    ifg p_prompt_count 0
    {
        state ResetText
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        set hudx_quote 440
        set hudx_x 320
        set hudx_y 360
        set hudx_scale 40960
        set hudx_shade 10
        set hudx_pal 1
        set hudx_txtflags 2
        ifg p_prompt_count 90
        {
            set hudx_alpha p_prompt_count
            sub hudx_alpha 90
            shiftl hudx_alpha 4
            clamp hudx_alpha 0 255
        }
        else ifl p_prompt_count 11
        {
            set hudx_alpha p_prompt_count
            sub hudx_alpha 10
            inv hudx_alpha
            shiftl hudx_alpha 4
            clamp hudx_alpha 0 255
        }
        else
            set hudx_alpha 0
        state DrawText640x480Screen_WithShadow
    }
endevent

// The first step is to do a hitscan. We can then determine if the player is actually
// facing a ladder.
state do_hitscan
    set player_target -1
    set lam_hit -1
    set p_see_promptable 0
    ifn LEVEL 0
    {
        ifand g_do_use_prompt 1
            xor g_do_use_prompt 1
        ifand g_do_use_prompt 2
            xor g_do_use_prompt 2
        ifand g_do_use_prompt 8
            xor g_do_use_prompt 8
    }
    else ife LEVEL 0
        ife VOLUME 4
        {
            ifand g_do_use_prompt 1
                xor g_do_use_prompt 1
            ifand g_do_use_prompt 2
                xor g_do_use_prompt 2
            ifand g_do_use_prompt 8
                xor g_do_use_prompt 8
        }
    set nogrunting 0
    getp[].ang h_ang
    getp[].horiz h_zvel
    ife p_laddermounted 1
        set h_zvel 100
    sub h_zvel 100
    shiftl h_zvel 11
    inv h_zvel
    cos h_cos h_ang
    sin h_sin h_ang
    hitscan player[].posx player[].posy player[].posz player[].cursectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_ALLFLAGS // every flag
    ifn hitsect -1
    {
        set ref_hitsect hitsect
        set ref_hitx hitx
        set ref_hity hity
        set ref_hitz hitz
    }
    else
        set ref_hitsect -1
    ifn hitsprite -1
    {
        getav[hitsprite].actor_switch actor_switch
        ife actor_switch 1
        {
            setav[hitsprite].actor_switch_usable 1
            set nogrunting 1
            state do_lz_use_checkpic
        }
        set actor_switch 0
    }
    hitscan player[].posx player[].posy player[].posz player[].cursectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_CSTAT512 // CLIPMASK_STD // CLIPMASK_ALLFLAGS // basics + sprite cstat 512
    ifn hitsprite -1
    {
        getav[hitsprite].actor_switch actor_switch
        ife actor_switch 1
        {
            setav[hitsprite].actor_switch_usable 1
            set nogrunting 1
            state do_lz_use_checkpic
        }
        set actor_switch 0
    }
    hitscan player[].posx player[].posy player[].posz player[].cursectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_CSTAT64ONLY // CLIPMASK_STD // CLIPMASK_ALLFLAGS // basics + sprite cstat 512 // 64/one sided only
    ifn hitsprite -1
    {
        ife sprite[hitsprite].picnum A_LADDER
        {
            ifand sprite[hitsprite].cstat 2048
                nullop
            else ife sprite[hitsprite].pal 5
                set p_quickladder hitsprite
        }
    }
    hitscan player[].posx player[].posy player[].posz player[].cursectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_STD // CLIPMASK_ALLFLAGS // basics only
    set bb_x hitx
    set bb_y hity

    ifn hitwall -1
    {
        ife wall[hitwall].nextwall -1
        {
            ife wall[hitwall].hitag 0
            {
                ifg sector[hitsect].lotag -1
                    ifl sector[hitsect].lotag 3
                    {
                        set lam_hit hitwall
                        add lam_hit 32768
                        set lam_hitx hitx
                        set lam_hity hity
                        set lam_hitz hitz
                        set lam_hitsect hitsect
                    }
            }
        }
        else
        {
            ife wall[hitwall].nextsector -1
            {
                getw[hitwall].nextwall temp3
                ife wall[hitwall].hitag 0
                    ife wall[temp3].hitag 0
                    {
                        ifg sector[hitsect].lotag -1
                            ifl sector[hitsect].lotag 3
                            {
                                set lam_hit hitwall
                                add lam_hit 32768
                                set lam_hitx hitx
                                set lam_hity hity
                                set lam_hitz hitz
                                set lam_hitsect hitsect
                            }
                    }
            }
            else
            {
                getw[hitwall].nextwall temp3
                ife wall[hitwall].hitag 0
                    ife wall[temp3].hitag 0
                    {
                        getw[hitwall].nextsector temp3
                        
                        ifg sector[hitsect].lotag -1
                            ifl sector[hitsect].lotag 3
                            {
                                ifg sector[temp3].lotag -1
                                    ifl sector[temp3].lotag 3
                                    {
                                        set lam_hit hitwall
                                        add lam_hit 32768
                                        set lam_hitx hitx
                                        set lam_hity hity
                                        set lam_hitz hitz
                                        set lam_hitsect hitsect
                                    }
                            }
                    }
            }
        }
        state do_lz_use_checkdoor
    }
    ifn hitsprite -1
    {
        ifand sprite[hitsprite].cstat 32768
            nullop
        else ifand sprite[hitsprite].cstat 32
            nullop
        else ifand sprite[hitsprite].cstat 16
            ifand sprite[hitsprite].cstat 1
                ifand sprite[hitsprite].cstat 256
                    ife sprite[hitsprite].statnum STAT_DEFAULT
                    {
                        set lam_hit hitsprite
                        add lam_hit 49152
                        set lam_hitx hitx
                        set lam_hity hity
                        set lam_hitz hitz
                        set lam_hitsect hitsect
                    }
        ifand tiledata[sprite[hitsprite].picnum].gameflags 32
        {
            ifg sprite[hitsprite].extra 0
            {
                set player_target hitsprite
                getav[hitsprite].weapon1_validtarget temp2
                ldist temp3 hitsprite THISACTOR
                ife sprite[player_target].picnum A_ARCHANGEL
                    ife sprite[player_target].pal 77 // invisible
                        set temp3 W1ALT_DIST
                ifl temp3 W1ALT_DIST ife temp2 1 ifge weapon1_alt 15
                {

                    set temp3 1
                    set temp4 0
                    whilen temp3 7
                    {
                        set temp2 num_targets[temp3]
                        ife temp2 hitsprite
                        {
                            set temp4 1
                            set temp3 7
                        }
                        else
                            add temp3 1
                    }
                    ifn temp4 1
                    {
                        set temp2 1
                        whilen temp2 7
                        {

                            set temp3 num_targets[temp2]
                            ife temp3 -1
                            {
                                setarray num_targets[temp2] hitsprite
                                add temp2 1
                                setarray num_targets[temp2] hitsprite
                                setav[hitsprite].need_target_icon 1
                                sound S_LOVEALT_LOCK
                                changespritestat hitsprite STAT_ACTOR
                                set temp2 7
                            }
                            else
                                add temp2 1
                        }
                    }
                }
            }
        }
        else
        {
            set player_target -1
            ife sprite[hitsprite].picnum P_BOWLINGBOMB // dumb hack because actions aren't vars
            {
                switch sprite[hitsprite].htg_t 4
                    case AC_BOWLINGBOMB_IDLE
                        set player_target hitsprite
                        break
                endswitch
            }
            switch sprite[hitsprite].picnum
                case A_BARREL_1
                case A_BARREL_2
                case A_SHOCKCANISTER
                case A_SHOCKCANISTER_DMG
                case A_FIREEXT
                case A_CANISTER_1
                case A_CANISTER_2
                        set player_target hitsprite
                    break
            endswitch
            getav[hitsprite].actor_switch actor_switch
            ife actor_switch 1
            {
                setav[hitsprite].actor_switch_usable 1
                set nogrunting 1
                state do_lz_use_checkpic
            }
            set actor_switch 0
            getav[hitsprite].actor_moveable temp2

            ife temp2 1
            {
                dist temp3 hitsprite player[].i
                ifl temp3 640
                {
                    set nogrunting 1
                    ifhitspace
                    {
                        ife p_dragobj -1
                            set p_dragobj hitsprite
                        else ifn p_dragobj hitsprite
                            set p_dragobj -2
                    }
                    else ifn p_dragobj -2
                        set p_dragobj -1
                    ife p_dragobj hitsprite
                    {
                        getav[hitsprite].actor_moveable_xv temp2
                        set temp3 player[].posxv
                        shiftr temp3 15
                        ifl temp3 2 ifg temp3 -2
                            set temp3 0
                        add temp2 temp3
                        setav[hitsprite].actor_moveable_xv temp2

                        getav[hitsprite].actor_moveable_yv temp2
                        set temp3 player[].posyv
                        shiftr temp3 15
                        ifl temp3 2 ifg temp3 -2
                            set temp3 0
                        add temp2 temp3
                        setav[hitsprite].actor_moveable_yv temp2
                    }
                }
                else ifhitspace
                {
                    ife p_dragobj -1
                        set p_dragobj -2
                    else ifg temp3 RETRIEVEDISTANCE
                        set p_dragobj -1
                }
                else ifn p_dragobj -1
                    set p_dragobj -1

            }
            else ifhitspace
            {
                ife p_dragobj -1
                    set p_dragobj -2
            }
            else ifn p_dragobj -1
                set p_dragobj -1
        }
    }
    else ifhitspace
    {
        ife p_dragobj -1
            set p_dragobj -2
    }
    else ifn p_dragobj -1
        set p_dragobj -1
ends

var diffbob 1 1

var buffer_menu
defstate do_weapon_bob
    getp[].i temp
    ifp ponground
        geta[temp].xvel temp
    else set temp 0
    ifn userdef[].pause_on 0
        break
    else ifand player[].gm MODE_MENU
        set buffer_menu 10

    ifg buffer_menu 0
    {
        sub buffer_menu 1
        break
    }

    /* redefinequote 11 %ld
    qsprintf 11 11 temp
    quote 11 */

    set temp2 0
    ifn press_forward 0 ifn press_backward 0 ife press_left 0 ife press_right 0
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else ifn press_left 0 ifn press_right 0 ife press_forward 0 ife press_backward 0
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else ife press_forward 0 ife press_backward 0 ife press_left 0 ife press_right 0
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else ifp pjumping
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else ifp pfalling
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else ife temp 0
    {
        mul weapon_sway2 3
        shiftr weapon_sway2 2
    }
    else
    {
        clamp temp 0 136
        mul temp diffbob
        ifg temp 96
            sub temp 40
        /* redefinequote 11 %ld
        qsprintf 11 11 temp
        quote 11 */
        ife bobcounter2 0
        {
            add weapon_sway2 temp
            rand temp2 511
            add temp2 1537
            shiftl temp 2
            ifl temp 64
                div temp2 3
            ifg weapon_sway2 temp2
            {
                set bobcounter2 1
                add hazard_breath 1
                getp[].i p_xvel
                geta[p_xvel].xvel p_xvel
                ifg p_xvel 96
                    set p_steptype 1
                ife player[].spritebridge 1
                {
                    getp[].sbs surface_type
                    geta[surface_type].picnum surface_type
                }
                else
                    set surface_type p_override_floorpicnum
                set step_temp 0
                ifp ponground
                {
                    set step_temp 1
                    ife p_need_land_sound 2
                        set p_need_land_sound 0
                }
                ife step_temp 1
                    ife fly 0
                        state player_footstep
            }
        }
        else ife bobcounter2 1
        {
            sub weapon_sway2 temp
            rand temp2 511
            add temp2 1537
            inv temp2
            shiftl temp 2
            ifl temp 64
                div temp2 3
            ifl weapon_sway2 temp2
            {
                set bobcounter2 0
                add hazard_breath 1
                getp[].i p_xvel
                geta[p_xvel].xvel p_xvel
                ifg p_xvel 96
                    set p_steptype 1
                ife player[].spritebridge 1
                {
                    getp[].sbs surface_type
                    geta[surface_type].picnum surface_type
                }
                else
                    set surface_type p_override_floorpicnum
                set step_temp 0
                ifp ponground
                {
                    set step_temp 1
                    ife p_need_land_sound 2
                        set p_need_land_sound 0
                }
                ife step_temp 1
                    ife fly 0
                        state player_footstep
            }
        }
    }
    ifg p_halt_footstep 0
        sub p_halt_footstep 1
    ifp ponground
    {
        getp[].i p_xvel
        geta[p_xvel].xvel p_xvel
        ife p_xvel 5
        {
            ife player[].spritebridge 1
            {
                getp[].sbs surface_type
                geta[surface_type].picnum surface_type
            }
            else
                set surface_type p_override_floorpicnum
            ife fly 0
                ife p_halt_footstep 0
                    state player_footstep
            set p_halt_footstep 2
        }
        else
            set p_halt_footstep 0
    }
    
    set temp weapon_sway2
//    shiftr temp 7
    div temp 150
    set weapon_xoffset2 temp

    abs temp
    shiftl temp 1
    div temp 3
    inv temp
    set gun_pos2 temp
    add gun_pos2 64


ends

appendevent EVENT_DISPLAYREST

    ifn p_bob totalclock
    {
        set diffbob totalclock
        sub diffbob p_bob
        geti[].avel temp
        ifn player[].transporter_hold 0
            set temp 0
        else ifg userdef[].pause_on 0
            set temp 0
        add weapon_look_ang temp
        ife p_nextlevel -1
            state do_weapon_bob
        set p_bob totalclock
        ifn weapon_look_ang 0
        {

            shiftl weapon_look_ang 8
            shiftr weapon_look_ang 1
            shiftr weapon_look_ang 8
        }

        getp[].ohoriz temp
        sub temp player[].horiz
        ife gun_pos_type 0
        {
            shiftr temp 2

            add weapon_horiz temp

            ifn weapon_horiz 0
            {
                shiftl weapon_horiz 8
                shiftr weapon_horiz 1
                shiftr weapon_horiz 8
            }
        }
        else
        {
            shiftr temp 3
            add weapon_horiz temp
        }

        ifn gun_pos_type gun_pos_type_last
        {
            setp[].horiz 100

            setp[].ohoriz 100

            set gun_pos_type_last gun_pos_type

        }

    }
endevent

defstate player_jump_sound
    set temp player[].i
    ifg sprite[temp].xvel 96
    {
        rand temp2 63
        setp[].sound_pitch temp2
        ife fly 0
            sound S_SHELLY_GRUNT3
        setp[].sound_pitch 0
    }
    else ifge sprite[temp].xvel 80
        set p_jump_sound 5

    set p_steptype 2
    ife player[].spritebridge 1
    {
        getp[].sbs surface_type
        geta[surface_type].picnum surface_type
    }
    else
        set surface_type p_override_floorpicnum
    ife fly 0
        state player_footstep
ends
appendevent EVENT_JUMP
    ifn p_eol 0
    {
        set RETURN -1
        break
    }
    state player_jump_sound
endevent

appendevent EVENT_CROUCH
    ifn p_eol 0
    {
        set RETURN -1
        set p_crouch_z 0
    }
endevent

eventloadactor A_LADDER
    cstator 32785
    geta .hitag se_hitag
    seta .hitag 0
    geta .lotag se_lotag
    seta .lotag 0
    ifspritepal 5
        cstat 32848
    changespritestat THISACTOR STAT_CLIPBARRIER
enda

eventloadactor A_CLIP_BARRIER
    cstator 32768
    cstator 1
    geta[].cstat st_do_once
    geta[].hitag se_hitag
    seta[].hitag 0

    ife sprite[].pal 9
    {
        seta[].cstat 32768
        seta[].pal 0
    }
    ifn sprite[].statnum STAT_MASTER_MOVER
        changespritestat THISACTOR STAT_CLIPBARRIER
enda

// xvel 96 = run
action NOPLAYER             5 1 5 1 1
action PLAYER_STAND         5 1 5 1 1
action PLAYER_WALK          15 4 5 1 24
action PLAYER_RUN           15 4 5 1 14
action PLAYER_JUMP          40 1 5 1 1
action PLAYER_FALL          45 1 5 1 1
action PLAYER_CROUCH        60 1 5 1 1
action PLAYER_CROUCH_WALK   60 4 5 1 20
action PLAYER_CROUCH_RUN    60 4 5 1 16
action PLAYER_BATON         85 3 5 1 8
action PLAYER_LADDER        110 1 5 1 1
action PLAYER_LADDER_CLIMB  110 4 5 1 8
action PLAYER_SWIM          135 1 5 1 52
action PLAYER_SWIMMING      135 4 5 1 20
action PLAYER_SWIMMING_FAST 135 4 5 1 16
action PLAYER_HIT           155 1 5 1 1
action PLAYER_SHOCKED       155 2 5 1 1
action PLAYER_DYING         170 7 1 1 1
action PLAYER_DEAD          176 1 1 1 1

var timer

appendevent EVENT_WORLD
    ife need_autosave 2
    {
        save 9
        set need_autosave 3
    }
    else ife need_autosave 1
    {
        ife save_icon 0
            set save_icon 30
        set need_autosave 2
    }
endevent
onevent EVENT_PROCESSINPUT
    ife need_autosave 2
    {
        seti[].avel 0
        seti[].horz 0
    }
endevent

// Draw player lifeless arm

appendevent EVENT_DISPLAYROOMSEND
    ifp pdead ifn p_dead_face 2
    {
        state ResetTile
        set hudx_x -200
        set hudx_y p_dead_count
        sub hudx_y 119
        inv hudx_y
        set hudx_scale 73728
        set hudx_angle 256
        set hudx_tilenum 5939
        guniqhudid 100
        state DrawTile640x480WeaponNoBob
        guniqhudid 0
    }
endevent

//

appendevent EVENT_PROCESSINPUT
    ifn p_eol 0
        seti[].horz 0
endevent
appendevent EVENT_LOOKUP ifn p_eol 0 set RETURN -1 endevent
appendevent EVENT_LOOKDOWN ifn p_eol 0 set RETURN -1 endevent
appendevent EVENT_AIMUP ifn p_eol 0 set RETURN -1 endevent
appendevent EVENT_AIMDOWN ifn p_eol 0 set RETURN -1 endevent
appendevent EVENT_LOOKLEFT ifn p_eol 0 set RETURN -1 endevent
appendevent EVENT_LOOKRIGHT ifn p_eol 0 set RETURN -1 endevent

// reset player text / "you died" message

appendevent EVENT_DISPLAYREST
    ifp pdead
    {
        ifn fade_amount 0
        {
            set hudx_alpha 32
            sub hudx_alpha fade_amount
            shiftl hudx_alpha 3
            clamp hudx_alpha 0 255
            state black_background_alpha
        }
        state ResetTile
        ifg fade_amount 24
        {
            set hudx_x 320
            set hudx_y 240
            set hudx_shade 56
            sub hudx_shade fade_amount
            clamp hudx_shade 0 127
            set hudx_tilenum 5470
            set hudx_alpha -129 // smooth fade over the black background
            state DrawTile640x480Screen
            set hudx_shade 0
            set hudx_alpha 0
        }
        state ResetText
        set hudx_x 320
        set hudx_y 40
        set hudx_scale 32768
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 17
        set hudx_quote 12
        redefinequote 12 PRESS USE TO RELOAD
        ife VOLUME EP_HORDE
        ifg userdef[].screen_size 0
            add hudx_y 84 // 35
        or hudx_txtflags TEXT_XCENTER
        state DrawText640x480Screen
        ife g_timed_game 1
        {
            set temp reset_time_input
            sub temp 9000
            inv temp
            div temp 450
            add hudx_y 15
            redefinequote 12 ^10%ld
            qsprintf 12 12 temp
            set hudx_scale 36864
            state DrawText640x480Screen
        } 
    }
endevent

// Crosshair

defstate draw_pistol_alt_cross
    ifge weapon1_alt 11
    {
        ife num_targets[1] -1
        {
            set hudx_alpha weapon1_alt_time
            shiftl hudx_alpha 3
            set temp hudx_alpha
            shiftl temp 5
            add hudx_scale temp
        }
        else
        {
            set hudx_alpha 0
            ifl weapon1_alt_time 8
            {
                set temp weapon1_alt_time
                sub temp 8
                inv temp
                shiftl temp 11
                add hudx_scale temp
            }
        }
        
        clamp hudx_scale 0 40960
        set hudx_orientation 0
        set hudx_shade 12
        set hudx_pal 9
        set temp w1_sparkle
        shiftl temp 5
        ifn player_target -1
            ifand tiledata[sprite[player_target].picnum].gameflags 32
                shiftl temp 1
        and temp 2047
        set hudx_angle temp
        state DrawTile640x480GameScreen
    }
ends

appendevent EVENT_DISPLAYCROSSHAIR
    set RETURN -1
    ifp pdead
        break
    state ResetTile
    set hudx_x 320
    set temp player[].look_ang
    shiftr temp 1
    sub hudx_x temp
    set hudx_y 240
    ife player.over_shoulder_on 1
    {
        add hudx_y 52
        set temp camerahoriz
        sub temp 100
        div temp 8
        abs temp
        sub hudx_y temp

        set temp bb_x
        sub temp camerax
        mul temp temp
        
        set temp2 bb_y
        sub temp2 cameray
        mul temp2 temp2
        
        add temp temp2
        sqrt temp temp
        abs temp
        shiftr temp 7
        clamp temp -50 50
        sub hudx_y temp
    }
    ife shot_cross_buns 1
        set hudx_pal 9
    scalevar hudx_scale hudx_scale userdef[].crosshairscale 100
    set hudx_tilenum 2523
    set hudx_orientation 1
    set hudx_alpha -129
    ifge weapon1_alt 11
        set hudx_shade 5
    state DrawTile640x480GameScreen
    state draw_pistol_alt_cross
endevent

//

/*
appendevent EVENT_DISPLAYSTART
    // setp[].over_shoulder_on 0
endevent
*/
appendevent EVENT_DISPLAYROOMS
    ifp pdead
    {
        ifn p_dead_ang -1
        {
            set att_return cameraang
            sub att_return p_dead_ang

            ifg att_return 1023
                sub att_return 2047
            ifl att_return -1023
                add att_return 2047
            shiftr att_return 4
            ife att_return 0
                set att_return p_dead_ang
            else
                add cameraang att_return
            // set cameraang p_dead_ang
        }
        iffloordistl 1
        {
            getp[].posz temp2
            set temp p_dead_count
            shiftr temp 1
            shiftl temp 10
            add temp2 temp
            set cameraz temp2
            getp[].i temp
            getp[].truefz temp2
            sub temp2 512
            ifg cameraz sprite[temp].z
                set cameraz sprite[temp].z
            ifg cameraz temp2
                set cameraz temp2
            setp .posz cameraz
        }
    }
endevent

appendevent EVENT_RESETPLAYER
    setp[].clipdist 128
    ife keepstatssafe 2
        set keepstatssafe 0
    else
    {
        ifg p_killed 0
            set keepstatssafe 1
        else ifg p_secrets 0
            set keepstatssafe 1
    }
    set boss_fillhp 0
endevent

var p_lastz
var fallcount
var killshit

appendevent EVENT_LOADGAME
    set load_game 1
    set p_horde_restart -1
endevent

defstate reset_131072
    set load_text 0
    set save_noclip -1
    set keepstatssafe 0
    set p_nextlevel -1
    set p_nextepisode -1
    set p_nextlevel_tag -1
    set p_nextlevel_xoff 0
    set p_nextlevel_yoff 0
    set p_nextlevel_zoff 0
    set p_nextlevel_zvel 0
    set p_nextlevel_ang 0
    set p_nextlevel_horiz 0
    set p_nextlevel_look_ang 0
    set p_nextlevel_rtc 0
    set p_killed 0
    set p_killed_left 0
    set p_secrets 0
    set p_secrets_left 0
    set p_access_saved 0
    set p_hazard_amount 0
    set p_pizza_health 0
    set p_pizza_count 0
    set p_trigger_next 0
    set p_secrets_area 0
    set p_secrets_area_got 0
    set p_airleft 390
    set fly 0
    set skip_see 0
    set footloose 0
    set pause_ai 0
    set see_breadcrumbs 0
    set last_see_breadcrumbs 0
    set p_have_dart 0
    set game_session_stat 0
    
    set p_hazard_amount 0
    set p_firstgrenade 0
    set p_idle_timer 0
    ifg p_pup_bomb_time 0
    {
        setp .curr_weapon p_pup_bomb_before
        getp .ammo_amount p_pup_bomb_before hud_ammo
        setp .kickback_pic p_pup_old_kickback
        set p_pup_reset_fire 8
        setp .weapon_pos 9
        setp .ammo_amount WEAPON_BOWLINGBOMB p_pup_bomb_ammo
        setp .gotweapon WEAPON_BOWLINGBOMB p_pup_bomb_got
    }
    set p_pup_bomb_time 0
    set p_pup_bomb_before 0
    set p_pup_bomb_ammo 0
    set p_pup_bomb_got 0
    set p_pup_old_kickback 0
    set p_pup_reset_fire 0
    set p_pup_radar_time 0
    set p_pup_damage_time 0
    set p_pup_jump_time 0

    set p_needleveltransition 0
    set load_tile 0
    set load_black 1
    set last_ssize 0
    set p_nextlevel_ladder 0

    set g_playtics 0
    set p_armor_type 0
    set p_lastline 0
    set p_skiplastgib -1
    set p_skiplastkill -1
    set weapon1_realclip 0
    set weapon1_cleared 0
    set weapon2_realclip 0
    set weapon3_realclip 0
    set weapon6_realclip 0
    set weapon7_realclip 0
    set yahahayoufoundme 0
    set yahahayoufoundme2 0
    set other_smg_toggle 0
    set other_smg 0
	
	// am stuff
	set p_ammocap_bonus 0
	set p_update_ammocap 0
ends

array tempwall 262144

var killplayer

appendevent EVENT_CHECKFLOORDAMAGE
    ifg p_hazard_amount 0
        set RETURN -1
endevent

var tacotastic 0 1
var old_horiz 0 1
var old_kickback 0 1
appendevent EVENT_PROCESSINPUT
    ife player .curr_weapon WEAPON_BOWLINGBOMB ifn p_eol 0
    {
        geti .bits temp
        or temp INPUT_FIRE
        seti .bits temp
    }
endevent

var udscount 0 2
defstate find_sbs
    add udscount 1
    ifg udscount 5
    {
        set udscount 0
        getp .cursectnum temp6
        updatesectorz player.posx player.posy player.posz temp6
        ifn temp6 -1
            setp .cursectnum temp6
    }
    getp .posz temp6
    set temp5 player .autostep_sbw
    shiftr temp5 1
    sub temp6 temp5
    getzrange player.posx player.posy temp6 player.cursectnum temp temp3 temp4 temp5 1 CLIPMASK0
    seta .htfloorz temp4
    ifge temp5 49152
    {
        sub temp5 49152
        set temp4 sprite[temp5].z
        sub temp4 sprite.z
        abs temp4
        ifl temp4 256 ifand sprite[temp5].cstat 32
        {
            setp .spritebridge 1
            setp .sbs temp5
        }
        else
        {
            set temp4 sprite[temp5].z
            sub temp4 player.posz
            abs temp4
            ifl temp4 256 ifand sprite[temp5].cstat 32
            {
                setp .spritebridge 1
                setp .sbs temp5
            }
        }
    }
    ife player.spritebridge 0
    {
        set temp7 player.clipdist
        sub temp7 1
        clamp temp7 1 65536
        getzrange player.posx player.posy temp6 player.cursectnum temp temp3 temp4 temp5 temp7 CLIPMASK0
        seta .htfloorz temp4
        ifge temp5 49152
        {
            sub temp5 49152
            set temp4 sprite[temp5].z
            sub temp4 sprite.z
            abs temp4
            ifl temp4 256 ifand sprite[temp5].cstat 32
            {
                setp .spritebridge 1
                setp .sbs temp5
            }
            else
            {
                set temp4 sprite[temp5].z
                sub temp4 player.posz
                abs temp4
                ifl temp4 256 ifand sprite[temp5].cstat 32
                {
                    setp .spritebridge 1
                    setp .sbs temp5
                }
            }
        }
        else ifge temp5 16384
        {
            sub temp5 16384
            getflorzofslope temp5 sprite[].x sprite[].y temp4
            set temp3 temp4
            sub temp4 sprite.z
            abs temp4
            ifl temp4 256
            {
                ifn temp5 player.cursectnum
                    gets[temp5].floorpicnum p_override_floorpicnum
                else
                    gets[player.cursectnum].floorpicnum p_override_floorpicnum
            }
            else
            {
                iffloordistl 1
                {
                    ifn temp5 player.cursectnum
                        gets[temp5].floorpicnum p_override_floorpicnum
                    else
                        gets[player.cursectnum].floorpicnum p_override_floorpicnum
                }
            }
        }
    }
ends

defstate pickups_bomb
    ifg p_pup_reset_fire 0

        shiftr p_pup_reset_fire 1
    ife p_pup_bomb_time 0
    {
        getp .curr_weapon p_pup_bomb_before
        getp .ammo_amount WEAPON_BOWLINGBOMB p_pup_bomb_ammo
        getp .gotweapon WEAPON_BOWLINGBOMB p_pup_bomb_got
        getp .kickback_pic p_pup_old_kickback
        
        ifg pup_bomb_safety 0
        {
            ifn player.curr_weapon WEAPON_BOWLINGBOMB
                set pup_bomb_safety 0
            else ife player.kickback_pic 0
                set pup_bomb_safety 0
        }
    }
    else
    {
        set p_face_grin 6
        ife p_pup_bomb_time 1
        {
            setp .curr_weapon p_pup_bomb_before
            getp .ammo_amount p_pup_bomb_before hud_ammo
            setp .kickback_pic p_pup_old_kickback
            set p_pup_reset_fire 8
            setp .weapon_pos 9
            setp .ammo_amount WEAPON_BOWLINGBOMB p_pup_bomb_ammo
            setp .gotweapon WEAPON_BOWLINGBOMB p_pup_bomb_got
        }
        else
        {
            setp .ammo_amount WEAPON_BOWLINGBOMB 100
            setp .curr_weapon WEAPON_BOWLINGBOMB
            setp .gotweapon WEAPON_BOWLINGBOMB 1
            set bbomb_hold_count 120
            set press_alt 0
            ifg player.kickback_pic 3
            {
                set temp 0
                ifl player.kickback_pic 11
                    set temp 1
                else ifg player.kickback_pic 12
                    set temp 1
                ife temp 1
                {
                    getp .kickback_pic temp
                    add temp 1
                    setp .kickback_pic temp
                }
            }
        }
        set pup_bomb_safety 1
        sub p_pup_bomb_time 1
    }
ends

defstate hard_landing_fix
    ifn player[].hard_landing 0
    {
        set tacotastic 10
        setp[].return_to_center 0
    }
    else ife tacotastic 0
        getp[].horiz old_horiz
    ifn tacotastic 0
    {
        sub tacotastic 1
        setp[].return_to_center 0
        ifn player[].horiz old_horiz
        {
            set temp old_horiz
            sub temp player[].horiz
            shiftr temp 1
            add temp player[].horiz
            setplayer[].horiz temp
        }
    }
ends
var gfy
var gfy_f
appendevent EVENT_PROCESSINPUT
    ifg p_pup_jump_time 0
    {
        ifvarand input[].bits INPUT_JUMP
        {
            ife gfy 0
                set gfy -1
            ifn player.jumping_counter 0
                ifl player.jumping_counter 540
                    ifl gfy 0
                        set gfy 0
            ife gfy_f 0
                ifl gfy 0
                    set gfy 0
            set gfy_f 0
        }
        else
            set gfy_f 1
    }
endevent

defstate pickups_doublejump
    ifg p_pup_jump_time 0
    {
        ifn player.jumping_counter 0
        {
                ifl player.jumping_counter 360
                {
                    set gfy 0
                    sound S_BOOTS_JUMP0
                }
        }           
        ifp ponground
            set gfy 0
        else ifl gfy 0
        {
            ifg player.poszv -1440
            {
                sound S_BOOTS_JUMP1
                setp .poszv -2048
                set gfy 1
                setp .jumping_counter 0
                setp .falling_counter 0
            }
            else 
                set gfy 0
        }
        sub p_pup_jump_time 1
    }
ends

defstate pickups_doubledamage
    ifg p_pup_damage_time 0
    {
        soundonce S_ENVELOPE
        sub p_pup_damage_time 1
        set temp p_pup_damage_time
        mod temp 30
        getp .sound_pitch temp2
        setp .sound_pitch -444
        ife temp 0
            sound S_MP_ON
        setp .sound_pitch temp2
    }
    else ifactorsound THISACTOR S_ENVELOPE
        stopactorsound THISACTOR S_ENVELOPE
ends

defstate player_do_ladders
    set p_ladderid -1
    ifn hitsprite -1 // assign id of ladder
    {
        geta[hitsprite].picnum temp
        ife temp A_LADDER
        {
            ifand sprite[hitsprite].cstat 2048
                nullop
            else
                set p_ladderid hitsprite
        }
    }
    ife p_ladderid -1
        ifn p_quickladder -1
            set p_ladderid p_quickladder

    ife grate_target 1 // disable ladders if we are trying to use a grate
        set p_ladderid -1
    set grate_target 0
    ifn p_ladderid -1 // if we found a ladder
    {
        set p_ladder_last p_ladderid // this is in case we need a reference
        set nogrunting 1 // disable USE grunts (this is used in a lot of places)
        ldist temp THISACTOR p_ladderid

        // split all of the checks into a list with only one output
        // to reduce the number of times a chunk of code has to be called

        set temp2 0
        set temp4 0
        ifn press_forward 0
            set temp2 1
        ifhitspace
            set temp2 1
        else
            ife sprite[p_ladderid].pal 5
                set temp2 0
        ifg temp 500
        {
            ifhitspace
            {
                ifg temp 1024
                    set temp2 0
                else
                    set temp4 512
            }
            else
                set temp2 0
        }
        geta[p_ladderid].z temp3
        add temp3 1024
        getp .posz temp7
        set temp8 0
        iffloordistl 1 // adjust for water and crouch
        {
            set temp9 0
            ifonwater
                set temp9 1
            ifp pducking
                set temp9 1
            ife temp9 1
            {
                getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp6
                sub temp6 9728
                ifg player.posz temp6
                {
                    setp .posz temp6
                    set temp8 1
                }
            }
        }

        ifg player[].posz temp3
            set temp2 0
        setp .posz temp7
        ife p_nextlevel_ladder 1
            set temp2 1

        ife p_nextlevel -1
            set p_nextlevel_ladder 0
        ife p_laddermounted 0 ife temp2 1
        {
            // After determining distance we can then save all of our ladder positions
            // and lock the player in place.
            set p_laddermounted 1

            ife temp8 1
                setp .posz temp6
            
            ifn temp4 0
            {
                mul temp4 sprite[p_ladderid].yrepeat
                set temp5 sprite[p_ladderid].z
                sub temp5 temp4
                ifl player[].posz temp5
                {
                    add temp5 4096
                    setp[].posz temp5
                }
            }
            set temp sprite[p_ladderid].ang
            ife sprite[p_ladderid].pal 5
            {
                add temp 1024
                and temp 2047
                geta[p_ladderid].z temp3
                add temp3 1536
                add temp3 LADDERSPEED
                ifl player[].posz temp3
                    setp[].posz temp3
            }
            cos temp2 temp // we should be slightly away from the ladder and wall
            sin temp3 temp
            shiftr temp2 6
            shiftr temp3 6

            set temp sprite[p_ladderid].x
            add temp temp2
            set p_ladder_x temp

            set temp sprite[p_ladderid].y
            add temp temp3
            set p_ladder_y temp
            // the above code will place the player slightly in front
            // of the ladder rather than potentially in a wall

            geta[p_ladderid].ang temp
            ife sprite[p_ladderid].pal 5
            {
                add temp 1024
                and temp 2047
            }
            add temp -1024
            and temp 2047
            set p_ladder_ang temp

            getp[].posz temp
            sub temp 1536
            set p_ladder_z temp
            set p_need_laddersound 11
        }
        else iffloordistl 0
            set p_laddermounted 0
        else ifg temp 500
            set p_laddermounted 0

        ife p_laddermounted 1
        {
            setp[].poszv 0
            getp[].horiz temp
            iffloordistl 1
                nullop
            else
                set p_need_land_sound 0
            ifn temp 100
                set p_ladder_horiz 100

            // These four settings prevent hardcoded "falling"
            // behavior while the player is in the air.
            setp[].falling_counter 0
            setp[].jumping_counter 0
            setp[].jumping_toggle 0
            setp[].on_ground 1

            setp[].cursectnum sprite[p_ladderid].sectnum

            ifn press_forward 0
            {
                sub p_ladder_z LADDERSPEED
                ife p_ladder_other 1
                {
                    set temp LADDERSPEED
                    shiftr temp 1
                   // add temp LADDERSPEED
                    sub p_ladder_z temp
                    ife p_need_laddersound 0
                        set p_need_laddersound 10
                }
                ife rendmode 0
                    set p_ladder_horiz 199 // view tips up while climbing...
                else
                    set p_ladder_horiz 149 // adjust for other modes
                ife sprite[p_ladderid].pal 9
                    set p_ladder_push 1
                else
                    set p_ladder_push 2
            }
            ifn press_backward 0
            {
                add p_ladder_z LADDERSPEED
                ife p_ladder_other 1
                {
                    set temp LADDERSPEED
                    shiftr temp 1
                   // add temp LADDERSPEED
                    add p_ladder_z temp
                    ife p_need_laddersound 0
                        set p_need_laddersound 10
                }
                ife rendmode 0
                    set p_ladder_horiz 0 // and down while descending
                else
                    set p_ladder_horiz 49 // adjust for other modes
            }
            ife p_ladder_other 0
                set p_ladder_other 1
            else
                set p_ladder_other 0

            setp[].posx p_ladder_x
            setp[].posy p_ladder_y
            setp[].posz p_ladder_z
            setp[].ang p_ladder_ang


            getp[].weapon_pos temp
            ifle temp 9
                add temp 5
            else
                set temp 12
            setp[].weapon_pos temp
			ifge temp 12
                setp[].last_weapon -1

            set temp p_ladder_horiz
            sub temp player[].horiz
            shiftr temp 2
            getp[].horiz temp2
            add temp2 temp
            setp[].horiz temp2
        }
    }
    else // resolve when no longer near ladder
    {
        set p_laddermounted 0
        ife p_ladder_push 1 // some ladders also cause forward momentum
        {
            setp .autostep 0 // set autostep to 0 so that we can pop up to the top
            setp .autostep_sbw 0
            ifn p_ladder_last -1
            {
                ldist temp p_ladder_last THISACTOR
                ifg temp 64
                    set p_ladder_last -1
            }
            ifn press_forward 1
            {
                ife p_ladder_last -1
                {
                    sub p_ladder_z LADDERSPEED
                    sub p_ladder_z LADDERSPEED
                }
                else // failsafe to raise the player up to the top of the ladder sprite
                {
                    set temp4 tilesizy[sprite[p_ladder_last].picnum]
                    shiftl temp4 2
                    mul temp4 sprite[p_ladder_last].yrepeat
                    geta[p_ladder_last].z p_ladder_z
                    sub p_ladder_z temp4
                    sub p_ladder_z LADDERSPEED
                    sub p_ladder_z LADDERSPEED
                }
                ifp ponground
                    nullop
                else
                    setp[].posz p_ladder_z
                set move_v 120
                state move_actor
                getp[].posxv temp
                add temp move_xv
                setp[].posxv temp
                getp[].posyv temp
                add temp move_yv
                setp[].posyv temp
            }
            set p_ladder_push 0
        }
        else ife p_ladder_push 2 // see above minus forward push
        {
            setp .autostep 0
            setp .autostep_sbw 0
            ifn p_ladder_last -1
            {
                ldist temp p_ladder_last THISACTOR
                ifg temp 64
                    set p_ladder_last -1
            }
            ife p_ladder_last -1
            {
                sub p_ladder_z LADDERSPEED
                sub p_ladder_z LADDERSPEED
                sub p_ladder_z 4096
            }
            else
            {
                set temp4 tilesizy[sprite[p_ladder_last].picnum]
                shiftl temp4 2
                mul temp4 sprite[p_ladder_last].yrepeat
                geta[p_ladder_last].z p_ladder_z
                sub p_ladder_z temp4
                sub p_ladder_z LADDERSPEED
                sub p_ladder_z LADDERSPEED
            }
            ifp ponground
                nullop
            else
                setp[].posz p_ladder_z
            set p_ladder_push 0
        }
        else
            setp .autostep_sbw 1024
        set p_ladder_other 0
        set p_ladder_last -1
    }
    ifn p_need_laddersound 0 // self explanatory
    {
        ife p_need_laddersound 11
        {
            set p_need_laddersound 9
            getp[].sound_pitch temp3
            setp[].sound_pitch -128
            
            set temp4 0
            ifn p_ladder_last -1
            {
                ifg actorvar[p_ladder_last].se_hitag 0
                    ifl actorvar[p_ladder_last].se_hitag 16
                       set temp4 1
            }
            ife temp4 0
            {
                rand temp2 3
                add temp2 S_STEP_LADDER01
                soundvar temp2
            }
            else
            {
                rand step_temp 2
                set surface_type actorvar[p_ladder_last].se_hitag
                state steptype0
                soundvar step_temp
            }
            setp[].sound_pitch temp3
        }
        else ife p_need_laddersound 10
        {
            // rand temp2 3
            // add temp2 S_STEP_LADDER01
            // soundvar temp2
            // soundvar temp2
            set temp4 0
            ifn p_ladder_last -1
            {
                ifg actorvar[p_ladder_last].se_hitag 0
                    ifl actorvar[p_ladder_last].se_hitag 16
                       set temp4 1
            }
            ife temp4 0
            {
                rand temp2 3
                add temp2 S_STEP_LADDER01
                soundvar temp2
            }
            else
            {
                getp[].sound_pitch temp3
                setp[].sound_pitch 480
                rand step_temp 2
                set surface_type actorvar[p_ladder_last].se_hitag
                state steptype0
                soundvar step_temp
                setp[].sound_pitch temp3
            }            
        }
        sub p_need_laddersound 1
    }
    // This just resets horiz once we're done with a ladder.
    ife p_laddermounted 0 ifn p_ladder_horiz 100
    {
        set temp p_ladder_horiz
        sub temp 100
        ifl temp 50
            shiftr temp 1
        else
            shiftr temp 2
        sub p_ladder_horiz temp
        // addlogvar p_ladder_horiz
        ifl p_ladder_horiz 105 ifg p_ladder_horiz 95
            set p_ladder_horiz 100

        getp[].horiz temp
        sub temp p_ladder_horiz
        inv temp
        add temp player[].horiz
        setp[].horiz temp
    }
ends


appendevent EVENT_USE
    ifl early_use 3
        set RETURN -1
endevent

defstate prevent_death_flight
    ifp palive
    {
        ifn player.cursectnum -1
            getp .cursectnum p_stayput_sector
        seta .htactorstayput -1
    }
    else
        seta .htactorstayput p_stayput_sector
ends

defstate load_black_fade
    ifn load_black 0
    {
        ifhitspace ife debug_fade 1
            shiftr fade_amount 1
        add load_black 1
        ifg load_black 5
            set load_black 0
    }
    ifg blackened 7
    {
        palfrom 0 0 0 0
        set blackened 0
        set p_secrets_show 0
    }
ends

defstate reset_horde_mode
    ife p_horde_restart 1
    {
        set p_horde_restart 0
        for temp range 64
            clearmapstate temp
        state reset_131072
        resetplayerflags 8 // 8 later
    }
ends

defstate player_squish
    ife userdef[].clipping 0
    {
        ifn player[].cursectnum -1
        {
            ifn p_goodsect -1
            {
                ifn sprite[].sectnum -1
                {
                    getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
                    getceilzofslope sprite[].sectnum sprite[].x sprite[].y temp2
                    sub temp2 temp
                    abs temp2
                    ifand sector.ceilingstat 512
                        ifand sector.ceilingstat 1024
                            set temp2 3072
                    ifand sector.floorstat 512
                        ifand sector.floorstat 1024
                            set temp2 3072
                    ifl temp2 3072 // changed from ifgapzl 12, which also accounted for sprites
                    {
                        iffloordistl 4
                        {
                            addphealth -10
                            ifdead ife p_dead_count 0
                            {
                                soundonce S_GIBSPLODE03
                                soundonce S_IMPACT_HEADSHOT
                            }
                        }
                    }
                }
            }
        }
    }
ends

var idle_track_xvel 0 2
defstate player_idle_timers
    setp .sound_pitch 0
    setp[].crack_time 777
    setp[].knuckle_incs 0
    set temp p_idle_timer
    sub temp IDLE_TIME
    set temp7 0
    ifg temp 24
        ifl temp 63
            set temp7 temp
    ifn p_eol 0
       set p_idle_timer -1
    else ifp pdead 0
       set p_idle_timer -1
    else ifg sprite.xvel 30
    {
        ifl temp 25
            set p_idle_timer -1
        else ifg temp 32
        {
            set temp2 idle_track_xvel
            sub temp2 sprite.xvel
            abs temp2
            ifg temp2 48
                set p_idle_timer -1
            set idle_track_xvel sprite.xvel
        }
    }
    ifn press_jump 0
    {
        ifl p_idle_timer 25
            set p_idle_timer -1
    }
    ifn player[].hard_landing 0
        set p_idle_timer -1
    ifn p_laddermounted 0
        set p_idle_timer -1
    else ifg p_dragobj -1
        set p_idle_timer -1
    else ifhitspace
        set p_idle_timer -1
    ife press_alt 0
    {
        ife player.kickback_pic 0
        {
            ife p_have_dart 0
            {
                ife player.weapon_pos 0
                {
                    add p_idle_timer 1
                    set temp IDLE_TIME
                    add temp 90
                    ifg p_idle_timer temp
                        set p_idle_timer 0
                    else
                    {
                        
                        set temp p_idle_timer
                        sub temp IDLE_TIME
                        ifg p_idle_timer IDLE_TIME
                            ifg temp 10
                                ifl temp 38
                                    add p_idle_timer 1
                        ife temp 25
                            sound S_SHELLY_COINFLIP
                        ife temp 63
                            sound S_SHELLY_COINCATCH
                    }
                }
                else
                    set p_idle_timer 0
            }
            else
                set p_idle_timer 0
        }
        else
            set p_idle_timer 0
    }
    else
        set p_idle_timer 0
    ifle p_idle_timer 0
        ifn temp7 0
        {
            eshoot A_COIN1
            geta .ang temp
            add temp 1920
            and temp 2047
            geta[RETURN].zvel temp2
            geta[RETURN].xvel temp3
            seta[RETURN].zvel 0
            seta[RETURN].ang temp
            seta[RETURN].xvel 512
            ssp RETURN 0
            seta[RETURN].xvel temp3
            seta[RETURN].zvel temp2
            sub temp7 25
            shiftl temp7 8
            geta[RETURN].z temp
            sub temp temp7
            seta[RETURN].z temp

            shiftr temp7 1
            seta[RETURN].zvel -temp7
        }
        setp .sound_pitch 0
ends

var vend_i -1 2
defstate player_check_vend
    ifl vend_i 2
        add vend_i 1
    ifhitspace
    {
        ifg vend_i 1
        {
            ifn hitwall -1
            {
                ife wall[hitwall].picnum T_VENDING_MACHINE
                {
                    espawn A_VENDBETWEEN
                    seta[RETURN].cstat 32768
                    seta[RETURN].x hitx
                    seta[RETURN].y hity
                    seta[RETURN].z hitz
                    seta[RETURN].sectnum hitsect
                    dist temp RETURN THISACTOR
                    seta[RETURN].xrepeat 0
                    
                    ifl temp 1536
                    {
                        set nogrunting 1
                        stopactorsound player.i S_SHELLY_SEARCHTALK1
                        stopactorsound player.i S_SHELLY_SEARCHTALK2
                        stopactorsound player.i S_SHELLY_SEARCH1
                        stopactorsound player.i S_SHELLY_SEARCH2
                        stopactorsound player.i S_SHELLY_SEARCH3
                        stopactorsound player.i S_SHELLY_SEARCH4
                        stopactorsound player.i S_SHELLY_SEARCH5
                        stopactorsound player.i S_SHELLY_SEARCH6
                        stopactorsound player.i S_SHELLY_SEARCH7
                        stopactorsound player.i S_SHELLY_SEARCH8
                        seta[RETURN].xrepeat 1
                        setav[RETURN].vend_i hitwall
                    } 
                }
                else ife wall[hitwall].picnum T_VENDING_MACHINE2
                {
                    espawn A_VENDBETWEEN2
                    seta[RETURN].cstat 32768
                    seta[RETURN].x hitx
                    seta[RETURN].y hity
                    seta[RETURN].z hitz
                    seta[RETURN].sectnum hitsect
                    dist temp RETURN THISACTOR
                    seta[RETURN].xrepeat 0
                    
                    ifl temp 1536
                    {
                        set nogrunting 1
                        stopactorsound player.i S_SHELLY_SEARCHTALK1
                        stopactorsound player.i S_SHELLY_SEARCHTALK2
                        stopactorsound player.i S_SHELLY_SEARCH1
                        stopactorsound player.i S_SHELLY_SEARCH2
                        stopactorsound player.i S_SHELLY_SEARCH3
                        stopactorsound player.i S_SHELLY_SEARCH4
                        stopactorsound player.i S_SHELLY_SEARCH5
                        stopactorsound player.i S_SHELLY_SEARCH6
                        stopactorsound player.i S_SHELLY_SEARCH7
                        stopactorsound player.i S_SHELLY_SEARCH8
                        seta[RETURN].xrepeat 1
                        setav[RETURN].vend_i hitwall
                    } 
                }
            }
        }
        set vend_i 0
    }
ends

useractor notenemy A_VENDBETWEEN
    ifl vend_i 0
        killit
    else
    {
        cstat 32768
        getw[vend_i].picnum temp
        ifn temp T_VENDING_MACHINE
        {
            ifge temp T_VENDING_MACHINE_END
            {
                stopactorsound THISACTOR S_AMB_ESCALATOR
                stopactorsound THISACTOR S_VENDING_DISPENSE
                killit
            }
            ifl temp T_VENDING_MACHINE_VEND
            {
                stopactorsound THISACTOR S_AMB_ESCALATOR
                stopactorsound THISACTOR S_VENDING_DISPENSE
                killit
            }
        }
        switch temp
            case T_VENDING_MACHINE
                set temp T_VENDING_MACHINE_VEND
                actorsound player.i S_COIN_INSERT
                setp .sound_pitch -480
                sound S_AMB_ESCALATOR
                setp .sound_pitch 0
                break
            default
                add counter 1
                ifg temp T_VENDING_MACHINE_DROP
                {
                    add counter 3
                    stopactorsound THISACTOR S_AMB_ESCALATOR
                    ifrnd 32
                        ifpdistl 3072
                            ife p_lastline 0
                            {
                                ife p_lastline 0
                                {
                                    stopactorsound player[].i S_SHELLY_SEARCHTALK1
                                    stopactorsound player[].i S_SHELLY_SEARCHTALK2
                                    stopactorsound player[].i p_lastline
                                    setarray sound_playback[p_lastline] 0
                                    set p_lastline S_SHELLYVO_MISCVEND
                                    actorsound player[].i p_lastline
                                }
                            }
                }
                ifge counter 5
                {
                    add temp 1
                    set counter 0
                }
                break
        endswitch
        setw[vend_i].picnum temp

        ife temp T_VENDING_MACHINE_DROP
            soundonce S_VENDING_DISPENSE
        ifge temp T_VENDING_MACHINE_END
        {
            stopactorsound THISACTOR S_AMB_ESCALATOR
            stopactorsound THISACTOR S_VENDING_DISPENSE
            killit
        }
        ifl temp T_VENDING_MACHINE_VEND
        {
            stopactorsound THISACTOR S_AMB_ESCALATOR
            stopactorsound THISACTOR S_VENDING_DISPENSE
            killit
        }
    }
enda

useractor notenemy A_VENDBETWEEN2
    ifl vend_i 0
        killit
    else
    {
        cstat 32768
        getw[vend_i].picnum temp
        ifn temp T_VENDING_MACHINE2
        {
            ifge temp T_VENDING_MACHINE2_END
            {
                stopactorsound THISACTOR S_AMB_ESCALATOR
                stopactorsound THISACTOR S_VENDING_DISPENSE
                killit
            }
            ifl temp T_VENDING_MACHINE2_VEND
            {
                stopactorsound THISACTOR S_AMB_ESCALATOR
                stopactorsound THISACTOR S_VENDING_DISPENSE
                killit
            }
        }
        switch temp
            case T_VENDING_MACHINE2
                set temp T_VENDING_MACHINE2_VEND
                actorsound player.i S_COIN_INSERT
                setp .sound_pitch -480
                sound S_AMB_ESCALATOR
                setp .sound_pitch 0
                break
            default
                add counter 1
                ifg temp T_VENDING_MACHINE2_DROP
                {
                    add counter 3
                    stopactorsound THISACTOR S_AMB_ESCALATOR
                    ifrnd 32
                        ifpdistl 3072
                            ife p_lastline 0
                            {
                                ife p_lastline 0
                                {
                                    stopactorsound player[].i S_SHELLY_SEARCHTALK1
                                    stopactorsound player[].i S_SHELLY_SEARCHTALK2
                                    stopactorsound player[].i p_lastline
                                    setarray sound_playback[p_lastline] 0
                                    set p_lastline S_SHELLYVO_MISCVEND
                                    actorsound player[].i p_lastline
                                }
                            }
                }
                ifge counter 5
                {
                    add temp 1
                    set counter 0
                }
                break
        endswitch
        setw[vend_i].picnum temp

        ife temp T_VENDING_MACHINE2_DROP
            soundonce S_VENDING_DISPENSE
        ifge temp T_VENDING_MACHINE2_END
        {
            stopactorsound THISACTOR S_AMB_ESCALATOR
            stopactorsound THISACTOR S_VENDING_DISPENSE
            killit
        }
        ifl temp T_VENDING_MACHINE2_VEND
        {
            stopactorsound THISACTOR S_AMB_ESCALATOR
            stopactorsound THISACTOR S_VENDING_DISPENSE
            killit
        }
    }
enda


defstate read_bbomb_mode
    ifg load_game 0
    {
        set load_game 0
        readarrayfromfile gamestate_temp 115
        set temp5 gamestate_temp[0]
        ife bbomb_mode 1
            or temp5 2
        else ifand temp5 2
            xor temp5 2
        readarrayfromfile gamestate 115
        setarray gamestate[0] temp5
        writearraytofile gamestate 115
    }
ends

defstate eol_preview
    ifg need_eol 0
    {
        add need_eol 1
        ifg need_eol 90
        {
            set need_eol 0
            for temp sprofstat STAT_ACTOR
            {
                ife sprite[temp].picnum A_EOL
                {
                    ife sprite[temp].pal 9
                    {
                        seta[temp].x player[].posx
                        seta[temp].y player[].posy
                        seta[temp].z player[].posz
                        seta[temp].sectnum player[].cursectnum
                    }
                }
            }
        }
    }
ends

defstate electrify_all_enemies
    ifn fryall 0
    {
        set temp2 0
        set temp9 60
        for temp sprofstat STAT_ZOMBIEACTOR
        {
            ifand tiledata[sprite[temp].picnum].gameflags 32
                changespritestat temp STAT_ACTOR
        }

        for temp sprofstat STAT_ACTOR
        {
            ifand tiledata[sprite[temp].picnum].gameflags 32
            {
                ifg sprite[temp].extra 0
                {
                    ifg temp9 0
                    {
                        getav[temp].enemy_shocked temp3
                        ife temp3 0
                        {
                            seta[temp].htextra 15
                            geta[temp].extra temp3
                            sub temp3 sprite[temp].htextra
                            ifle temp3 0 ifn sprite[temp].picnum A_MECHSECT
                                setav[temp].enemy_gibbed 1
                            seta[temp].htpicnum P_SHOCKER
                            setav[temp].enemy_shocked 2
                            seta[temp].htowner player[].i
                        }
                        else ife sprite[temp].picnum A_DEACON ifn temp3 2
                        {
                            set temp4 sprite.htg_t 0
                            mod temp4 4
                            ife temp4 0
                            {
                                setav[temp].enemy_shocked 2
                                seta[temp].htextra 3
                                seta[temp].htpicnum P_SHOCKER
                                geta[temp].extra temp3
                                sub temp3 sprite[temp].htextra
                                setav[temp].enemy_minigun_dmg 200
                                ifle temp3 0 
                                    setav[temp].enemy_gibbed 1
                                seta[temp].htowner player[].i
                            }
                        }
                        else ife sprite[temp].picnum A_WENTEKO ifn temp3 2
                        {
                            set temp4 sprite.htg_t 0
                            mod temp4 16
                            ife temp4 0
                            {
                                setav[temp].enemy_shocked 2
                                seta[temp].htextra 60
                                seta[temp].htpicnum P_SHOCKER
                                geta[temp].extra temp3
                                sub temp3 sprite[temp].htextra
                                setav[temp].enemy_minigun_dmg WENTEKO_HEALTH
                                ifle temp3 0 
                                    setav[temp].enemy_gibbed 1
                                seta[temp].htowner player[].i
                            }
                        }
                    }
                    stopactorsound temp S_CULTIST_HIT1
                    stopactorsound temp S_CULTIST_HIT2
                    stopactorsound temp S_CULTIST_PAIN1
                    stopactorsound temp S_CULTIST_PAIN2
                    stopactorsound temp S_CULTIST_PAIN3
                    stopactorsound temp S_CULTIST_PAIN4
                    stopactorsound temp S_CULTIST_PAINBIG1
                    stopactorsound temp S_CULTIST_PAINBIG2
                    stopactorsound temp S_CULTIST_PAINBIG3
                    stopactorsound temp S_CULTIST_PAINHUGE
                    set temp2 1
                }
                else
                    sub temp9 1
            }
        }
        ife temp2 0
            set fryall 0
    }
ends

defstate fix_jump_physics
    ifn sector[].lotag 1 ifn sector[].lotag 2 ifcount 2
    {
        ife player[].jumping_counter 0
        {
            ifg player[].posz p_lastz
            {
                iffloordistl 4
                {
                    ife fallcount 0
                        set fallcount 1
                    ifn player[].jumping_toggle 0
                       add fallcount 2
                    ife fallcount 1
                    {
                        getinput[].bits temp
                        ifand temp INPUT_JUMP
                        {
                            add fallcount 1
                            setp[].jumping_counter 181
                            setp[].jumping_toggle 1
                            // palfrom 30 0 30 30
                            state player_jump_sound
                        }
                    }
                    else
                    {
                        getinput[].bits temp

                        ifand temp INPUT_JUMP
                        {
                            // This fixes an engine-side bug (apparently) where you
                            // can press JUMP after a fall but before you hit the
                            // ground and when you land you will hop/jump.
                            // This maybe be desireable behavior?
                            // setp[].jumping_toggle 1
                        }
                        else ife player[].jumping_toggle 0
                            set fallcount 0
                    }
                }
                else
                {
                    ifle fallcount 1 ife player[].jumping_toggle 0
                    {

                        {
                            getinput[].bits temp
                            ifand temp INPUT_JUMP
                            {
                                add fallcount 2
                                setp[].jumping_counter 181
                                setp[].poszv -181
                                setp[].jumping_toggle 1
                                setp[].falling_counter 0
                                state player_jump_sound
                            }
                        }
                    }
                    add fallcount 1
                }
            }
            else
            {
                iffloordistl 2 ife player[].jumping_toggle 0 ifg fallcount 0
                {
                    set fallcount 0
                }
            }
        }
        else
            set fallcount 10
        set p_lastz player[].posz
    }
    else
        set p_lastz player[].posz
ends

defstate infinite_minigun
    ife minigun 1
    {
        setp[].max_ammo_amount WEAPON_MINIGUN 200
        setp[].gotweapon WEAPON_MINIGUN 1
        ife player[].ammo_amount WEAPON_MINIGUN 0
            setp[].ammo_amount WEAPON_MINIGUN 200
        setp[].curr_weapon WEAPON_MINIGUN
    }
    else ife minigun 0
    {
        set minigun -1
        setp[].max_ammo_amount WEAPON_MINIGUN 0
        setp[].gotweapon WEAPON_MINIGUN 0
        setp[].ammo_amount WEAPON_MINIGUN 0
        ife player[].curr_weapon WEAPON_MINIGUN
            setp[].curr_weapon 0
    }

ends

defstate bbomb_mode_hpammo
    ife bbomb_mode 1
    {
        setp[].gotweapon 0 1
        setp[].gotweapon 1 0
        setp[].gotweapon 2 0
        setp[].gotweapon 3 0
        setp[].gotweapon 4 0
        setp[].gotweapon 5 1
        setp[].gotweapon 6 0
        setp[].gotweapon 7 0
        setp[].gotweapon 8 0
        ifl player[].ammo_amount 5 18
        {
            setp[].ammo_amount 5 18
        }
        ifn player.curr_weapon 0
            setp[].curr_weapon 5
        setp[].max_player_health 25
        ifg sprite[].extra 25
            seta[].extra 25
    }
    else {
		// update player's current health max
		state update_p_maxhp
	}
ends

defstate kills_secrets_discards
    ife VOLUME EP_MAIN
    {
        or c_256 1
        or c_256 2
    }
    ifl p_add_ks 2
    {
        add p_add_ks 1
        ife p_add_ks 2
        {
            ife VOLUME EP_PREVIEW
                ife LEVEL 0
                    quote 222
            globalsound 1
            stopsound 1
            for temp sprofstat STAT_FX
            {
                ife sprite[temp].picnum RESPAWN
                {
                    set temp7 0
                    ifand sprite[temp].zvel 32
                        ifl userdef[].player_skill 2
                            set temp7 1
                    ifand sprite[temp].zvel 16
                        ifl userdef[].player_skill 3
                            set temp7 1
                    ifand sprite[temp].zvel 64
                        ifl userdef[].player_skill 4
                            set temp7 1
                    ife temp7 0
                    {
                        ifand tiledata[sprite[temp].hitag].gameflags 32
                            ife keepstatssafe 0
                                add p_killed 1
                    }
                    else
                    {
                        seta[temp].xrepeat 0
                        changespritestat temp STAT_ACTOR
                    }
                }
            }
            for temp sprofstat STAT_NEWRESPAWN
            {
                ifand tiledata[actorvar[temp].se_hitag].gameflags 32
                {
                    set temp7 0
                    getav[temp].tp_owner temp2
                    clamp temp2 0 65536
                    ifand temp2 32
                        ifl userdef[].player_skill 2
                            set temp7 1
                    ifand temp2 16
                        ifl userdef[].player_skill 3
                            set temp7 1
                    ifand temp2 64
                        ifl userdef[].player_skill 4
                            set temp7 1
                    ife temp7 0
                    {
                        ife keepstatssafe 0
                        {
                            ifand sprite[temp].cstat 32
                                nullop
                            else
                                add p_killed 1
                        }
                    }
                    else
                    {
                        seta[temp].xrepeat 0
                        setav[temp].se_lotag 0
                        changespritestat temp STAT_ACTOR
                    }
                }
            }
            ife keepstatssafe 0
            {
                add p_killed player[].max_actors_killed
                add p_secrets player[].max_secret_rooms
                ifle p_secrets_area 0
                {
                    ifl p_secrets_area 0
                    {
                        set temp 0
                        ifn player.got_access 0
                        {
                            set p_need_discard_quote 2
                            setp .got_access 0

                        }
                        for temp range 64
                            clearmapstate temp
                    }
                    set p_secrets_area player[].max_secret_rooms
                    set p_secrets_area_got 0
                }
                else
                    add p_secrets_area player[].max_secret_rooms
            }
            set keepstatssafe 0
        }
    }
    ifg p_need_discard_quote 0
    {
        sub p_need_discard_quote 1
        ife p_need_discard_quote 0
            quote 223
    }
    /* qputs 11 %ld
    qsprintf 11 11 p_actors_killed_last
    quote 11 */
    ifn p_secret_last player[].secret_rooms
    {
        set p_secret_last player[].secret_rooms
        add p_secrets_left 1
        add p_secrets_area_got 1
        sound S_SECRET
        redefinequote 115 gamestate.bin
        readarrayfromfile gamestate 115
        set temp gamestate[4]
		add temp 1
		setarray gamestate[4] temp
		writearraytofile gamestate 115
		or cheevo_tracker 512
    }
    ifn p_killed_last player[].actors_killed
    {
        getp[].actors_killed temp
        sub temp p_killed_last
        set p_killed_last player[].actors_killed
        add p_killed_left temp
    }
    ifg flash_keycards 0
        set p_card_holdtime 0
    ifn player.got_access 0
    {
        add p_card_holdtime 1
        ifge p_card_holdtime CARD_HOLD_TIME
            add flash_keycards 3
    }
    else
        set p_card_holdtime 0
    /* redefinequote 11 killed: %ld total: %ld
    qsprintf 11 11 p_killed p_killed_left
    quote 11 */
ends

defstate kill_everything
    ifn killshit 0 ifge p_add_ks 2
    {
        for temp sprofstat STAT_ZOMBIEACTOR
        {
            changespritestat temp STAT_ACTOR
            seta[temp].httimetosleep 300
        }
        set temp2 -1
        for temp sprofstat STAT_ACTOR
        {
            ifl temp2 4
            {
                ifand tiledata[sprite[temp].picnum].gameflags 32
                {
                    set temp3 sprite[temp].extra
                    add temp3 1
                    shiftl temp3 1
                    clamp temp3 1 65536
                    seta[temp].htextra temp3
                    seta[temp].htpicnum BULLET
                    seta[temp].htowner player[].i
                    add temp2 1
                }
            }
        }
        set temp2 -1
        for temp sprofstat STAT_FX
        {
            ife temp2 -1
            {
                ife sprite[temp].picnum RESPAWN
                {
                    ifand tiledata[sprite[temp].hitag].gameflags 32
                    {
                        getav[temp].st_do_once temp3
                        ife temp3 0
                        {
                            set temp2 sprite[temp].lotag
                            setav[temp].st_do_once 1
                        }
                    }
                }
            }
        }
        ifn temp2 -1
            operaterespawns temp2
        ife killshit -1 // temp until I hack in something for A_NEWRESPAWN
        {
            for temp2 range 32768
                setarray preloadactivations[temp2] 1
        }
        add killshit 1
        ife killshit 0
            set killshit 1
        
        ifg killshit 32767
            set killshit 0
    }
ends

defstate guntest_setup
    // use to test gun art
/*
    ife gtest 1
    {
        setp[].max_ammo_amount 9 112
        setp[].gotweapon 9 1
        ife player[].ammo_amount 9 0
            setp[].ammo_amount 9 112
    }
    else
    {
        setp[].max_ammo_amount 9 0
        setp[].gotweapon 9 0
        setp[].ammo_amount 9 0
        ife player[].curr_weapon 9
            setp[].curr_weapon 0
    }
*/
ends

defstate crouch_momentum
    ifp pducking
    {
		set p_crouching 1
        ifg p_crouch_z 1
        {
            sub p_crouch_z 1
            getp[].poszv temp
            set temp2 p_crouch_z
            sub temp2 8
            inv temp2
            shiftl temp2 9
            add temp temp2
            ifg temp 1280
                set temp 1280
            setp[].poszv temp
        }

        ife p_crouch_z 0
            set p_crouch_z 8
        ifinwater
            set p_crouch_z 0
    }
    else {
        set p_crouch_z 0
		set p_crouching 0
	}
ends

defstate cap_screensize
    ifn last_ssize userdef[].screen_size
    {
        switch userdef[].screen_size
        case 0
            quote 210
            break
        case 4
            quote 211
            break
        case 8
            quote 212
            break
        endswitch
        set last_ssize userdef[].screen_size
    }
ends

defstate saved_posxyz
    // these are used for handlers on SE65
    set temp p_save_x
    add temp p_save_y
    add temp p_save_z
    ifn temp 0
    {
        setp[].posx p_save_x
        setp[].posy p_save_y
        setp[].posz p_save_z
        setp[].ang p_save_ang
        setp[].horiz p_save_horiz
        setp[].cursectnum p_save_sectnum
        set p_save_x 0
        set p_save_y 0
        set p_save_z 0
    }
ends

defstate calc_weapon1_alt_time
    ifl userdef.player_skill 2
        break  
    add weapon1_alt_skill 1
    set temp 4
    sub temp userdef.player_skill
    shiftr temp 1
    
    ifg weapon1_alt_skill temp
    {
        set temp userdef.player_skill
        shiftr temp 1
        add weapon1_alt_time temp
    }
ends

var camsound
appendevent EVENT_WORLD
    getp[myconnectindex].newowner temp
    ifle temp -1
    {
        ifn camsound 0
        {
            setp[myconnectindex].sound_pitch -256
            actorsound player[myconnectindex].i S_CAM_SWITCH
            setp[myconnectindex].sound_pitch 0
        }
        set camsound 0
    }
    else
    {
        ife camsound 0
            actorsound player[myconnectindex].i S_CAM_SWITCH
        else ifn camsound temp
            actorsound player[myconnectindex].i S_SWITCH_BUTTON02
        set camsound temp
    }
endevent
actor APLAYER MAXPLAYERHEALTH NOPLAYER
    state prevent_death_flight

    ifg p_terminate_hs 0
    {
        add p_terminate_hs 1
        ife p_terminate_hs 15
        {
            set p_terminate_hs 0
            stopactorsound THISACTOR S_HESKEL_STATIC
        }
    }
    ifn dartgal 0
        ifhitspace
            ifcount 10
            {
                shoot P_DART
                resetcount
            }
    ifl early_use 3
        add early_use 1
    ifn input.extbits 0
        set reset_time_input 0
    else ife g_timed_game 1
    {
        add reset_time_input 1
        ifge reset_time_input 9000
        {
            setp .gm 3
            break
        }
    }
    ife p_eol 0
    {
        getp .posx p_eol_x
        getp .posy p_eol_y
        getp .posz p_eol_z
        getp .truefz p_eol_tfz
    }
    else
    {
        setp .posx p_eol_x
        setp .posy p_eol_y
	    ifg p_last_hp 0
            seta .extra p_last_hp
        else ifle sprite.extra 0
            seta .extra 1
			
        ifn p_eol_tfz player.truefz
            getp .posz p_eol_z
        else
        {
            setp .posz p_eol_z
            setp .poszv 0
        }
        setp .posxv 0
        setp .posyv 0
        
        ifg w5alt 0
            shiftr w5alt 1
        set bbomb_hold_count 0
        setp .kickback_pic 0
        break
    }
    ifn player.cursectnum -1
        state find_sbs

    state do_lz_use_prompt

    state pickups_bomb
    state pickups_doublejump
    state pickups_doubledamage
    set temp9 0
    ifg p_pup_bomb_time 0
    {
        setp .sound_pitch 666
        soundonce S_AMB_CLOCKTICK
        setp .sound_pitch 0
    }
    else
        stopactorsound THISACTOR S_AMB_CLOCKTICK
    ifn killplayer 0
    {
        seta[].extra 0
        set killplayer 0
    }

    state hard_landing_fix

    state load_black_fade
    
    state reset_horde_mode
    ifhitspace
        nullop
    else ifn p_killfall_buffer 0
        set p_killfall_buffer 0
    
    ife p_eol 0
        add g_playtics 1
    ife p_killfall 0
        inittimer 120
    
    ifn nosavespam -1
    {
        set skip_enter_autosave nosavespam
        savegamevar skip_enter_autosave
        set nosavespam -1
    }
    
    state read_bbomb_mode

    state guntest_setup
    state infinite_minigun
    state player_squish
    state eol_preview
    state electrify_all_enemies
    state fix_jump_physics

    state bbomb_mode_hpammo
    
    state kills_secrets_discards
    
    state kill_everything
    

    state crouch_momentum

    state cap_screensize

    ifn p_secret_quote 0
    {
        setp[].ftq p_secret_quote
        setp[].fta 99
        set p_secret_quote 0
    }

    ifdead // death handling
    {
        ifaction PLAYER_DYING
        {
            ifactioncount 7
                action PLAYER_DEAD
        }
        else ifaction PLAYER_DEAD
            nullop
        else
            action PLAYER_DYING
        stopactorsound player[].i S_SHELLY_SEARCHTALK1
        stopactorsound player[].i S_SHELLY_SEARCHTALK2
        stopactorsound player[].i p_lastline
        setarray sound_playback[p_lastline] 0
        setp[].kickback_pic 0
        set w1alt 0
        set weapon1_alt 0
        ifl p_dead_count 120
            add p_dead_count 4
        set temp p_dead_count
        shiftr temp 1
        sub temp 200
        inv temp
            setp[].horiz temp

        fall
        ifn p_dead_ang -1
            setp[].ang p_dead_ang
        ifl p_dead_count 60
        {
            set temp p_dead_ang
            add temp 1024
            and temp 2047
            seta[].ang temp
            set temp p_dead_count
            sub temp 120
            inv temp
            shiftr temp 1
            seta[].xvel temp
            ssp THISACTOR CLIPMASK0

            geta[].ang att_return
            sub att_return p_dead_ang

            ifg att_return 1023
                sub att_return 2047
            ifl att_return -1023
                add att_return 2047
            shiftr att_return 4
            ife att_return 0
                set att_return p_dead_ang
            else
            {
                geta[].ang temp
                add temp att_return
                and temp 2047
                seta[].ang temp
            }
            setp[].posx sprite[].x
            setp[].posy sprite[].y
            setp[].posz sprite[].z
        }
        else ifg p_dead_count 100
        {
            ifl fade_amount 63
            {
                add p_dead_count2 1
                set temp p_dead_count2
                mod temp 3
                ife temp 1
                    add fade_amount 1
            }

        }
        for itervar range num_flag32
        {
            set temp gameflag32[itervar]
            ifg sprite[temp].extra 0
            {
                setav[temp].enemy_init 0
                changespritestat temp STAT_ZOMBIEACTOR
            }
        }
        ife g_timed_game 1
            add reset_time_input 14
        set temp p_dead_count
        shiftr temp 2
        setp[].rotscrnang temp

        ifhitspace ife p_killfall_buffer 0
        {
            ife g_timed_game 1
                ifge g_playtics 27000
                {
                    setp .gm 3
                    break
                }
            for temp range 64
                clearmapstate temp
            ifn VOLUME EP_HORDE
                ife p_horde_restart -1
                    set p_horde_restart 0
            ife p_horde_restart 0
                resetplayerflags 4
            else
            {
                set p_horde_restart 0
                state reset_131072
                resetplayerflags 8 // 8 later
            }
        }
    }
    else
    {
        set p_dead_count2 0
        set p_dead_count 0
        ifg fade_amount 0
        {
            sub fade_amount 1
            ifg fade_amount 60
                geta[].extra p_last_hp
        }
    }

    state saved_posxyz
    
    set bis_max 0
    ifg payne_mode 0
    {
        clamp payne_mode 0 PAYNE_TIME
        ife payne_mode PAYNE_TIME
            sound S_MP_START
        set temp PAYNE_TIME
        shiftr temp 3
        set temp3 payne_mode
        mod temp3 temp
        ife temp3 0
            soundonce S_MP_ON
        ife payne_mode temp
            sound S_MP_END
        ifl payne_mode temp
        {
            set temp2 payne_mode
            sub temp2 temp
            inv temp2
            shiftl temp2 1
            set temp 60
            add temp temp2
            clamp temp 60 120
            inittimer temp
        }
        else
        {
            set temp PAYNE_TIME
            shiftr temp 3
            sub temp PAYNE_TIME
            inv temp
            ifg payne_mode temp
            {
                set temp2 payne_mode
                sub temp2 temp
                sub temp2 PAYNE_TIME
                inv temp2
                shiftl temp2 1
                set temp 60
                add temp temp2
                clamp temp 60 120
                inittimer temp
            }
            else
                inittimer 60
        }
        sub payne_mode 1
        ife payne_mode 0
            inittimer 120
    }
    ifn timer 0
        inittimer timer
    state player_hub_start_pos
    ifg player[].jumping_counter 720
        setp[].jumping_counter 0
    ifg p_jump_sound 0
    {
        sub p_jump_sound 1
        iffloordistl 64
            nullop
        else
        {
            rand temp2 127
            setp[].sound_pitch temp2
            sound S_SHELLY_GRUNT3
            setp[].sound_pitch 0
            set p_jump_sound 0
        }
    }
    ifn player[].hard_landing 0
    {
        ife p_need_land_sound 1
        {
            rand temp2 -97
            ifrnd 127
                inv temp2
            setp[].sound_pitch temp2
            ifrnd 126
                sound S_SHELLY_GRUNT1
            else
                sound S_SHELLY_GRUNT4
            setp[].sound_pitch 0
        }
        /* redefinequote 11 %ld
        qsprintf 11 11 player[].hard_landing
        quote 11 */
    }
    ifp pducking
        setp[].autostep player[].autostep_sbw
    else ifl player[].poszv 0
        setp[].autostep 5120
    else
        setp[].autostep 6144
    /* redefinequote 11 %ld %ld
    qsprintf 11 11 player[].autostep player[].autostep_sbw
    quote 11 */
    ife p_armor_type 0
        setp[].max_shield_amount 50
    else ife p_armor_type 1
        setp[].max_shield_amount 100
    else ife p_armor_type 2
        setp[].max_shield_amount 200
    ifg p_secrets_show 0
        sub p_secrets_show 1
    ifl shakeitbaby 2
    {
        ifrnd 64
        {
            ifbulletnear
                add shakeitbaby 1
        }
    }

    ifp ponground // fix getting stuck on the ceiling in various situations
        nullop
    else
    {
        getp[].posz temp
        sub temp 1024
        ifle temp player.truecz
        {
            getp[].posz temp
            add temp GRAVITATIONALCONSTANT
            setp[].posz temp
            getp[].poszv temp
            add temp GRAVITATIONALCONSTANT
            setp[].poszv temp
        }
    }
    // replace damage system
    geta[].htextra temp
    ife p_dontdie 1
        set temp -1
    ifg p_pup_bomb_time 0
    {
        ifg temp -1
        {
            ife sprite.owner THISACTOR
            {
                geta[].htowner temp2
                ifn temp2 -1
                {
                    ife sprite[temp2].picnum P_BOWLINGBOMB
                    {
                        seta .htextra -1
                        set temp -1
                    }
                }
            }
        }
    }
    getp[].shield_amount temp2 // also used later
    set temp5 temp2
    ife temp2 0 ifn p_armor_type 0
    {
        set p_armor_type 0
        setp[].sound_pitch 1024
        sound S_CROSSBOW_RESET
        setp[].sound_pitch 0
        set flash_armor -3
    }
    ifn temp -1
    {
        ife userdef[].player_skill 1
        {
            ifg temp 4
            {
                shiftr temp 1
                ifl temp 2
                    set temp 2
            }
        }
        else ifge userdef[].player_skill 3
        {
            mul temp 3
            shiftr temp 1
        }
        sub temp2 temp
        ifl temp2 0
        {
            inv temp2
            ife sprite[].htpicnum P_PLASMA_BOLT
            {
                ifg temp5 0
                    add temp temp2
            }
            else
                add temp temp2
            set temp2 0
            ife sprite[].htpicnum EXPLOSION
                shiftr temp 2 // sudden explosion deaths suck
        }
        else
        {
            ife sprite[].htpicnum EXPLOSION
                shiftr temp 2 // sudden explosion deaths suck
            else
                shiftr temp 1
        }
        seta[].htextra temp
        setp[].shield_amount temp2
        ife userdef[].god 1
            seta .htextra -1
    }

    // do some stuff when we actually do take damage
    ifg p_hazard_amount 0
    {
        set temp5 0
        mod hazard_breath 8
        ife hazard_breath 7
        {
            set hazard_breath 0
            set hazard_breath2 1
            set temp5 1
        }
        else
        {
            ife hazard_breath2 0
            {
                set hazard_breath 0
                set hazard_breath2 0
                set temp5 2
            }
            add hazard_breath2 1
            mod hazard_breath2 120
        }
        ifg temp5 0
        {
            set temp 0
            set temp2 p_xvel
            shiftr temp2 2
            add temp p_xvel
            clamp temp 0 32
            setp .sound_pitch temp
            soundonce S_ITEM_HAZMAT_BREATH
            setp .sound_pitch -320
            ife temp5 2
                sound S_AMB_LAMPHUMLOOP01
            else
                soundonce S_AMB_LAMPHUMLOOP01
            setp .sound_pitch 0
        }
        else
        {
            setp .sound_pitch -320
            soundonce S_AMB_LAMPHUMLOOP01
            setp .sound_pitch 0
        }
        sub p_hazard_amount 1
    }
    else
    {
        set hazard_breath 0
        set hazard_breath2 0
        stopactorsound THISACTOR S_AMB_LAMPHUMLOOP01
    }   
    ifinwater
    {
        ife p_hazard_amount 0
            ifg p_airleft 0
                sub p_airleft 1
        ife last_surface_picnum SURFACE_SLIME
        {
            ifg p_hazard_amount 0
            {
                rand temp 4
                set temp2 SLIMEDMGRATE
                shiftr temp2 1
                ifl p_slimedmg_count temp2
                {
                    rand temp2 temp2
                    add temp temp2
                }
                add temp 1
                
                add p_slimedmg_count temp
            }
            else
                add p_slimedmg_count 1
            switch last_surface_pal
                case 2
                case 3
                case 43
                case 44
                case 66
                case 104
                case 105
                case 125
                case 126
                    set p_slimedmg_count 0
                    break
            endswitch
            ifge p_slimedmg_count SLIMEDMGRATE
            {
                set p_slimedmg_count 0
                ifn userdef[].god 1
                {
                    geta[].extra temp
                    ife p_hazard_amount 0
                        sub temp SLIMEDMG
                    else
                        sound S_ITEM_HAZMAT_GEIGER
                    clamp temp 0 player.max_player_health
                    seta[].extra temp
                    seta[].htpicnum P_ACIDYSPIT
                }
            }
        }
    }
    else ifonwater
    {
        set p_airleft 390
        ifp ponground
        {
            ife player[].spritebridge 1
            {
                getp[].sbs surface_type
                geta[surface_type].picnum surface_type
            }
            else
                set surface_type p_override_floorpicnum
            state get_surface_type
            ife surface_type SURFACE_SLIME
            {
                ifg p_hazard_amount 0
            {
                rand temp 4
                set temp2 SLIMEDMGRATE
                shiftr temp2 1
                ifl p_slimedmg_count temp2
                {
                    rand temp2 temp2
                    add temp temp2
                }
                add temp 1
                
                add p_slimedmg_count temp
            }
            else
                add p_slimedmg_count 1
                

                switch sector.floorpal
                    case 2
                    case 3
                    case 43
                    case 44
                    case 66
                    case 104
                    case 105
                    case 125
                    case 126
                        set p_slimedmg_count 0
                        break
                endswitch
                ifge p_slimedmg_count SLIMEDMGRATE
                {
                    set p_slimedmg_count 0
                    ifn userdef[].god 1
                    {
                        geta[].extra temp
                        ife p_hazard_amount 0
                            sub temp SLIMEDMG
                        else
                            sound S_ITEM_HAZMAT_GEIGER
                        clamp temp 0 player.max_player_health
                        seta[].extra temp
                        seta[].htpicnum P_ACIDYSPIT
                    }
                }
            }
            else
                set p_slimedmg_count 0
        }
        else
            set p_slimedmg_count 0
    }
    else 
    {
        set p_airleft 390
        ife p_hazard_amount 0
            set p_slimedmg_count 0
        else ifp ponground
        {
            ife player[].spritebridge 1
            {
                getp[].sbs surface_type
                geta[surface_type].picnum surface_type
            }
            else
                set surface_type p_override_floorpicnum
            state get_surface_type
            ife surface_type SURFACE_SLIME
            {
                rand temp 4
                set temp2 SLIMEDMGRATE
                shiftr temp2 1
                ifl p_slimedmg_count temp2
                {
                    rand temp2 temp2
                    add temp temp2
                }
                add temp 1
                
                add p_slimedmg_count temp
                switch sector.floorpal
                    case 2
                    case 3
                    case 43
                    case 44
                    case 66
                    case 104
                    case 105
                    case 125
                    case 126
                        set p_slimedmg_count 0
                        break
                endswitch
                ifge p_slimedmg_count SLIMEDMGRATE
                {
                    set p_slimedmg_count 0
                    sound S_ITEM_HAZMAT_GEIGER
                }
            }
            else
                set p_slimedmg_count 0
        }
        else
            set p_slimedmg_count 0
    }
    setp[].airleft p_airleft
    /* redefinequote 11 %ld
    qsprintf 11 11 player[].airleft
    quote 11 */
    ife player[].airleft 0
    {
        add p_drown_dmg 1
        ifge p_drown_dmg DROWNTIMER
        {
            ifn userdef[].god 1
            {
                geta[].extra temp
                sub temp 1
                clamp temp 0 player.max_player_health
                seta[].extra temp
            }
            else
                set p_drown_dmg 0
        }
    }
    else
        set p_drown_dmg 0
    set temp6 0
    ife p_dontdie 1
    {
        seta .extra p_last_hp
        seta .htextra -1
        ifg p_whitefade 0
        {
            setp[].pals 0 63
            setp[].pals 1 63
            setp[].pals 2 63
            set temp p_end_game_time
            div temp 63
            set temp2 p_whitefade
            div temp2 temp
            setp[].pals_time temp2
        }
    }
    geta[].htextra temp5
    ifhitweapon
        set temp6 1
    else ifl sprite[].extra p_last_hp
        set temp6 1
    ife userdef[].god 1
        set temp6 0
    ife temp6 1
    {
        set p_face_angry 30
        set p_want_angry 0
        // blood spawning
        getp[].ang temp2
        rand temp3 256
        ifrnd 127
            inv temp3
        add temp3 temp2
        add temp3 1024
        and temp3 2047
        setp[].ang temp3
        rand temp3 1024
        shiftl temp3 1
        ife temp3 0
            set temp3 1
        ifrnd 127
            inv temp3
        ezshoot temp3 P_BLOOD
        setthisprojectile[RETURN].trail -1
        seta[RETURN].cstat 32768
        setp[].ang temp2

        // different red intensity based on health
        geta[].extra temp
        clamp temp -65536 player.max_player_health
        sub temp player.max_player_health
        abs temp
        shiftr temp 1
        ifl temp 10
            set temp 10
        ife hub_health_trans 0
        {
            ife p_sizzled_count 0
            {
                ifl p_drown_dmg DROWNTIMER
                {
                    ife sprite[].htpicnum P_ACIDYSPIT
                    {
                        setp[].pals 0 5
                        setp[].pals 1 30
                        setp[].pals 2 0
                        setp[].pals_time temp
                    }
                    else
                    {
                        setp[].pals 0 30
                        setp[].pals 1 0
                        setp[].pals 2 0
                        setp[].pals_time temp
                    }
                }
                else
                {
                    setp[].pals 0 4
                    setp[].pals 1 0
                    setp[].pals 2 30
                    setp[].pals_time temp
                    ifdead
                        nullop
                    else
                        set p_drown_dmg 0
                    add shakeitbaby 1
                    ifrnd 64
                        add shakeitbaby 1
                }
            }
            else ifg p_sizzled_count 0
            {
                ifaction PLAYER_DYING
                    nullop
                else ifaction PLAYER_DEAD
                    nullop
                else ifaction PLAYER_SHOCKED
                    nullop
                else
                    action PLAYER_SHOCKED
            }
            add shakeitbaby 2
        }

        ifdead
        {
            ifaction PLAYER_DYING
                nullop
            else ifaction PLAYER_DEAD
                nullop
            else 
                action PLAYER_DYING
            ife sprite[].htpicnum EXPLOSION
                set p_dead_face 2
            else
            {
                set temp player.max_player_health
                shiftr temp 2
                ifg temp5 temp
                    set p_dead_face 1
            }
            stopactorsound player[].i S_SHELLY_SEARCHTALK1
            stopactorsound player[].i S_SHELLY_SEARCHTALK2
            stopactorsound player[].i p_lastline
            setarray sound_playback[p_lastline] 0
            ife p_killfall 0
            {
                rand temp 2
                add temp S_SHELLY_DEATH3
                soundoncevar temp
            }
        }
        else
        {
            set temp player.max_player_health
            shiftr temp 1
            ifl sprite[].extra temp
            {
                ifaction PLAYER_DYING
                    nullop
                else ifaction PLAYER_DEAD
                    nullop
                else  ifaction PLAYER_SHOCKED
                    nullop
                else
                    action PLAYER_HIT
                ifinwater
                    soundonce S_SHELLY_BREATH2
                else
                {
                    ifrnd 64
                        soundonce S_SHELLY_HURT02
                    else ifrnd 64
                        soundonce S_SHELLY_HURT03
                    else
                        soundonce S_SHELLY_GRUNT2
                }
            }
            else ifrnd 64
                soundonce S_SHELLY_BREATH2
            ifn sprite[].htowner -1
            {
                set face_target sprite[].htowner
                state face_actor
                set p_dead_ang face_return
            }
        }

    }
    ifg sprite.extra 0
        set p_dead_face 0
    ifn p_pizza_health 0
    {
        geta .extra temp
        set temp3 temp
        clamp temp 0 player.max_player_health
        set temp2 temp
        add temp p_pizza_health
		// just make it go over the cap
        /*ifg temp MAXPLAYERHEALTH
        {
            sub temp MAXPLAYERHEALTH
            sub temp3 p_last_hp
            ifl temp3 0
                add temp temp3
            seta .extra temp2
            
            set p_pizza_health temp
            geta .extra temp
            add temp p_pizza_health
            seta .extra temp

            add p_pizza_count 1
            ife p_pizza_count 90
            {
                set p_pizza_count 0
                sub p_pizza_health 1
                ife p_pizza_health 0
                    set p_pizza_health -1
            }
        }
        else*/
        //{
            geta .extra temp
            add temp p_pizza_health
            seta .extra temp
            set p_pizza_health 0
            set p_pizza_count 0
        //}
    }
    geta[].extra p_last_hp

    setp[].angvel 0

    getinput[].extbits temp
    ifxor temp INPUT_STRAFE_LEFT ifxor temp INPUT_STRAFE_RIGHT
    {
        ifg weapon_strafe 0
            sub weapon_strafe 4
        else ifl weapon_strafe 0
            add weapon_strafe 4
    }
    ifand temp INPUT_STRAFE_LEFT
        ifl weapon_strafe 24
        {
            add weapon_strafe 4
            ifl weapon_strafe 0
                add weapon_strafe 4
        }
    ifand temp INPUT_STRAFE_RIGHT
        ifg weapon_strafe -24
        {
            sub weapon_strafe 4
            ifg weapon_strafe 0
                sub weapon_strafe 4
        }

    set temp 0
    ifn p_face_angry 0
    {
        set p_face_idle 0
        sub p_face_angry 1
        set p_face_grin 0
    }
    else ifn p_face_grin 0
    {
        set p_face_idle 0
        sub p_face_grin 1
    }
    else ifl sprite[].extra 40
        set p_face_idle 0
    else
    {
        add p_face_idle 1
        ife p_face_idle 90
        {
            ifrnd 127
            {
                ifrnd 127
                    add p_face_idle 32
                else
                    add p_face_idle 1
            }
            else
                set p_face_idle 0
        }
        else ifg p_face_idle 90
        {
            ife p_face_idle 121
            {
                ifrnd 96
                    set p_face_idle 137
                else
                    set p_face_idle 0
            }
            else ife p_face_idle 152
            {
                ifrnd 96
                    set p_face_idle 106
                else
                    set p_face_idle 0
            }
        }
    }
    // Ladder stuff!
    // The following counters are actually less hacky than tracking processinput
    ifg press_forward 0
        sub press_forward 1
    ifg press_backward 0
        sub press_backward 1
    ifg press_left 0
        sub press_left 1
    ifg press_right 0
        sub press_right 1
    ifg press_jump 0
        sub press_jump 1
    ifg press_crouch 0
        sub press_crouch 1
    ifg press_kick 0
    {
        ifle press_kick 2
        {
            set temp 0
            ife player[].kickback_pic 0
                set temp 1
            else
            {
                ife player.curr_weapon WEAPON_SHOCKER
                {
                    ifg player.kickback_pic 62
                        set temp 2
                    ifn w0alt 0
                        ifg player.kickback_pic 55
                            set temp 2
                }
            }
            ifn temp 0
            {
                ife player[].weapon_pos 0
                {
                    ife player[].last_weapon -1
                    {
                        ife p_quickbaton 0
                        {
                            set p_quickbaton 1
                            set press_kick 0
                            ife temp 2
                                setp .kickback_pic 0
                        }
                    }
                }
            }
        }
        ifn press_kick 0
            sub press_kick 1
    }
    ifn p_quickbaton 0
    {
        setp[].weapon_pos p_quickbaton
        ifge p_quickbaton 20
        {
            ife player[].curr_weapon WEAPON_SHOCKER
            {
                ife player[].ammo_amount p_quickbaton_last 0
                    setp[].curr_weapon WEAPON_SHOCKER
                else
                    setp[].curr_weapon p_quickbaton_last
            }
            else
                setp[].curr_weapon WEAPON_SHOCKER
            set p_quickbaton -9
            setp[].weapon_pos 10
            set last_weaponcount weaponcount
            set last_weapon_pos player[].weapon_pos
            set smooth_weapon_pos player[].weapon_pos
            switch player.curr_weapon
                case WEAPON_LOVERBOY
                    sound WEAPON1_SELECTSOUND
                    break
                case WEAPON_SHOTGUN
                    sound WEAPON2_SELECTSOUND
                    break
                case WEAPON_SMG
                    sound WEAPON3_SELECTSOUND
                    break
                case WEAPON_MINIGUN
                    sound WEAPON4_SELECTSOUND
                    break
                case WEAPON_BOWLINGBOMB
                    sound WEAPON5_SELECTSOUND
                    break
                case WEAPON_GRENADE
                    sound WEAPON6_SELECTSOUND
                    break
                case WEAPON_CROSSBOW
                    sound WEAPON7_SELECTSOUND
                    break
                default
                    sound WEAPON0_SELECTSOUND
                    break
            endswitch
        }
        else ifg p_quickbaton 0
            add p_quickbaton 2
        else ifl p_quickbaton 0
        {
            set temp p_quickbaton
            abs temp
            setp[].weapon_pos temp
            add p_quickbaton 1
            ifg temp 4
                add p_quickbaton 1
            clamp p_quickbaton -10 0
            ife p_quickbaton 0
                setp[].weapon_pos p_quickbaton
        } 
    }
    ifn player[].curr_weapon WEAPON_SHOCKER
        getp[].curr_weapon p_quickbaton_last
    ifg press_alt 0
    {
        sub press_alt 1
        // commented out for the demo
        ife player[].curr_weapon 1 ife player[].kickback_pic 0 ife player[].weapon_pos 0
        {
            ife num_targets[1] -1
            ifge weapon1_alt_time LOVERBOY_ALT_TIME
            {
                ifg weapon1_alt 0
                {
                    sub weapon1_alt 4
                    clamp weapon1_alt 0 15
                }
                                    
                set w1alt 0
                set press_alt 0
            }
            else ifge weapon1_alt 11
                state calc_weapon1_alt_time
            else
            {
                set weapon1_alt_time 0
                set weapon1_alt_skill 0
            }    
            ife press_alt 2 ifl weapon1_alt 15 ifg weapon1_alt -1
            {
                add weapon1_alt 4
                clamp weapon1_alt 0 15
                ife weapon1_alt 15 ifn w1alt 0
                {
                    set WEAPON1_TOTALTIME 4
                    state calc_weapon1_alt_time
                }
            }

            ifge weapon1_alt 15
            {
                ife press_alt 1
                {
                    set weapon1_alt 0
                    set temp2 1
                    whilen temp2 7
                    {
                        set temp3 num_targets[temp2]
                        ifn temp3 -1
                            sub weapon1_alt 1
                        add temp2 1
                    }
                    ifn w1alt 0
                        set weapon1_alt 11
                    ife weapon1_alt 0
                        set weapon1_alt 11
                }
            }
        }
        else
        {
            switch player.curr_weapon
                case WEAPON_SHOTGUN
                case WEAPON_GRENADE
                    ife player[].kickback_pic 0 ife w2alt_count 0 ife player[].weapon_pos 0
                    {
                        set temp 0
                        ife w2alt 0
                        {
                            ifn player.ammo_amount WEAPON_GRENADE 0
                                set temp 1
                        }
                        else
                        {
                            ifn player.ammo_amount WEAPON_SHOTGUN 0
                                set temp 1
                        }
                        ife temp 1
                        {
                            set flash_ammo -3
                            setp[].kickback_pic 38
                            ife w2alt 0
                                set w2alt 1
                            else ife w2alt 30
                                set w2alt -1
                            set w2alt_count 1
                            ifl flash_weapons 3
                                set flash_weapons 30
                            else ifl flash_weapons 27
                                set flash_weapons 27
                        }
                    }
                break
            endswitch
        }
    }
    else // commented out fo the demo
    {
        ifg weapon1_alt_time 0
            sub weapon1_alt_time 1
        ifg weapon1_alt_skill 0
            sub weapon1_alt_skill 1
        ifg weapon1_alt 0
        {
            set WEAPON1_TOTALTIME 4
            sub weapon1_alt 3
            ifl weapon1_alt 0
                set weapon1_alt 0
        }
        ife weapon1_alt 0
        {
            set WEAPON1_TOTALTIME 6
            set temp2 0
            whilen temp2 7
            {
                setarray num_targets[temp2] -1
                add temp2 1
            }
        }
        ife num_targets[1] -1
        ife weapon1_alt_time LOVERBOY_ALT_TIME
        {
            ifg weapon1_alt 0
            {
                sub weapon1_alt 2
                clamp weapon1_alt 0 15
            }
            set w1alt 0
            set press_alt 0
        }
        else ifge weapon1_alt 11
        {
            ifl weapon1_alt 0
                nullop
            else
                state calc_weapon1_alt_time
        }
        else
        {
            set weapon1_alt_time 0
            set weapon1_alt_skill 0
        }
    }
    ife p_firstgrenade 0
    {
        ife player.gotweapon WEAPON_SHOTGUN 1
            ife player.gotweapon WEAPON_GRENADE 1
                ifg player.ammo_amount WEAPON_GRENADE 0
                    set p_firstgrenade 1
    }
    ife player.gotweapon WEAPON_SHOTGUN 1
        setp .gotweapon WEAPON_GRENADE 1
    else ife player.gotweapon WEAPON_GRENADE 1
        setp .gotweapon WEAPON_SHOTGUN 1
    
    ife player.curr_weapon WEAPON_GRENADE
    {
        ife player.last_weapon WEAPON_SHOTGUN
        {
            setp .weapon_pos 0
            setp .last_weapon -1
            setp[].kickback_pic 12
            set weapon6_realclip SHOTGUN_CLIP
            set WEAPON6_CLIP 1
            set w2alt 1
            setp .kickback_pic 12
        }
        ifn player.weapon_pos 0
            set w2alt 30
    }
    ife player.curr_weapon WEAPON_SHOTGUN
    {
        ife player.last_weapon WEAPON_GRENADE
        {
            setp .weapon_pos 0
            setp .last_weapon -1
            setp[].kickback_pic 12
            set weapon2_realclip SHOTGUN_CLIP
            set WEAPON2_CLIP 1
            set w2alt -1
            setp .kickback_pic 12
        }
        ifn player.weapon_pos 0
            set w2alt 0
    }
    ifg w2alt 0 ifl w2alt 30
    {
        add w2alt 1
        ifg w2alt_count 20
            add w2alt 1
        ifge w2alt 30
        {
            
            set hud_ammo player.ammo_amount WEAPON_SHOTGUN
            set p_roll_fast 1
            set w2alt 30
            setp .curr_weapon WEAPON_GRENADE
            set flash_ammo 6
        }
    }
    else ifl w2alt 0 ifg w2alt -30
    {
        sub w2alt 1
        ifg w2alt_count 20
            sub w2alt 1
        ifle w2alt -30
        {
            set hud_ammo player.ammo_amount WEAPON_GRENADE
            set p_roll_fast 1
            set w2alt 0
            setp .curr_weapon WEAPON_SHOTGUN
            set flash_ammo 6
        }
    }
    ifg w2alt_count 0
    {
        set temp 37
        add temp w2alt_count
        ifg temp WEAPON2_RELOAD
        {
            set w2alt_count 0
        }
        else
        {
            ife temp 38
                soundoncevar WEAPON2_RELOADSOUND1
            ife temp 82
                soundoncevar WEAPON2_RELOADSOUND2
            ifg temp 33
            {
                // reload speed
                ifand temp 1
                {
                    ifl temp 48
                        add w2alt_count 1
                    else ifg temp 64 ifl temp 85
                        add w2alt_count 1
                }
            }
            setp[].kickback_pic temp
            add w2alt_count 1
        }

    }
 /*   redefinequote 11 w1: %ld    w2:%ld
    qsprintf 11 11 w2_ammo1 w2_ammo2
    quote 11 */
    state player_idle_timers
    /*ifn weapon1_alt 0 // debug code for pistol alt
    {
        redefinequote 11 %ld %ld %ld %ld %ld %ld
        set temp num_targets[1]
        set temp2 num_targets[2]
        set temp3 num_targets[3]
        set temp4 num_targets[4]
        set temp5 num_targets[5]
        set temp6 num_targets[6]
        qsprintf 11 11 temp temp2 temp3 temp4 temp5 temp6
        quote 11
    } */
    ife player[].curr_weapon 1 ifl weapon1_alt 0
    {

        ife player[].kickback_pic 0 ifg player[].ammo_amount 1 0
        {
            set WEAPON1_TOTALTIME 4
            set temp weapon1_alt
            abs temp
            set face_target num_targets[temp]
            
            set temp4 0
                ifn face_target -1
                    ifand tiledata[sprite[face_target].picnum].gameflags 32
                        ifg sprite[face_target].extra 0
                        {
                            set temp4 1
                            set last_target face_target
                        }
                ife last_target face_target
                    set temp4 1
            
            ife temp4 1
            {
                state face_actor
                and face_return 2047
                setp[].ang face_return
                
                set temp face_target
                set temp4 tilesizy[sprite[temp].picnum]
               // basic formula: (sizy*256)/64 = base value then mul yrepeat for game topZ
               // simplified to sizy*4*yrepeat
                shiftl temp4 2
                mul temp4 sprite[temp].yrepeat
                switch sprite[temp].picnum
                    case A_WENTEKO:
                    case A_NUKEMUTANT:
                    case A_NUKEMUTANT_RISE:
                    case A_NUKEMUTANT_GDF:
                    case A_NUKEMUTANT_GDF_RISE:
                        set temp5 sprite[temp].htbposz
                        break
                    case A_MECHSECT:
                    case A_DRONE:
                        set temp5 sprite[temp].htbposz
                        add temp5 768
                        break
                    default
                        set temp5 sprite[temp].z
                        break
                endswitch
                sub temp5 temp4
                shiftr temp4 2
                clamp temp4 1024 65536
              //  addlogvar temp4
                add temp4 temp5
                ldist temp THISACTOR face_target
                getactor[THISACTOR].z temp2
                subvar temp2 9216
                subvarvar temp4 temp2
                shiftvarl temp4 12
                divvarvar temp4 temp
                shiftr temp4 9
                inv temp4
                add temp4 100
               // addlogvar temp4
                setp[].horiz temp4
                setp[].kickback_pic 1
            }
            else
                add weapon1_alt 1
        }
        else ife player[].kickback_pic 5
            add weapon1_alt 1
    }
    else ifn player[].curr_weapon 1
    {
        set weapon1_alt 0
        set temp2 0
        whilen temp2 7
        {
            setarray num_targets[temp2] -1
            add temp2 1
        }
    }
    // ifn weapon1_numtargets 0
    //    set weapon1_numtargets 0

    clamp shakeitbaby 0 30
    ifg shakeitbaby 0
        sub shakeitbaby 1

    clamp shakeitbabysm 0 30
    ifg shakeitbabysm 0
        sub shakeitbabysm 1
        
    clamp shakeitbabysm_fu 0 30
    ifg shakeitbabysm_fu 0
        sub shakeitbabysm_fu 1
    ifg shakeitbabysm_fu_c 0
    {
        sub shakeitbabysm_fu_c 1
    }
    else
        set shakeitbabysm_fu 0
        
    ifg shakeitbaby_killer 0
    {
        sub shakeitbaby_killer 1
        ifn shakeitbaby_killer 0
        {
            set shakeitbaby 0
            set shakeitbabymed 0
            set shakeitbabylow 0
            set shakeitbabysm 0
            set shakeitbabysm_fu 0
        }
        clamp shakeitbaby_killer 0 2
    }
    
    clamp shakeitbabymed 0 30
    ifg shakeitbabymed 0
        sub shakeitbabymed 1
        
    clamp shakeitbabylow 0 30
    ifg shakeitbabylow 0
        sub shakeitbabylow 1

    set p_quickladder -1
    ifn player[].cursectnum -1
        state do_hitscan
    state player_check_vend
    state player_do_ladders


    // Get three samples here for the next sector
    set temp4 0
    set hud_shade_nextsector 0

    set temp5 0
    setvar temp9 0 // assume no
    set temp8 -1
    for temp5 range 17
    {
        ife temp9 0
        {
            getp[].ang temp3
            set temp temp5
            ifg temp 8
                sub temp 17
            shiftl temp 4
            add temp3 temp
            and temp3 2047

            cos temp temp3
            sin temp2 temp3

            shiftr temp 6
            shiftr temp2 6

            add temp player[].posx
            add temp2 player[].posy

            set temp6 temp
            set temp player[].cursectnum
            updatesectorneighborz temp6 temp2 player[].posz temp // faster but less accurate than updatesectorz
            ifn temp -1
            {
                getsector[temp].floorshade temp3
                ife temp8 temp3
                {
                    ifn temp8 -1
                    {
                        set temp9 1
                        set temp8 -1
                    }
                    else
                        set temp8 temp3
                }
                else
                    set temp8 temp3
                add hud_shade_nextsector temp3
                add temp4 1
            }
            else
            {
                set temp9 1
                getp[].cursectnum temp
                ife temp -1
                    set temp3 0
                else
                    getsector[temp].floorshade temp3
                ife temp8 temp3
                {
                    ifn temp8 -1
                        set temp9 1
                }
                set temp8 temp3
                add hud_shade_nextsector temp3
                add temp4 1
            }
        }
        else
        {
            set temp9 0
            getp[].cursectnum temp
            ife temp -1
                set temp3 0
            else
                getsector[temp].floorshade temp3
            add hud_shade_nextsector temp3
            add temp4 1
        }
        

        // add temp5 1
    }
    ifn temp4 0
        div hud_shade_nextsector temp4

    // end samples

    ife fly 1
    {
        setp[].falling_counter 0
        setp[].jumping_counter 0
        setp[].jumping_toggle 0
        setp[].on_ground 1
        setp[].poszv 0

        set temp 0
        ifn press_jump 0
        {
            sub temp 1536
            iffloordistl 1
            {
                getp[].posz fly_z
                sub fly_z 2048
                setp[].posz fly_z
            }
        }
        ifn press_crouch 0
            add temp 1536

        ifn temp 0
        {
            setp[].poszv temp
            getp[].posz fly_z
        }
        setp[].posz fly_z

    }
    else
        set fly_z player[].posz


    for itervar range rain_amount    // spawn rain!
    {
        espawn A_RAINSPRITE
        seta[RETURN].cstat 32768
        seta[RETURN].xrepeat 64
        seta[RETURN].yrepeat 64
        seta[RETURN].pal 0
        seta[RETURN].shade -72
        seta[RETURN].htflags 10308 // no shade, no pal, smoothmove, truncated clip
        changespritestat RETURN STAT_RAIN
        // sub rain_amount 1
    }
    set rain_amount 0
    ifhitspace ife bb 1
    {
        ife toggle 0
            spawn P_BOWLINGBOMB

        set toggle 1
    }
    else
        set toggle 0

    ifg bombette_throw 0
    {
        set temp bombette_throw
        sub temp 30
        abs temp
        setp[].weapon_pos 9
        ife bombette_throw 20
        {
            getp[].ang temp
            set temp5 temp
            geta[].xvel temp2
            ifg temp2 64
                set temp2 128
            ifn press_left 0
                sub temp temp2
            ifn press_right 0
                add temp temp2
            and temp 2047
            ifg sprite[].xvel 64
                setp[].ang temp
            set temp3 0
            rand temp4 3
            add temp4 4
            ifg temp4 bombette_ammo
                set temp4 bombette_ammo
            sub bombette_ammo temp4

            for temp3 range temp4
            {
                eshoot P_BOMBETTE
                ifn temp3 0
                {
                    geta[RETURN].z temp
                    rand temp2 511
                    ifrnd 127
                        inv temp2
                    add temp temp2
                    seta[RETURN].z temp
                    geta[RETURN].ang temp
                    rand temp2 47
                    ifrnd 127
                        inv temp2
                    add temp temp2
                    and temp 2047
                    seta[RETURN].ang temp
                    geta[].xvel temp
                    shiftr temp 1
                    add temp sprite[RETURN].xvel
                    seta[RETURN].xvel temp
                    getthisprojectile[RETURN].drop temp
                    rand temp2 -127
                    add temp temp2
                    setthisprojectile[RETURN].drop temp
                }
                // add temp3 1
            }
            setp[].ang temp5
        }
        sub bombette_throw 1
    }
    ifhitspace ifactioncount 7 ife flame_on 1
    {
        shoot P_FLAMER
        resetactioncount
    }
    ife plasma 1
    {
        ifcount 30
        {
            ifhitspace
            {
                eshoot P_PLASMA_BOLT
                geta[RETURN].ang temp
                geta[RETURN].zvel temp2

                add temp 24
                and temp 2047
                eshoot P_PLASMA_BOLT
                seta[RETURN].ang temp
                seta[RETURN].zvel temp2
                getthisprojectile[RETURN].workslike temp3
                orvar temp3 4096
                setthisprojectile[RETURN].workslike temp3

                sub temp 12
                and temp 2047
                eshoot P_PLASMA_BOLT
                seta[RETURN].ang temp
                seta[RETURN].zvel temp2
                getthisprojectile[RETURN].workslike temp3
                orvar temp3 4096
                setthisprojectile[RETURN].workslike temp3

                sub temp 36
                and temp 2047
                eshoot P_PLASMA_BOLT
                seta[RETURN].ang temp
                seta[RETURN].zvel temp2
                getthisprojectile[RETURN].workslike temp3
                orvar temp3 4096
                setthisprojectile[RETURN].workslike temp3

                add temp 12
                and temp 2047
                eshoot P_PLASMA_BOLT
                seta[RETURN].ang temp
                seta[RETURN].zvel temp2
                getthisprojectile[RETURN].workslike temp3
                orvar temp3 4096
                setthisprojectile[RETURN].workslike temp3
                resetcount
            }
        }
    }
   /* ifcount 12
    {
        ifhitspace
        {
            eshoot P_NAPALM_BALL
            resetcount
        }
    } */
   /* ifcount 30
    {
        ifhitspace
        {
            eshoot P_DANCINGQUEEN
            eshoot P_DANCINGQUEEN
            seta[RETURN].yvel 0
            // seta[RETURN].yvel 1
            resetcount
        }
    } */
    // no more cyclone
    /* ifn cyclone_mod_xv 0
    {
        shiftl cyclone_mod_xv 9
        getp[].posxv temp
        add temp cyclone_mod_xv
        setp[].posxv temp
        set cyclone_mod_xv 0
    }
    ifn cyclone_mod_yv 0
    {
        shiftl cyclone_mod_yv 9
        getp[].posyv temp
        add temp cyclone_mod_yv
        setp[].posyv temp
        set cyclone_mod_yv 0
    } */
    ife p_lastxv 0
        set p_lastxv player[].posxv
    else
    {
        shiftr p_lastxv 4
        getp[].posxv temp
        sub temp p_lastxv
        setp[].posxv temp
    }
    ife p_lastyv 0
        set p_lastyv player[].posyv
    else
    {
        shiftr p_lastyv 4
        getp[].posyv temp
        sub temp p_lastyv
        setp[].posyv temp
    }
    ifp pfalling
    {
        setvar p_need_land_z 30
        set p_need_land_sound 1
    }
    ifl p_entertime 5
        add p_entertime 1
    ifp ponground 
    {
        set temp 0
        ife p_need_land_sound 1
            set temp 1
        else ife p_need_water_ls 1 
            set temp 1
        ife temp 1
        {
            set p_steptype 3
            ife player[].spritebridge 1
            {
                getp[].sbs surface_type
                geta[surface_type].picnum surface_type
            }
            else
                set surface_type p_override_floorpicnum
            ife p_entertime 5
                state player_footstep
            set p_need_land_sound 0
            set p_need_water_ls 0
        }
    }
    else
    {
        ifl p_entertime 5
            add p_entertime 1
        ifinwater
            nullop
        else ifp pjumping
            nullop
        else ifp pfalling
            nullop
        else
        {
            ifg player[].poszv 1536
                set p_need_land_sound 1
            else
                set p_need_land_sound 2
        }
    }

    ifonwater
    {
        set surface_type sector[].floorpicnum
        state get_surface_type
        set last_surface_picnum surface_type
        set last_surface_pal sector[].floorpal
    }

    ifinwater
        soundonce S_ENV_UNDERWATER1
    else
        stopsound S_ENV_UNDERWATER1

    ife sector[].lotag 1
    {
        getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp

        sub temp 8192
        getceilzofslope sprite[].sectnum sprite[].x sprite[].y temp2
        add temp2 4096
        ifl temp temp2
            set temp temp2
        ifp pjumping
        {
            set p_need_water_land 1
            iffloordistl 1 ifl player[].poszv -256
                setp[].poszv -256
        }
        else iffloordistl 1
        {
            ifn p_need_water_land 0
            {
                ife p_need_water_rise 1
                {
                   // set p_need_water_rise 0
                    setp[].poszv 86
                    setp[].jumping_counter 0
                }
                ifand input[].bits INPUT_CROUCH
                {
                    set p_need_water_land 0
                    set p_need_water_rise 0
                    set p_need_water_ls 1
                }
                else ifl temp player[].posz
                {
                    getp[].posz temp2
                    sub temp 181
                    setp[].posz temp2

                    ifl player.poszv 1024
                        setp[].jumping_counter 721
                    iffloordistl 1 ifl player[].poszv 0
                        setp[].poszv 0
                }
                else
                {
                    set p_need_water_land 0
                    set p_need_water_rise 0
                    set p_need_water_ls 1
                }
            }
        }

        set p_need_land_z 0
    }

    ife sector[].lotag 2
    {
        set p_need_water_land 1
        set p_need_water_rise 1
    }
    ifp pjumping
        set p_need_land_z 0
    else ifp ponground ifn p_need_land_z 0
    {
        set temp p_need_land_z
        sub temp 15
        shiftl temp 5
        subvar p_need_land_z 1
        getp[].poszv temp2
        add temp2 temp
        ifl temp2 256
            set temp2 0
        setp[].poszv temp2
    }
    state player_weapon_mods


    // SPAWN WAYPOINTS AS WE GO!
    ifn sprite[].xvel 0
    {
        add way_tics 1

        ifg way_tics 15
        {
            espawn A_WAYPOINT
            setav[RETURN].counter 900
            seta[RETURN].xrepeat 32
            seta[RETURN].yrepeat 32
            set temp player[].posz
            add temp 4096
            seta[RETURN].z temp
            set temp player[].posz
            add temp 1024
            ifg temp player[].truefz
                seta[RETURN].z temp
            seta[RETURN].extra way_num
            add way_num 1
            ifg way_num MAXBREADCRUMBS
            {
                for temp6 sprofstat STAT_WAYPOINT
                {
                    geta[temp6].extra temp5
                    sub temp5 1
                    ifl temp5 0
                    {
                        seta[temp6].xrepeat 0
                        seta[temp6].yrepeat 0
                        changespritestat temp6 STAT_ACTOR
                    }
                    else
                        seta[temp6].extra temp5

                }

                set way_num MAXBREADCRUMBS

            }
            seta[RETURN].cstat 33280
            ife see_breadcrumbs 1
                seta[RETURN].cstat 0
            changespritestat RETURN 35
            set way_tics 0
            set way_nearest RETURN

        }
    }

    ifn see_breadcrumbs last_see_breadcrumbs
    {
        for temp sprofstat STAT_WAYPOINT
        {
            ife see_breadcrumbs 0
                seta[temp].cstat 33280
            else
                seta[temp].cstat 512
        }
        set last_see_breadcrumbs see_breadcrumbs
    }
    /* redefinequote 11 way_num: %ld
    qsprintf 11 11 way_num
    quote 11 */

    ifn testsnd -1
    {
        soundvar testsnd
        set testsnd -1
    }
    ife slope_run 1
    {
        getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
        sub temp 9216
        sub temp 480
        ifand sector[].floorstat 2 ifg player[].posz temp
        {
            gets[].wallptr temp
            getw[temp].x temp2
            getw[temp].y temp3
            getw[temp].point2 temp4
            getw[temp4].x temp5
            getw[temp4].y temp6
            sub temp2 temp5
            sub temp3 temp6
            getangle temp temp2 temp3
            add temp 1536
            ifl sector[].floorslope 0
                add temp 1024
            and temp 2047

            // get the difference in angle between this actor and the wall it hit
            // getp[].ang att_return
            getangle att_return player[].posxv player[].posyv
            sub att_return temp
            ifg att_return 1023
                sub att_return 2047
            ifl att_return -1023
                add att_return 2047

            abs att_return

            gets[].floorslope temp
            abs temp
            mul temp att_return
            ife temp 0
                set temp 1
            div temp 512
            getp[].runspeed temp2
            sub temp2 temp
            setp[].runspeed temp2
           /* redefinequote 11 %ld
            qsprintf 11 11 temp2
            quote 11 */
        }
    }

    ife p_sizzled_count 0 ifsound S_P_ZAPPED
    {
        stopsound S_P_ZAPPED
        sound S_P_ZAPPED_END
    }
    ifn p_sizzled_count 0
    {
        ifg p_sizzled_count 0
            soundonce S_P_ZAPPED
        else ifl p_sizzled_count 0
            soundonce S_P_SIZZLE
        ifg p_sizzled_count 0
            sub p_sizzled_count 1
        else ifl p_sizzled_count 0
            add p_sizzled_count 1
    }
    state do_dialog
    ifg flash_medkit 0
    {
        sub flash_medkit 1
        stopactorsound player[].i S_SHELLY_SEARCHTALK1
        stopactorsound player[].i S_SHELLY_SEARCHTALK2
    }
    else ifl flash_medkit 0
        add flash_medkit 1
    ifg flash_radar 0
    {
        sub flash_radar 1
        stopactorsound player[].i S_SHELLY_SEARCHTALK1
        stopactorsound player[].i S_SHELLY_SEARCHTALK2
    }
    else ifl flash_radar 0
        add flash_radar 1
    ifn flash_keycards 0
    {
        ife p_keyflash_delay 0
        {
            ifg flash_keycards 0
                sub flash_keycards 1
            else ifl flash_keycards 0
                add flash_keycards 1
            add p_keyflash_delay 1
        }
        else ife p_keyflash_delay 1
            set p_keyflash_delay 0
    }
    else
        set p_keyflash_delay 0
    
    getp .max_player_health temp
    div temp 3
    clamp temp 10 65536
    ifle sprite.extra temp
    {
        ifg player.firstaid_amount 0
        {
            ife p_flash_kit 0
                set p_flash_kit 30
            else ifg p_flash_kit 0
                sub p_flash_kit 1
        }
        else
            set p_flash_kit 0
    }
    else
        set p_flash_kit 0
    ifg flash_weapons 0
        sub flash_weapons 1
    ifg flash_ammo 0
        sub flash_ammo 1
    else ifl flash_ammo 0
        add flash_ammo 1
    ifg flash_hp 0
    {
        sub flash_hp 1
        stopactorsound player[].i S_SHELLY_SEARCHTALK1
        stopactorsound player[].i S_SHELLY_SEARCHTALK2
    }
    ifg flash_armor 0
        sub flash_armor 1
    else ifl flash_armor 0
        add flash_armor 1
    ife flash_wasweaponammo player[].curr_weapon
    {
        ifn flash_wasweaponammo 0
            set flash_ammo 3
        set flash_wasweaponammo 0
    }
    else
        set flash_wasweaponammo 0
    // put this in a state later. hud counter controls
    ifn hud_bombs bombette_ammo
    {
        set temp bombette_ammo
        sub temp hud_bombs
        shiftr temp 3
        ife temp 0
            set hud_bombs bombette_ammo
        else
            add hud_bombs temp
    }
    ifn hud_packs player.firstaid_amount
    {
        set temp player.firstaid_amount
        sub temp hud_packs
        shiftr temp 3
        ife temp 0
            set hud_packs player.firstaid_amount
        else
            add hud_packs temp
    }
    ifn hud_radar player.heat_amount
    {
        set temp player.heat_amount
        sub temp hud_radar
        shiftr temp 3
        ife temp 0
            set hud_radar player.heat_amount
        else
            add hud_radar temp
    }
    ifn hud_health sprite[].extra
    {
        set temp sprite[].extra
        sub temp hud_health
        shiftr temp 3
        ife temp 0
            set hud_health sprite[].extra
        else
            add hud_health temp
        ifn hub_health_trans 0
            set hud_health sprite[].extra
    }
    ifn hud_armor player[].shield_amount
    {
        set temp player[].shield_amount
        sub temp hud_armor
        shiftr temp 3
        ife temp 0
            set hud_armor player[].shield_amount
        else
            add hud_armor temp
        ifn hub_health_trans 0
            set hud_armor player[].shield_amount
    }

    getp[].ammo_amount player[].curr_weapon temp2
    ifn hud_ammo temp2
    {
        set temp temp2
        sub temp hud_ammo
        ifn player[].weapon_pos 0
            nullop
        else ife p_roll_fast 1
            shiftr temp 1
        else
            shiftr temp 3

        ife temp 0
        {
            set hud_ammo temp2
            set p_roll_fast 0
        }
        else
            add hud_ammo temp
        ifn hub_health_trans 0
        {
            set hud_ammo temp2
            set p_roll_fast 0
        }
    }

    set hub_health_trans 0
    ifn p_nextlevel_ladder 0
    {
        add p_nextlevel_ladreset 1
        ifg p_nextlevel_ladreset 3
        {
            set p_nextlevel_ladder 0
            set p_nextlevel_ladreset 0
        }
    }
    else
        set p_nextlevel_ladreset 0
    ifaction NOPLAYER
        action PLAYER_STAND
    ifaction PLAYER_DYING
    {
        ifg sprite.extra 10
            action PLAYER_STAND
    }
    else ifaction PLAYER_DEAD
    {
        ifg sprite.extra 10
            action PLAYER_STAND
    }
    else ifaction PLAYER_HIT
    {
        ifactioncount 2
            action PLAYER_STAND
    }
    else ifaction PLAYER_SHOCKED
    {
        ifactioncount 4
            action PLAYER_STAND
    }
    else ife p_laddermounted 1
    {
        ifn p_ladder_horiz 100
        {
            ifaction PLAYER_LADDER_CLIMB
                nullop
            else
                action PLAYER_LADDER_CLIMB
        }
        else
            action PLAYER_LADDER
        cos p_ladder_disp_xoff sprite.ang
        sin p_ladder_disp_yoff sprite.ang
        shiftr p_ladder_disp_xoff 8
        shiftr p_ladder_disp_yoff 8
    }
    else ifinwater
    {
        ife sprite.xvel 0
        {
            ifaction PLAYER_SWIM
                nullop
            else
                action PLAYER_SWIM
        }
        else ifg sprite.xvel 64
        {
            ifaction PLAYER_SWIMMING_FAST
                nullop
            else
                action PLAYER_SWIMMING_FAST
        }
        else ifaction PLAYER_SWIMMING
            nullop
        else
            action PLAYER_SWIMMING
    }
    else
    {
        set temp 0
        ifgapzl 48
            set temp 1
        else ifp pducking
            set temp 1
        ife temp 1
        {
            set temp sprite.xvel
            ife sprite.xvel 0
            {
                ifaction PLAYER_CROUCH
                    nullop
                else
                    action PLAYER_CROUCH
            }
            else ifg sprite.xvel 64
            {
                ifaction PLAYER_CROUCH_RUN
                    nullop
                else
                    action PLAYER_CROUCH_RUN
            }
            else ifaction PLAYER_CROUCH_WALK
                nullop
            else
                action PLAYER_CROUCH_WALK
        }
        else
        {
            ife player.curr_weapon WEAPON_SHOCKER
            {
                switch player.kickback_pic                
                    case 19
                    case 27
                        action PLAYER_BATON
                        break
                    case 43
                        action PLAYER_BATON
                        break
                endswitch
            }
            ifaction PLAYER_BATON
            {
                ifactioncount 3
                    action PLAYER_STAND
            }
            else
            {
                ifl sprite.xvel 5
                {
                    ifaction PLAYER_STAND
                        nullop
                    else
                        action PLAYER_STAND
                }
                else ifg sprite.xvel 96
                {
                    ifaction PLAYER_RUN
                        nullop
                    else
                        action PLAYER_RUN
                }
                else ifaction PLAYER_WALK
                    nullop
                else
                    action PLAYER_WALK
            }
        }
        ifaction PLAYER_BATON
            nullop
        else
        {
            ifg player.jumping_counter 0
                action PLAYER_JUMP
            else ifp pfalling
                action PLAYER_FALL
            else 
            {
                iffloordistl 4
                    nullop
                else ifg player.poszv 256
                    action PLAYER_FALL
            }
        }
    }
    /*
    action NOPLAYER             0 1 1 1 1
action PLAYER_STAND         5 1 5 1 1
action PLAYER_WALK          15 4 5 1 16
action PLAYER_RUN           15 4 5 1 8
action PLAYER_JUMP          40 1 5 1 1
action PLAYER_FALL          45 1 5 1 1
action PLAYER_CROUCH        60 1 5 1 1
action PLAYER_CROUCH_WALK   60 4 5 1 16
action PLAYER_CROUCH_RUN    60 4 5 1 8
action PLAYER_BATON         85 3 5 1 1
action PLAYER_LADDER        110 1 5 1 1
action PLAYER_LADDER_CLIMB  110 4 5 1 8
action PLAYER_SWIM          135 4 5 1 32
action PLAYER_SWIMMING      135 4 5 1 16
action PLAYER_SWIMMING_FAST 135 4 5 1 8
action PLAYER_HIT           150 1 5 1 1
action PLAYER_SHOCKED       150 2 5 1 1
action PLAYER_DYING         165 7 1 1 1
action PLAYER_DEAD          171 1 1 1 1 */
    geta .mdflags temp
    or temp 16
    seta .mdflags temp
enda

appendevent EVENT_ANIMATESPRITES
    ifactor APLAYER
    {
        switch sprite.htg_t 4
            case PLAYER_CROUCH
            case PLAYER_CROUCH_WALK
            case PLAYER_CROUCH_RUN
                gettspr .tsprz temp
                sub temp 2048
                settspr .tsprz temp
                break
            case PLAYER_SWIM
            case PLAYER_SWIMMING
            case PLAYER_SWIMMING_FAST
                gettspr .tsprz temp
                sub temp 4864
                iffloordistl 4
                    add temp 2048
                settspr .tsprz temp
                break
            case PLAYER_LADDER
            case PLAYER_LADDER_CLIMB
                set temp player.posx
                add temp p_ladder_disp_xoff
                settspr .tsprx temp
                
                set temp player.posy
                add temp p_ladder_disp_yoff
                settspr .tspry temp
                break
        endswitch
        ifn tspr.tsprpal 77
        {
            settspr .tsprxrepeat 26
            settspr .tspryrepeat 21
            ife g_opaque_shelly 1
            {
                set temp tspr.tsprcstat
                ifand temp 2
                {
                    xor temp 2
                    settspr .tsprcstat temp
                }
            }
        }
        else
        {
            settspr .tsprxrepeat 26
            settspr .tspryrepeat 2
        }
    }
endevent

appendevent EVENT_ACTIVATECHEAT
    switch RETURN
        case 0
        case 18
            ife userdef[].god 0
                set flash_hp 3
            break
        case 1
        case 21
        case 26
            ife RETURN 1
            {
                set flash_armor 3
                set flash_keycards 3
                set flash_medkit 3
                setp[].shield_amount player[].max_shield_amount
                setp[].firstaid_amount MEDKIT_MAXAMOUNT
                setp[].heat_amount RADAR_MAXAMOUNT
                setp[].got_access 7
                quote 5
            }
            else ife RETURN 26
            {
                set flash_armor 3
                set flash_keycards 3
                set flash_medkit 3
                setp[].shield_amount player[].max_shield_amount
                setp[].firstaid_amount MEDKIT_MAXAMOUNT
                setp[].heat_amount RADAR_MAXAMOUNT
                setp[].got_access 7
                quote 19
                ife userdef[].god 1
                    setu[].god 0
                else
                    setu[].god 1
            }
            else
                quote 119
            set flash_ammo 4
            set p_face_grin 30
            set bombette_ammo BOMBETTE_MAXAMMO
            set p_firstgrenade 1
            setp[].gotweapon WEAPON_LOVERBOY 1
            setp[].gotweapon WEAPON_SHOTGUN 1
            setp[].gotweapon WEAPON_SMG 1
            setp[].gotweapon WEAPON_MINIGUN 1
            setp[].gotweapon WEAPON_CROSSBOW 1
            setp[].gotweapon WEAPON_BOWLINGBOMB 1
            setp[].gotweapon WEAPON_GRENADE 1
            setp[].gotweapon 8 1
            setp[].ammo_amount WEAPON_LOVERBOY WEAPON1_MAXAMMO
            setp[].ammo_amount WEAPON_SHOTGUN WEAPON2_MAXAMMO
            setp[].ammo_amount WEAPON_SMG WEAPON3_MAXAMMO
            setp[].ammo_amount WEAPON_MINIGUN WEAPON4_MAXAMMO
            setp[].ammo_amount WEAPON_BOWLINGBOMB WEAPON5_MAXAMMO
            setp[].ammo_amount WEAPON_GRENADE GRENADE_MAXAMMO
            setp[].ammo_amount WEAPON_CROSSBOW WEAPON7_MAXAMMO
            setp[].ammo_amount 8 WEAPON8_MAXAMMO
            ife other_smg 0
                set other_smg_toggle 12
            set other_smg 1
            set RETURN -1
            break
        case 8
            set flash_armor 3
            set flash_keycards 3
            set flash_medkit 3
            set p_face_grin 30
            setp[].shield_amount player[].max_shield_amount
            setp[].firstaid_amount MEDKIT_MAXAMOUNT
            setp[].heat_amount RADAR_MAXAMOUNT
            setp[].got_access 7
            quote 120
            set RETURN -1
            break
        case 9
        case 20
        case 24
        case 17
            break
        case 23
            set flash_medkit 3
            setp[].got_access 7
            break
        case 7
            set RETURN -1
            ifrnd 127
                espawn A_CHAIR_2
            else
                espawn A_CHAIR_1
            rand temp 28 // for jarmo
            add temp 13
            seta[RETURN].pal temp
            quote 160
            break
        case 12
            set RETURN -1
            xor fly 1
            ife fly 1
                quote 161
            else
                quote 162
            break
        case 13
            set RETURN -1
            xor pause_ai 1
            ife pause_ai 1
                quote 163
            else
                quote 164
            break
        case 16
            set RETURN -1
            set payne_mode PAYNE_TIME
            quote 166
            break
        case 19
            set RETURN -1
            quote 165
            for temp allwalls
            {
                setw[temp].nextwall -1
                setw[temp].nextsector -1
            }
            break
        default
            set RETURN -1
            break
    endswitch

endevent

onevent EVENT_PROCESSINPUT
    ifvarand input[].bits INPUT_JUMP
    {
        ife p_laddermounted 1 ife press_jump 0
        {
            set p_laddermounted 0
            setp[].poszv -1536
            getp[].ang temp
            set temp2 temp
            sub temp2 1024
            and temp2 2047
            setp[].ang temp2
            set move_v 10
            state move_actor
            setp[].ang temp
            add move_xv player[].posxv
            setp[].posxv move_xv
            add move_yv player[].posxv
            setp[].posyv move_yv
        }
        set press_jump 3
    }
    ifvarand input[].bits INPUT_CROUCH
    {
        ife p_laddermounted 1 ife press_crouch 0
        {
            set p_laddermounted 0
            setp[].poszv 1536
            getp[].ang temp
            set temp2 temp
            sub temp2 1024
            and temp2 2047
            setp[].ang temp2
            set move_v 10
            state move_actor
            setp[].ang temp
            add move_xv player[].posxv
            setp[].posxv move_xv
            add move_yv player[].posxv
            setp[].posyv move_yv
        }
        set press_crouch 3
    }
    ifn p_nextlevel -1
    {
        setinput[].fvel 0
        setinput[].svel 0
    }
endevent

appendevent EVENT_MOVEFORWARD
    ife p_nextlevel -1
        set press_forward 3
    else
        set RETURN -1
endevent

appendevent EVENT_MOVEBACKWARD
    ife p_nextlevel -1
        set press_backward 3
    else
        set RETURN -1
endevent

appendevent EVENT_STRAFELEFT
    ife p_nextlevel -1
        set press_left 3
    else
        set RETURN -1
endevent

appendevent EVENT_STRAFERIGHT
    ife p_nextlevel -1
        set press_right 3
    else
        set RETURN -1
endevent

appendevent EVENT_QUICKKICK
    set press_kick 3
    set RETURN -1
endevent

appendevent EVENT_PROCESSINPUT
    ifand input.bits INPUT_QUICK_KICK
        ife player.curr_weapon WEAPON_SHOCKER
            set press_kick 3
endevent

// Use this later to emulate "quake" command but better
/*
 if (g_earthquakeTime > 0 && p->on_ground == 1)
        {
            CAMERA(pos.z) += 256-(((g_earthquakeTime)&1)<<9);
            CAMERA(ang) += (2-((g_earthquakeTime)&2))<<2;
        }
*/

appendevent EVENT_ALTFIRE
    ife p_eol 0
        ife p_laddermounted 0
            ife p_have_dart 0
                set press_alt 3
endevent

// Status bar

defstate shift_status_x
    setvarvar aspect_ratio xdim
    shiftl aspect_ratio 5
    divvarvar aspect_ratio ydim
    ifand hud_orientation 512
    {
        shiftl hud_x 16
        set temp hud_x
        set temp2 328
        shiftl temp2 16
        sub temp2 temp
        scalevar temp2 temp2 userdef[].statusbarscale 100
        set temp 328
        shiftl temp 16
        sub temp temp2
        set hud_x temp

        getu[].statusbarscale temp
        sub temp 100
        mul temp 400
        sub hud_x temp
        /*redefinequote 11 %ld
        qsprintf 11 11 hud_x
        ife hud_tilenum I_LOVERBOY_AMMO2
            quote 11 */
        ifge aspect_ratio 75
        {
            setvarvar aspect_ratio xdim
            shiftl aspect_ratio 8
            mulvar aspect_ratio 10
            divvarvar aspect_ratio ydim
            mul aspect_ratio 10
            sub aspect_ratio 40960
            set hud_rescale_temp4 aspect_ratio
            mul hud_rescale_temp4 10
            div hud_rescale_temp4 9
            shiftl hud_rescale_temp4 8
            sub hud_x hud_rescale_temp4
        }
    }
    else
    {
        shiftl hud_x 16
        ifand hud_orientation 256
        {
            scalevar hud_x hud_x userdef[].statusbarscale 100
            getu[].statusbarscale temp
            sub temp 100
            shiftl temp 16
            mul temp 6
            div temp 13
            add hud_x temp
        }
        ifge aspect_ratio 75 ifand hud_orientation 256
        {
            setvarvar aspect_ratio xdim
            shiftl aspect_ratio 8
            mulvar aspect_ratio 10
            divvarvar aspect_ratio ydim
            mul aspect_ratio 10
            sub aspect_ratio 40960
            set hud_rescale_temp4 aspect_ratio
            mul hud_rescale_temp4 10
            div hud_rescale_temp4 9
            shiftl hud_rescale_temp4 8
            add hud_x hud_rescale_temp4
        }
    }
ends
defstate shift_status_y
    shiftl hud_y 16
    set temp hud_y
    set temp2 202
    shiftl temp2 16
    sub temp2 temp
    scalevar temp2 temp2 userdef[].statusbarscale 100
    set temp 203
    shiftl temp 16
    sub temp temp2
    set hud_y temp
    set hud_noshift 1

    setvarvar aspect_ratio xdim
    shiftl aspect_ratio 5
    divvarvar aspect_ratio ydim
ends
defstate shift_status_z
    getu[].statusbarscale temp
    sub temp 100
    mul temp hud_scale
    abs temp
    div temp 100
    sub hud_scale temp
ends

defstate select_weapon_tile
    switch temp
        case 0
            set hudx_tilenum I_BATON
            break
        case 1
            set hudx_tilenum I_LOVERBOY
            break
        case 2
            set hudx_tilenum I_SHOTGUN
            break
        case 3
            set hudx_tilenum I_SMG
            break
        case 4
            set hudx_tilenum I_MINIGUN
            break
        case 5
            set hudx_tilenum I_BOWLINGBOMB_PICKUP
            break
        case 6
            set hudx_tilenum I_GRENADELAUNCHER
            break
        case 7
            set hudx_tilenum I_PLASMACROSSBOW
            break
        case 8
            set hudx_tilenum 6957
            break
    endswitch
ends

defstate do_ammo_on_wheel
    redefinequote 190 %ld
    qsprintf 190 190 player.ammo_amount temp
    set hudx_quote 190
    set hudx_tilenum STARTALPHANUM
    xor hudx_orientation 16
    add hudx_x temp2
    set hudx_alpha -129
    or hudx_txtflags TEXT_XRIGHT
    sub hudx_scale 4096
    set temp6 hudx_scale
    shiftr temp6 14
    add hudx_y temp6
    sub hudx_x temp6
    ifn temp 0
        state DrawText640x480Hud
    sub hudx_x temp2
    sub hudx_y temp6
    add hudx_x temp6
    xor hudx_orientation 16
    add hudx_scale 4096
    set hudx_alpha 16
    set hudx_pal 1
    set hudx_shade 10
ends


defstate draw_hud_weaponwheel
    ifg flash_weapons 0
    {
        state ResetText
        state ResetTile
        getp .curr_weapon temp
        set temp8 0
        for itervar range 10
        {
            ife player.gotweapon itervar 1
            {
                ife itervar WEAPON_GRENADE
                {
                
                    ife p_firstgrenade 1
                        add temp8 1
                }
                else
                    add temp8 1
            }
        }
        set hudx_x 632
        set hudx_y 240
        
        set hudx_scale 32768
        add hudx_scale 4096
        ifg flash_weapons 26
        {
            set temp2 flash_weapons
            sub temp2 26
            div hudx_scale temp2
        }
        else ifl flash_weapons 4
        {
            set temp2 flash_weapons
            sub temp2 5
            inv temp2
            div hudx_scale temp2
        }
        ife player.gotweapon temp 1
        {
            state select_weapon_tile
            set temp2 tilesizx[hudx_tilenum]
            shiftr temp2 2
            sub hudx_x temp2
            set hudx_orientation 545
            add hudx_x 2
            add hudx_y 2
            set hudx_pal 77
            state DrawTile640x480Hud
            sub hudx_x 2
            sub hudx_y 2

            set hudx_pal 0
            set hudx_orientation 513
            set hudx_alpha -1
            
            ife hudx_tilenum 6957
                    set hudx_pal 21
            state DrawTile640x480Hud

            sub hudx_scale 4096
            set hudx_orientation 545

            set hudx_pal 12
            state do_ammo_on_wheel
       }
       ifg temp8 1
       {
            getp .curr_weapon temp
            
            set temp7 0
            set temp9 0
            for itervar range 10
            {
                ife temp7 0
                {
                    getp .curr_weapon temp
                    set temp2 temp
                    sub temp2 1
                    sub temp2 itervar
                    ifl temp2 -9
                    {
                        abs temp2
                        mod temp2 9
                    }
                    ifl temp2 0
                        add temp2 9
                    abs temp2
                    set temp3 0
                    ife player.gotweapon temp2 1
                    {
                        set temp3 1
                        ife temp2 WEAPON_GRENADE
                            ife p_firstgrenade 0
                                set temp3 0
                    }
                    ife temp2 temp
                        set temp7 -1
                    else ife temp3 1
                    {
                        set temp temp2
                        state select_weapon_tile
                        sub hudx_y 32
                        set hudx_x 632
                        set temp2 tilesizx[hudx_tilenum]
                        shiftr temp2 2
                        sub hudx_x temp2
                        state DrawTile640x480Hud
                        add temp9 1
                        ife temp9 2
                            set temp7 -1
                        ife temp9 temp8
                            set temp7 -1

                        set hudx_shade 20
                        set hudx_pal 11
                        state do_ammo_on_wheel
                    }
                }
            }
            ifg temp8 2
            {
                set temp7 0
                set temp9 0
                set hudx_y 240
                for itervar range 10
                {
                    ife temp7 0
                    {
                        getp .curr_weapon temp
                        set temp2 temp
                        add temp2 1
                        add temp2 itervar
                        mod temp2 9
                        abs temp2
                        set temp3 0
                        ife player.gotweapon temp2 1
                        {
                            set temp3 1
                            ife temp2 WEAPON_GRENADE
                                ife p_firstgrenade 0
                                    set temp3 0
                        }
                        ife temp2 temp
                            set temp7 -1
                        else ife temp3 1
                        {
                            set temp temp2
                            state select_weapon_tile
                            add hudx_y 32
                            set hudx_x 632
                            set temp2 tilesizx[hudx_tilenum]
                            shiftr temp2 2
                            sub hudx_x temp2
                            state DrawTile640x480Hud
                            add temp9 1
                            ife temp9 2
                                set temp7 -1
                            ife temp9 temp8
                                set temp7 -1

                            set hudx_shade 20
                            set hudx_pal 11
                            state do_ammo_on_wheel
                        }
                    }
                }
            }
       }
   }
ends

defstate draw_hud_medkits
    ifl hud_packs 1
        break

    state ResetTile
    set hudx_x HUD_MEDKIT_X
    set hudx_y HUD_MEDKIT_Y
    set hudx_scale HUD_MEDKIT_Z
    set hudx_tilenum I_MEDKIT
    ifn flash_medkit 0
    {
        ifg flash_medkit 2
            set hudx_pal 5
        else ifg flash_medkit 0
            set hudx_pal 4

        set temp6 flash_medkit
        shiftl temp6 12
        ifl flash_medkit 0
        {
            inv temp6
            shiftr temp6 1
        }
        add hudx_scale temp6
    }
    
    set hudx_orientation 257
    state DrawTile640x480Hud
    ifg p_flash_kit 10
    {
        set temp p_flash_kit
        sub temp 30
        inv temp
        set temp2 temp
        shiftl temp2 1
        add hudx_shade temp2
        shiftl temp 9
        add hudx_scale temp
        set hudx_pal 11
        set hudx_alpha -129
        or hudx_orientation 1
        state DrawTile640x480Hud
        set hudx_alpha 0
        set hudx_shade 0
    }

    state ResetText
    set hudx_x HUD_MEDKIT_TXT_X
    set hudx_y HUD_MEDKIT_TXT_Y
    set hudx_scale HUD_MEDKIT_TXT_Z
    redefinequote 190 x%ld
    qsprintf 190 190 hud_packs
    set hudx_quote 190
    set hudx_tilenum STARTALPHANUM
    set hudx_pal 0
    ifg flash_medkit 0
    {
        ifg flash_medkit 2
            set hudx_pal 5
        else
            set hudx_pal 4
        set temp6 flash_medkit
        shiftl temp6 10
        add hudx_scale temp6
    }
    else
        set hudx_pal 12
    set hudx_orientation 273
    state DrawText640x480Hud
ends

defstate draw_hud_keycards
    state ResetTile
    set hudx_x HUD_KEYS_X
    set hudx_y HUD_KEYS_Y
    set hudx_scale HUD_KEYS_Z
    set hudx_tilenum I_ACCESSCARD
    set hudx_orientation 256
    set hudx_alpha -10
    ifn flash_keycards 0
    {
        set temp6 flash_keycards
        ifg temp6 0
            mod temp6 4
        shiftl temp6 12
        add hudx_scale temp6
        ife p_keyflash_delay 1
        {
            shiftr temp6 6
            sub hudx_scale temp6
        }
        ifl flash_keycards 4
            xor hudx_orientation 1
    }
    set temp6 flash_keycards
    ifg temp6 0
        mod temp6 4
    ifg flash_keycards 3
    {
        set temp3 flash_keycards
        shiftl temp3 1
        add temp3 flash_keycards
        shiftr temp3 2
        add hudx_x temp3
    }
    ifand player[].got_access 1
    {
        ife temp6 2
            set hudx_pal 80
        else
            set hudx_pal PAL_KEYCARD_1
        state DrawTile640x480Hud
        add hudx_x HUD_KEYS_SPACE
    }
    ifand player[].got_access 2
    {
        ife temp6 2
            set hudx_pal 80
        else
            set hudx_pal PAL_KEYCARD_2
        state DrawTile640x480Hud
        add hudx_x HUD_KEYS_SPACE
    }
    ifand player[].got_access 4
    {
        ife temp6 2
            set hudx_pal 80
        else
            set hudx_pal PAL_KEYCARD_3
        state DrawTile640x480Hud
        add hudx_x HUD_KEYS_SPACE
    }
    ifand player[].got_access 8
    {
        ife temp6 2
            set hudx_pal 80
        else
            set hudx_pal PAL_KEYCARD_4
        state DrawTile640x480Hud
    }
ends

appendevent EVENT_DISPLAYSBAR
    ifn userdef[].screen_size 0 ife hub_health_trans 0
    {
        state draw_hud_weaponwheel
        state draw_hud_medkits
        state draw_hud_keycards
    }
endevent

defstate draw_hud_health
    state ResetTile
    set hudx_x HUD_FACE_X
    set hudx_y HUD_FACE_Y
    set hudx_scale HUD_FACE_Z
    set hudx_tilenum HUD_FACE
    set temp6 sprite[].extra
    mul temp6 100
    div temp6 player.max_player_health
    ifp pdead
    {
        set hudx_tilenum 5556
        add hudx_tilenum p_dead_face
    }
    else ife userdef[].god 1
        set hudx_tilenum 5559
    else
    {
        ifn p_face_angry 0
        {
            ifle temp6 40
                add hudx_tilenum 1
            else
                add hudx_tilenum 3
        }
        else ifn p_face_grin 0
        {
            ifle temp6 40
                add hudx_tilenum 2
            else
                add hudx_tilenum 4
        }
        else ifg p_face_idle 90
        {
            add hudx_tilenum 1
            ifg p_face_idle 106
                add hudx_tilenum 1
            ifg p_face_idle 137
                sub hudx_tilenum 1
        }
        
        ifle temp6 80
        {
            add hudx_tilenum 5
            ifle temp6 60
            {
                add hudx_tilenum 5
                ifle temp6 40
                {
                    add hudx_tilenum 5
                    ifle temp6 20
                    {
                        add hudx_tilenum 3
                    }
                }
            }
        }
    }
    switch p_armor_type
        default
        case 0
            set hudx_pal 0
            break
        case 1
            set hudx_pal 20
            break
        case 2
            set hudx_pal 88
            break
    endswitch
    ifn flash_hp 0
    {
        set temp4 flash_hp
        shiftl temp4 10
        add hudx_scale temp4
    }
    set hudx_orientation 256
    state DrawTile640x480Hud

    state ResetText
    set hudx_x HUD_HEALTH_TXT_X
    set hudx_y HUD_HEALTH_TXT_Y
    set hudx_scale HUD_HEALTH_TXT_Z
    ifg hud_health player.max_player_health
        set hudx_pal 6
    else ifle temp6 40
        set hudx_pal 9
    redefinequote 190 %ld
    qsprintf 190 190 hud_health
    set hudx_quote 190
    set hudx_tilenum BIGALPHANUM
    set hudx_orientation 272
    state DrawText640x480Hud
ends

defstate draw_hud_armor
    set temp6 0
    ifl flash_armor 0
        set temp6 2
    else ifn hud_armor 0
        set temp6 1
    ifn temp6 0
    {
        state ResetText
        set hudx_x HUD_HEALTH_TXT_X
        set hudx_y HUD_HEALTH_TXT_Y
        set hudx_scale HUD_HEALTH_TXT_Z
        redefinequote 190 %ld
        qsprintf 190 190 hud_health
        set hudx_quote 190
        set hudx_tilenum BIGALPHANUM
        set hudx_orientation 272
        qstrdim temp4 temp5 hudx_tilenum 160 100 hudx_scale hudx_angle hudx_quote hudx_orientation hudx_calc_xspace hudx_calc_yline hudx_calc_xbetween hudx_calc_ybetween hudx_calc_txtflags windowx1 windowy1 windowx2 windowy2
        sub temp4 45
        clamp temp4 0 240

        set hudx_x HUD_ARMOR_X
        
        ifge hud_health 200
            add hudx_x temp4
        set hudx_y HUD_ARMOR_Y
        set hudx_scale HUD_ARMOR_Z
        ife p_armor_type 0
        {
            set hudx_tilenum I_BULLETVEST
            sub hudx_scale 2304
        }
        else ife p_armor_type 1
        {
            set hudx_tilenum I_ARMORVEST
            sub hudx_scale 6912
        }
        else ife p_armor_type 2
        {
            set hudx_tilenum I_TECHVEST
            sub hudx_scale 6912
        }
        set hudx_pal 0
        ifn flash_armor 0
        {
            set temp6 flash_armor
            shiftl temp6 11
            add hudx_scale temp6
            ifl flash_armor 0
                set hudx_pal 10
        }
        set hudx_orientation 256
        state DrawTile640x480Hud

        ifn hud_armor 0
        {
            set hudx_x HUD_ARMOR_TXT_X
            set hudx_y HUD_ARMOR_TXT_Y
            ifge hud_health 200
                add hudx_x temp4
            set hudx_scale HUD_ARMOR_TXT_Z
            redefinequote 190 %ld
            qsprintf 190 190 hud_armor
            set hudx_quote 190
            set hudx_tilenum BIGALPHANUM

            set hudx_orientation 272
            ifg player.shield_amount player.max_shield_amount
            {
                set temp3 player.shield_amount
                sub temp3 player.max_shield_amount
                ifge temp3 ARMORSHARD_EXTRAAMOUNT
                    set hudx_pal HUD_ARMOR_TXT_FULL_PAL
                else
                    set hudx_pal HUD_ARMOR_TXT_OVER_PAL
            }
            state DrawText640x480Hud
        }
    }
ends

defstate draw_hud_ammo
    ifvarn player[].curr_weapon WEAPON_SHOCKER
    {
        set hudx_x HUD_AMMO_X
        set hudx_y HUD_AMMO_Y
        set hudx_scale HUD_AMMO_Z
        set hudx_pal 0
        ifn flash_ammo 0
        {
            set temp6 flash_ammo
            shiftl temp6 11
            add hudx_scale temp6
        }
        switch player[].curr_weapon
            case WEAPON_LOVERBOY
                set hudx_tilenum I_LOVERBOY_AMMO2
                break
            case WEAPON_SHOTGUN
            case WEAPON_GRENADE
                set hudx_tilenum 225
                ife w2alt 30
                    set hudx_tilenum 226
                else ifl w2alt 0
                    set hudx_tilenum 226
                break
            case WEAPON_SMG
                sub hudx_scale 8192
                set hudx_tilenum I_SMG_AMMO
                break
            case WEAPON_CROSSBOW
                set hudx_tilenum I_PLASMACROSSBOW_AMMO
                break
            case WEAPON_MINIGUN
                shiftr hudx_scale 1
                set hudx_tilenum I_MINIGUN_AMMO
                break
            case WEAPON_BOWLINGBOMB
                shiftr hudx_scale 1
                set hudx_tilenum I_BOWLINGBOMB
                ifg p_pup_bomb_time 0
                {
                    ifl p_pup_bomb_time 300
                    {
                        set hudx_pal 103
                        ifl p_pup_bomb_time 30
                        {
                            ifand p_pup_bomb_time 2
                                set hudx_pal 105
                        }
                        else ifl p_pup_bomb_time 140
                        {
                            ifand p_pup_bomb_time 4
                                set hudx_pal 105
                        }
                        else
                        {
                            ifand p_pup_bomb_time 8
                                set hudx_pal 105
                        }
                    }
                    else
                        set hudx_pal 103
                }
				else ifge bbomb_hold_count 9
                {
                    ife bbomb_alt_mode 0
                    {
                        ifand w5_sparkle 1
                            set hudx_pal 62
                        else
                            set hudx_pal 6
                        set hudx_shade 10
                        set hudx_alpha -129
                        ifand w5_sparkle 2
                            set hudx_alpha -255
                        set hudx_orientation 512
                        state DrawTile640x480Hud

                        set hudx_shade 0
                        set hudx_alpha 0
                    }
                    else
                    {
                        ifge bbomb_hold_count 42
                        {
                            ifand bbomb_hold_count 4
                                set hudx_pal 62
                            else
                                set hudx_pal 9
                        }
                        else
                        {
                            ifand bbomb_hold_count 8
                                set hudx_pal 62
                            else
                                set hudx_pal 9
                        }
                    }

                }
                else ifn bbomb_alt_mode 0 ifge bbomb_hold_count 40
                {
                    ifand bbomb_hold_count 16
                        set hudx_pal 10
                    else
                        set hudx_pal 62
                }
                break
            case 8
                set hudx_tilenum 6957
                set hudx_pal 21
                shiftr hudx_scale 1
                break
            case 9
                set hudx_tilenum 3006
                break
            default
                set hudx_tilenum 3006
                break
        endswitch
        set hudx_orientation 512
        state DrawTile640x480Hud



        set hudx_x HUD_AMMO_TXT_X
        set hudx_y HUD_AMMO_TXT_Y
        set hudx_scale HUD_AMMO_TXT_Z
        ifn bbomb_mode 1 // bombardier trial
        ifn minigun 1 // horde mode
        {
            ifg p_pup_bomb_time 1
            {
                redefinequote 190 INF
                shiftl hudx_scale 3
                div hudx_scale 9
            }
            else
            {
				switch player[].curr_weapon
					case WEAPON_LOVERBOY
						redefinequote 190 %ld / %ld
						set am_p_tmp2 PISTOL_CLIP
						sub am_p_tmp2 weapon1_realclip
						ifl hud_ammo am_p_tmp2 
							set am_p_tmp2 hud_ammo
						qsprintf 190 190 am_p_tmp2 hud_ammo
					break
					case WEAPON_SHOTGUN
						redefinequote 190 %ld / %ld
						set am_p_tmp2 SHOTGUN_CLIP
						sub am_p_tmp2 weapon2_realclip
						ifl hud_ammo am_p_tmp2 
							set am_p_tmp2 hud_ammo
						qsprintf 190 190 am_p_tmp2 hud_ammo
					break
					case WEAPON_SMG
						redefinequote 190 %ld / %ld
						set am_p_tmp2 SMG_CLIP
						sub am_p_tmp2 weapon3_realclip
						ifl hud_ammo am_p_tmp2 
							set am_p_tmp2 hud_ammo
						qsprintf 190 190 am_p_tmp2 hud_ammo
					break
					case WEAPON_GRENADE
						redefinequote 190 %ld / %ld
						set am_p_tmp2 SHOTGUN_CLIP
						sub am_p_tmp2 weapon6_realclip
						ifl hud_ammo am_p_tmp2 
							set am_p_tmp2 hud_ammo
						qsprintf 190 190 am_p_tmp2 hud_ammo
					break
					case WEAPON_CROSSBOW
						redefinequote 190 %ld / %ld
						set am_p_tmp2 CROSSBOW_CLIP
						sub am_p_tmp2 weapon7_realclip
						ifl hud_ammo am_p_tmp2 
							set am_p_tmp2 hud_ammo
						qsprintf 190 190 am_p_tmp2 hud_ammo
					break
					default
						redefinequote 190 %ld
						qsprintf 190 190 hud_ammo
					break
				endswitch
            }
        }
        else
        {
            redefinequote 190 INF
            shiftl hudx_scale 3
            div hudx_scale 9
        }
        set hudx_quote 190
        set hudx_tilenum BIGALPHANUM
        set hudx_orientation 528
        set hudx_txtflags 1
        state DrawText640x480Hud
        switch player.curr_weapon
            case WEAPON_SHOTGUN
            case WEAPON_GRENADE
                ifge w2alt 0 ifl w2alt 30
                {
                    ifg player.ammo_amount WEAPON_GRENADE 0
                    {
                        set hudx_tilenum 226
                        set hudx_x HUD_AMMO_X
                        set hudx_y HUD_AMMO_Y
                        set hudx_scale HUD_AMMO_Z
                        shiftl hudx_scale 1
                        div hudx_scale 3
                        set hudx_pal 0
                        add hudx_x 10
                        sub hudx_y 32
                        ifn flash_ammo 0
                        {
                            set temp6 flash_ammo
                            shiftl temp6 11
                            sub hudx_scale temp6
                        }
                        set hudx_orientation 512
                        or hudx_orientation 1
                        state DrawTile640x480Hud

                        set hudx_x HUD_AMMO_TXT_X
                        set hudx_y HUD_AMMO_TXT_Y
                        set hudx_scale HUD_AMMO_TXT_Z
                        shiftl hudx_scale 1
                        div hudx_scale 3
                        ifg flash_ammo 0
                        {
                            set temp6 flash_ammo
                            shiftl temp6 11
                            sub hudx_scale temp6
                        }
                        set hudx_pal 1
                        add hudx_x 20
                        sub hudx_y 24

                        redefinequote 190 %ld / %ld
						set am_p_tmp2 SHOTGUN_CLIP
						subvarvar am_p_tmp2 weapon6_realclip
                        qsprintf 190 190 am_p_tmp2 player.ammo_amount WEAPON_GRENADE
                        set hudx_quote 190
                        set hudx_tilenum BIGALPHANUM
                        set hudx_orientation 528
                        or hudx_orientation 1
                        set hudx_txtflags 1
                        state DrawText640x480Hud
                    }
                }
                else ifg player.ammo_amount WEAPON_SHOTGUN 0
                {
                    set hudx_tilenum 225
                    set hudx_x HUD_AMMO_X
                    set hudx_y HUD_AMMO_Y
                    set hudx_scale HUD_AMMO_Z
                    shiftl hudx_scale 1
                    div hudx_scale 3
                    set hudx_pal 0
                    add hudx_x 10
                    sub hudx_y 32
                    ifn flash_ammo 0
                    {
                        set temp6 flash_ammo
                        shiftl temp6 11
                        sub hudx_scale temp6
                    }
                    set hudx_orientation 512
                    or hudx_orientation 1
                    state DrawTile640x480Hud
                    
                    set hudx_x HUD_AMMO_TXT_X
                    set hudx_y HUD_AMMO_TXT_Y
                    set hudx_scale HUD_AMMO_TXT_Z
                    shiftl hudx_scale 1
                    div hudx_scale 3
                    ifg flash_ammo 0
                    {
                        set temp6 flash_ammo
                        shiftl temp6 11
                        sub hudx_scale temp6
                    }
                    set hudx_pal 1
                    add hudx_x 20
                    sub hudx_y 24

                    redefinequote 190 %ld / %ld
					set am_p_tmp2 SHOTGUN_CLIP
					subvarvar am_p_tmp2 weapon2_realclip
                    qsprintf 190 190 am_p_tmp2 player.ammo_amount WEAPON_SHOTGUN
                    set hudx_quote 190
                    set hudx_tilenum BIGALPHANUM
                    set hudx_orientation 528
                    or hudx_orientation 1
                    set hudx_txtflags 1
                    state DrawText640x480Hud
                }
                break
            case WEAPON_BOWLINGBOMB
                ife bbomb_alt_mode 0 ifge bbomb_hold_count 9
                {
                    ifand w5_sparkle 1
                        set hudx_pal 62
                    else
                        set hudx_pal 6
                    set hudx_shade 10
                    set hudx_alpha -129
                    ifand w5_sparkle 2
                        set hudx_alpha -255
                    state DrawText640x480Hud

                    set hudx_shade 0
                    set hudx_alpha 0
                }
                break
        endswitch
    }
ends

define PUP_HUD_DIVISOR 30 // adjust pickup number display. 0 will crash shit obviously.
defstate pup_decimal_draw
    div temp PUP_HUD_DIVISOR
    redefinequote 190 %ld
    qsprintf 190 190 temp
    set hudx_quote 190
    set hudx_tilenum BIGALPHANUM
    set hudx_orientation 0
    set hudx_txtflags 258
    set hudx_xbetween 58
    sub hudx_x 1
    mod hudx_shade 4
    state DrawText640x480Hud
ends
defstate draw_hud_powerups
    set temp9 0
    ifg p_hazard_amount 0
        or temp9 1
    ifg p_pup_jump_time 0
        or temp9 2
    ifg p_pup_damage_time 0
        or temp9 4
    ifg p_pup_bomb_time 0
        or temp9 8
    ife p_hazard_amount 0
    {
        ifinwater
        {
            set hudx_x HUD_AIRLEFT_X
            set hudx_y HUD_AIRLEFT_Y
            set hudx_scale HUD_METERSCALE
            set hudx_orientation 0
            set hudx_tilenum 5447
            set hudx_pal 0
            state DrawTile640x480Hud

            ifg player[].airleft 0
            {
                set hudx_tilenum 5448
                ifl player[].airleft 390
                {
                    set hudx_x1 0
                    set hudx_y1 0
                    set hudx_y2 ydim

                    scalevar GetWindowX 3145728 player[].airleft 390 // 64 * hudx_scale
                    add GetWindowX 20971520 // hudx_x << 16
                    sub GetWindowX 1572864 // 64 * hudx_scale >> 1
                    ifn userdef[].statusbarscale 100
                    {
                        sub GetWindowX 20971520
                        scalevar GetWindowX GetWindowX userdef[].statusbarscale 100
                        add GetWindowX 20971520
                    }
                    state 640Full16_to_xdim
                    set hudx_x2 GetWindowX
                    sub hudx_x2 1

                    state DrawTile640x480Hud_Windowed
                }
                else
                    state DrawTile640x480Hud
            }
        }
    }
    else // hazard suit
    {
        set hudx_shade g_playtics
        mod hudx_shade 60
        sub hudx_shade 30
        abs hudx_shade
        shiftr hudx_shade 1
        sub hudx_shade 4
        set hudx_x HUD_RADICON_X
        ifand temp9 2
            add hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        ifand temp9 8
            sub hudx_x 30
        set hudx_y HUD_RADICON_Y
        set hudx_scale HUD_RADICON_Z
        set hudx_orientation 0
        set hudx_tilenum 5605
        set hudx_pal 29
        state DrawTile640x480Hud
        
        set hudx_x HUD_RADTEXT_X
        ifand temp9 2
            add hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        ifand temp9 8
            sub hudx_x 30
        set hudx_y HUD_RADTEXT_Y
        set hudx_scale HUD_RADTEXT_Z
        set temp hudx_scale
        shiftr temp 12
        add hudx_x temp
        shiftl temp 1
        add hudx_y temp
        ifle p_hazard_amount 300
        {
            ifle p_hazard_amount 100
                set hudx_pal 9
            else ifle p_hazard_amount 200
                set hudx_pal 10
            else
                set hudx_pal 11
        }
        else
            set hudx_pal 4
        redefinequote 190 %ld
        set temp p_hazard_amount
        state pup_decimal_draw
    }
    ifg p_pup_jump_time 0
    {
        set hudx_shade g_playtics
        mod hudx_shade 60
        sub hudx_shade 30
        abs hudx_shade
        shiftr hudx_shade 1
        sub hudx_shade 4
        set hudx_x HUD_RADICON_X
        add hudx_x 1 // slight offset for strap pixels
        ifand temp9 1
            sub hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        ifand temp9 8
            sub hudx_x 30
        set hudx_y HUD_RADICON_Y
        set hudx_scale HUD_RADICON_Z
        sub hudx_scale 4096
        set hudx_orientation 0
        set hudx_tilenum I_DKSHOES
        set hudx_pal 29
        state DrawTile640x480Hud
        
        set hudx_x HUD_RADTEXT_X
        ifand temp9 1
            sub hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        ifand temp9 8
            sub hudx_x 30
        set hudx_y HUD_RADTEXT_Y
        set hudx_scale HUD_RADTEXT_Z
        set temp hudx_scale
        shiftr temp 12
        add hudx_x temp
        shiftl temp 1
        add hudx_y temp
        ifle p_pup_jump_time 300
        {
            ifle p_pup_jump_time 100
                set hudx_pal 9
            else ifle p_pup_jump_time 200
                set hudx_pal 10
            else
                set hudx_pal 11
        }
        else
            set hudx_pal 4
        redefinequote 190 %ld
        set temp p_pup_jump_time
        state pup_decimal_draw
    }
    
    ifg p_pup_damage_time 0
    {
        set hudx_shade g_playtics
        mod hudx_shade 60
        sub hudx_shade 30
        abs hudx_shade
        shiftr hudx_shade 1
        sub hudx_shade 4
        set hudx_x HUD_RADICON_X
        ifand temp9 1
            add hudx_x 30
        ifand temp9 2
            add hudx_x 30
        ifand temp9 8
            add hudx_x 30
        set hudx_y HUD_RADICON_Y
        set hudx_scale HUD_RADICON_Z
        sub hudx_scale 16384
        set hudx_orientation 0
        set hudx_tilenum 244
        set hudx_pal 29
        state DrawTile640x480Hud
        
        set hudx_x HUD_RADTEXT_X
        ifand temp9 1
            add hudx_x 30
        ifand temp9 2
            add hudx_x 30
        ifand temp9 8
            add hudx_x 30
        set hudx_y HUD_RADTEXT_Y
        set hudx_scale HUD_RADTEXT_Z
        set temp hudx_scale
        shiftr temp 12
        add hudx_x temp
        shiftl temp 1
        add hudx_y temp
        ifle p_pup_damage_time 300
        {
            ifle p_pup_damage_time 100
                set hudx_pal 9
            else ifle p_pup_damage_time 200
                set hudx_pal 10
            else
                set hudx_pal 11
        }
        else
            set hudx_pal 4
        redefinequote 190 %ld
        set temp p_pup_damage_time
        state pup_decimal_draw
        set hudx_tilenum BIGALPHANUM
    }
    
    ifg p_pup_bomb_time 0
    {
        set hudx_shade g_playtics
        mod hudx_shade 60
        sub hudx_shade 30
        abs hudx_shade
        shiftr hudx_shade 1
        sub hudx_shade 4
        set hudx_x HUD_RADICON_X
        ifand temp9 1
            add hudx_x 30
        ifand temp9 2
            add hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        set hudx_y HUD_RADICON_Y
        set hudx_scale HUD_RADICON_Z
        sub hudx_scale 16384
        set hudx_orientation 0
        set hudx_tilenum 241
        set hudx_pal 0
        state DrawTile640x480Hud
        
        set hudx_x HUD_RADTEXT_X
        ifand temp9 1
            add hudx_x 30
        ifand temp9 2
            add hudx_x 30
        ifand temp9 4
            sub hudx_x 30
        set hudx_y HUD_RADTEXT_Y
        set hudx_scale HUD_RADTEXT_Z
        set temp hudx_scale
        shiftr temp 12
        add hudx_x temp
        shiftl temp 1
        add hudx_y temp
        ifle p_pup_bomb_time 300
        {
            ifle p_pup_bomb_time 100
                set hudx_pal 9
            else ifle p_pup_bomb_time 200
                set hudx_pal 10
            else
                set hudx_pal 11
        }
        else
            set hudx_pal 4
        redefinequote 190 %ld
        set temp p_pup_bomb_time
        state pup_decimal_draw
    }
    ife player[].curr_weapon WEAPON_BOWLINGBOMB
    {
        set temp 0
        ifg bbomb_hold_count 0
            set temp 1
        else
        {
            set hudx_temp2 WEAPON5_FIREDELAY
            shiftr hudx_temp2 1
            ifg player[].kickback_pic hudx_temp2
                set temp 1
        }
        ife temp 1
        {
            set hudx_x HUD_BOMBHOLD_X
            set hudx_y HUD_BOMBHOLD_Y

            set hudx_scale HUD_METERSCALE
            ife p_hazard_amount 0
                ifinwater
                    sub hudx_y 9
            set hudx_orientation 0

            set hudx_tilenum 5447
            set hudx_pal 0
            state DrawTile640x480Hud
            ifge bbomb_hold_count 9
            {
                ife bbomb_alt_mode 0
                    set hudx_pal 61
                else
                {
                    ifge bbomb_hold_count 42
                    {
                        ifand bbomb_hold_count 4
                            set hudx_pal 62
                        else
                            set hudx_pal 9
                    }
                    else
                    {
                        ifand bbomb_hold_count 8
                            set hudx_pal 62
                        else
                            set hudx_pal 9
                    }
                }
                set hudx_shade 10
                set hudx_alpha -129
                ifand w5_sparkle 2
                    set hudx_alpha -255
                state DrawTile640x480Hud

                set hudx_shade 0
                set hudx_alpha 0
            }
            else ifn bbomb_alt_mode 0 ifge bbomb_hold_count 40
            {
                ifand bbomb_hold_count 16
                    set hudx_pal 10
                else
                    set hudx_pal 62
                set hudx_shade 10
                set hudx_alpha -129
                ifand w5_sparkle 2
                    set hudx_alpha -255
                state DrawTile640x480Hud
                set hudx_shade 0

                set hudx_alpha 0
            }

            ifg bbomb_hold_count 0
            {
                ife bbomb_alt_mode 0
                {
                    set hudx_pal 10
                    ifge bbomb_hold_count 30
                        set hudx_pal 14
                }
                else
                {
                    set hudx_pal 5
                    ifg bbomb_hold_count 39
                    {
                        ifg bbomb_hold_count 79
                            set hudx_pal 101
                        else 
                            set hudx_pal 10
                    }    
                }
                set hudx_tilenum 5448
                ifl bbomb_hold_count 120
                {
                    set hudx_x1 0
                    set hudx_y1 0
                    set hudx_y2 ydim

                    ifg bbomb_alt_mode 0
                    {
                        set GetWindowX bbomb_hold_count
                        sub GetWindowX 120
                        abs GetWindowX
                        scalevar GetWindowX 3145728 GetWindowX 120 // 64 * hudx_scale
                    }
                    else
                        scalevar GetWindowX 3145728 bbomb_hold_count 120 // 64 * hudx_scale
                    add GetWindowX 20971520 // hudx_x << 16
                    sub GetWindowX 1572864 // 64 * hudx_scale >> 1
                    ifn userdef[].statusbarscale 100
                    {
                        sub GetWindowX 20971520
                        scalevar GetWindowX GetWindowX userdef[].statusbarscale 100
                        add GetWindowX 20971520
                    }
                    state 640Full16_to_xdim
                    set hudx_x2 GetWindowX
                    sub hudx_x2 1

                    state DrawTile640x480Hud_Windowed
                    ifg bbomb_hold_count 9
                    {
                        ife bbomb_alt_mode 0
                            set hudx_pal 93
                        else
                            set hudx_pal 101
                        set temp2 bbomb_hold_count
                        sub temp2 120
                        shiftr temp2 1
                        inv temp2
                        set hudx_shade temp2
                        set hudx_alpha -129
                        ifand w5_sparkle 2
                            set hudx_alpha -255
                        state DrawTile640x480Hud_Windowed
                    }
                }
                else
                {
                    ife bbomb_alt_mode 0
                        set hudx_pal 93
                    else
                        set hudx_pal 101
                    set temp2 bbomb_hold_count
                    sub temp2 120
                    shiftr temp2 1
                    inv temp2
                    ifg bbomb_alt_mode 0
                        add temp2 15
                    set hudx_shade temp2
                    set hudx_alpha -129
                    ifand w5_sparkle 2
                            set hudx_alpha -255
                    state DrawTile640x480Hud
                }
                ife bbomb_alt_mode 0 ifg bbomb_hold_count 9
                {
                    set hudx_tilenum 7072
                    set temp bbomb_hold_count
                    sub temp 60
                    mul temp 3
                    shiftr temp 3
                    set hudx_x HUD_BOMBHOLD_X
                    add hudx_x temp
                    set hudx_y HUD_BOMBHOLD_Y
                    set hudx_scale HUD_METERSCALE
                    shiftr hudx_scale 1
                    set temp w5_sparkle
                    mod temp 20
                    sub temp 10
                    abs temp
                    add temp 5
                    set hudx_shade temp
                    set temp w5_sparkle
                    mod temp 16
                    shiftl temp 6
                    set hudx_angle temp
                    set hudx_alpha -129
                    ife p_hazard_amount 0
                        ifinwater
                            sub hudx_y 9
                    state DrawTile640x480Hud
                    shiftl hudx_angle 1
                    sub hudx_shade 2
                    shiftl hudx_shade 2
                    state DrawTile640x480Hud
                    set hudx_shade 0

                    set hudx_alpha 0
                }
            }
        }
    }
ends

appendevent EVENT_DISPLAYSBAR
    set RETURN -1
    ifn userdef[].screen_size 0 ife hub_health_trans 0
    {
        state draw_hud_health
        state draw_hud_armor
        state draw_hud_ammo
        state draw_hud_powerups
    }
endevent

//

appendevent EVENT_INCURDAMAGE
    /* getp[].extra_extra8 temp
    seta[].htextra temp2
    ifn temp2 -1
        seta[].htextra -1
    redefinequote 11 %ld %ld
    qsprintf 11 11 temp temp2 RETURN
    quote 11 */

    set RETURN -1
endevent

appendevent EVENT_CHECKTOUCHDAMAGE
    set RETURN -1
endevent

// Loading text

appendevent EVENT_GETLOADTILE
    ife load_black 0
    {
        state ResetTile
        state ResetText
        set hudx_x 320
        set hudx_y 240
        set hudx_scale 49152
        set hudx_pal 8
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        set hudx_quote 12
        redefinequote 12 Loading...
        set hudx_txtflags 2
        state DrawText640x480Screen
        set load_text 8
    }
    else
        set load_text 0
endevent

appendevent EVENT_DISPLAYREST
    ifg load_text 0
    {
        state ResetTile
        state ResetText
        set hudx_x 320
        set hudx_y 240
        set hudx_scale 49152
        set hudx_pal 8
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        set hudx_alpha 8
        sub hudx_alpha load_text
        shiftl hudx_alpha 5
        clamp hudx_alpha 0 255
        set hudx_quote 12
        redefinequote 12 Loading...
        set hudx_txtflags 2
        state DrawText640x480Screen
    }
endevent

// Level stats

var Move_Levelstats

appendevent EVENT_DISPLAYLEVELSTATS
    set RETURN -1
    set Move_Levelstats 1
endevent

// Display levelstats in DISPLAYSBAR so it's below the black fading

appendevent EVENT_DISPLAYSBAR
    ife Move_Levelstats 1
    {
        set Move_Levelstats 0

        ife VOLUME EP_HORDE // horde mode
            break
        ifn p_eol 0
            break

        state ResetTile
        state ResetText
        set hudx_x 9
        set hudx_y 426
        set hudx_scale 46080
        set hudx_tilenum STARTALPHANUM
        set hudx_pal 88
        set hudx_orientation 273
        set hudx_quote 12

        set temp g_playtics
        div temp 30
        set temp2 temp
        div temp2 10
        mod temp 10
        mod temp2 6

        set temp3 g_playtics
        div temp3 1800
        set temp4 temp3
        div temp4 10
        mod temp3 10
        mod temp4 6

        set temp5 g_playtics
        div temp5 108000
        set temp6 temp5
        div temp6 10
        mod temp5 10

        redefinequote 12 T: ^15%ld%ld:%ld%ld:%ld%ld
        qsprintf 12 12 temp6 temp5 temp4 temp3 temp2 temp
        state DrawText640x480Stats

        add hudx_y 16
        redefinequote 12 S: ^15%ld/%ld
        qsprintf 12 12 p_secrets_left p_secrets
        state DrawText640x480Stats

        add hudx_y 16
        redefinequote 12 K: ^15%ld/%ld
        qsprintf 12 12 p_killed_left p_killed
        state DrawText640x480Stats
    }
endevent

// Automap text

appendevent EVENT_DISPLAYOVERHEADMAPTEXT
    set RETURN -1
    ife userdef[].overhead_on 2
    {
        state ResetTile
        state ResetText
        set hudx_x 9
        set hudx_y 442
        set hudx_scale 46080
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 2321
        set hudx_quote 12

        shiftl hudx_x 16
        shiftl hudx_y 16
        ifn userdef[].screen_size 0
        {
            set temp SBAR_HEIGHT
            ife VOLUME EP_HORDE
                add temp 64
            shiftl temp 16
            scalevar temp temp userdef[].statusbarscale 100
            sub hudx_y temp
        }

        redefinequote 12 (null)
        qgetsysstr 12 STR_VOLUMENAME
        state DrawText640x480Screen

        set temp 16
        shiftl temp 16
        add hudx_y temp

        redefinequote 12 (null)
        ife userdef[].user_map 1
            qgetsysstr 12 STR_USERMAPFILENAME
        else ife force_um 1
            qgetsysstr 12 STR_USERMAPFILENAME
        else
            qgetsysstr 12 STR_MAPNAME
        state DrawText640x480Screen
    }
endevent

// Level name

appendevent EVENT_SETDEFAULTS
    setuserdef[].show_level_text 0
endevent

appendevent EVENT_DISPLAYSBAR
    ife level_text 1
    ifl player[].player_par 96
    {
        state ResetTile
        state ResetText
        set hudx_x 320
        set hudx_y 260 // avoid the crosshair
        set hudx_scale 32768
        set hudx_tilenum BIGALPHANUM
        set hudx_orientation 16
        set hudx_alpha player[].player_par
        sub hudx_alpha 80
        ifl hudx_alpha 0
        {
            abs hudx_alpha
            shiftr hudx_alpha 3
        }
        shiftl hudx_alpha 4
        clamp hudx_alpha 0 255
        set hudx_quote 12
        redefinequote 12 (null)
        ife userdef[].user_map 1
            qgetsysstr 12 STR_USERMAPFILENAME
        else ife force_um 1
            qgetsysstr 12 STR_USERMAPFILENAME
        else
            qgetsysstr 12 STR_MAPNAME
        set hudx_txtflags 2
        state DrawText640x480Screen
    }
endevent

// Teaser screen

defstate draw_teaser2
    state ResetTile
    set hudx_x 320
    set hudx_y 240
    set hudx_tilenum 5469
    state DrawTile640x480Screen


    state ResetText
    set hudx_x 18
    set hudx_y 32
    set hudx_scale 32768
    set hudx_tilenum BIGALPHANUM
    set hudx_orientation 16
    set hudx_quote 12
    redefinequote 12 AND YOU THOUGHT IT WAS OVER!
    state DrawText640x480Screen

    set hudx_y 76
    set hudx_pal 92
    set hudx_tilenum STARTALPHANUM
    redefinequote 12 What you just experienced was only a taste of the real deal.
    state DrawText640x480Screen

    add hudx_y 32
    set hudx_txtflags 512
    set hudx_xbetween 270
    redefinequote 12 A vicious army of cyborgs is still out to
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 wreak destruction, so if you really want to
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 kick ass instead of picking scraps, you need
    state DrawText640x480Screen
    add hudx_y 18
    set hudx_txtflags 0
    set hudx_xbetween 0
    redefinequote 12 to play the Full Version!
    state DrawText640x480Screen

    set hudx_x 250
    set hudx_y 294
    redefinequote 12 You could be enjoying:
    state DrawText640x480Screen

    add hudx_y 32
    redefinequote 12 - Thousands of delicious High-Resolution Graphics
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 - Even more cool Tracked Music from a true Demoscene vet
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 - 7 Exciting Zones each spanning multiple maps
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 - More enemies, More weapons, More carnage
    state DrawText640x480Screen
    add hudx_y 18
    redefinequote 12 - The warm and fuzzy feeling of Supporting the Developers
    state DrawText640x480Screen
    add hudx_y 18

    set hudx_x 309
    set hudx_y 436
    set hudx_scale 36864
    set hudx_tilenum BIGALPHANUM
    redefinequote 12 GET READY TO ROCK!
    state DrawText640x480Screen
ends

var smooth_p_eol

appendevent EVENT_DISPLAYREST
    set smooth_p_eol p_eol
    shiftl smooth_p_eol 2
    sub smooth_p_eol 4
    add smooth_p_eol smooth_totalclock

    ife show_teaser 1
           state draw_teaser2
    ifp pdead
        nullop
    else ifg p_eol 0
    {
        ifn fade_amount 0
        {
            set hudx_alpha 128
            sub hudx_alpha fade_amount
            shiftl hudx_alpha 1
            clamp hudx_alpha 0 255
            state black_background_alpha
        }
        state ResetTile
        ifg fade_amount 88
        {
            ifn eol_type 2
            {
                set hudx_x 320
                set hudx_y 240
                set hudx_shade 10
                set hudx_tilenum 5472
                set hudx_alpha 120
                sub hudx_alpha fade_amount
                shiftl hudx_alpha 4
                clamp hudx_alpha 0 255
                state DrawTile640x480Screen
                set hudx_alpha 0
            }
            else
            {
                
                set hudx_x 320
                set hudx_y 240
                set hudx_shade 15

                set hudx_tilenum 5474
                set hudx_scale 65536
                set hudx_pal 7
                set hudx_orientation 0
                state DrawTile640x480Screen
                state ResetTile
                set hudx_x 320
                set hudx_y 240
                set hudx_shade 0
                set hudx_tilenum 5420
                set hudx_scale 53248
                state DrawTile640x480Screen
                state ResetTile
                set temp3 game_session_stat
                set temp4 game_session_stat
                shiftr temp3 16
                and temp4 0xFFFF
                div temp3 EP_MAIN_NUMZONES
                div temp4 EP_MAIN_NUMZONES
                ifge temp3 100 ifge temp4 100 ifg p_eol 40
                {
                    ife p_eol 41
                        screenpal 63 63 63 63
                    set hudx_x 405
                    set hudx_y 100
                    set hudx_shade 0
                    set hudx_tilenum 5421
                    set hudx_scale 49152
                    state DrawTile640x480Screen
                    set hudx_alpha 0
                    set hudx_x 398
                    set hudx_y 178
                    set hudx_shade 0
                    set hudx_tilenum 5422
                    set hudx_scale 49152
                    set hudx_alpha -129
                    or hudx_orientation 1
                    state DrawTile640x480Screen
                }
                set hudx_alpha 0
            }
        }
        state ResetText
        set hudx_tilenum STARTALPHANUM
        set hudx_orientation 16
        set hudx_quote 12
        clamp eol_stage 0 5
        ifg p_eol 2
        {
            ifg eol_stage 0
            {
                ifn eol_type 2
                {
                    redefinequote 12 ZONE COMPLETE!
                    ife userdef[].volume_number EP_MAIN
                        ife LEVEL EP_MAIN_ZONE_S_END
                            redefinequote 12 SECRET ZONE COMPLETE!
                        // gametextz STARTALPHANUM temp 20 12 0 temp4 17 0 0 xdim ydim 32768


                    set hudx_x 320
                    set hudx_y 49
                    set hudx_scale 69632
                    set hudx_shade 10
                    set hudx_pal 1
                    set hudx_txtflags 2
                    state DrawText640x480Screen_WithShadow
                }
                else
                {
                    redefinequote 12 MISSION ACCOMPLISHED!
                        // gametextz STARTALPHANUM temp 20 12 0 temp4 17 0 0 xdim ydim 32768


                    set hudx_x 320
                    set hudx_y 12
                    set hudx_scale 65536
                    set hudx_shade 10
                    set hudx_pal 1
                    set hudx_alpha -129
                    set hudx_txtflags 2
                    set hudx_tilenum BIGALPHANUM
                    state DrawText640x480Screen_WithShadow
                    set hudx_tilenum STARTALPHANUM
                    set hudx_alpha 0
                }
                ifg eol_stage 1
                {
                    ifn eol_type 2
                    {
                        ife userdef[].volume_number EP_PREVIEW
                            qgetsysstr 12 STR_VOLUMENAME
                        else ife userdef[].volume_number EP_MAIN
                        {
                            // ZONE_1 16320 QUOTE_NAME_ZONE_1
                            switch LEVEL
                                case EP_MAIN_ZONE_1_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_1
                                    break
                                case EP_MAIN_ZONE_2_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_2
                                    break
                                case EP_MAIN_ZONE_3_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_3
                                    break
                                case EP_MAIN_ZONE_4_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_4
                                    break
                                case EP_MAIN_ZONE_5_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_5
                                    break
                                case EP_MAIN_ZONE_6_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_6
                                    break
                                case EP_MAIN_ZONE_7_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_7
                                    break
                                case EP_MAIN_ZONE_S_END
                                    qstrcpy 12 QUOTE_NAME_ZONE_S
                                    break
                                default
                                    qgetsysstr 12 STR_MAPNAME
                                    break
                            endswitch
                        }
                        else
                            qgetsysstr 12 STR_MAPNAME
                        ife bbomb_mode 1
                        {
                            redefinequote 11 ^06   (bombardier mode)
                            qstrcat 12 11
                        }
                        set hudx_x 320
                        set hudx_y 73
                        set hudx_scale 34816
                        set hudx_pal 1
                        state DrawText640x480Screen_WithShadow

                    }
                    // gametextz STARTALPHANUM 320 30 12 0 1 17 0 0 xdim ydim 16384
                    set temp8 0
                    ifg eol_stage 2
                    {
                        set temp3 game_session_stat
                        set temp4 game_session_stat
                        shiftr temp3 16
                        and temp4 0xFFFF
                        div temp3 EP_MAIN_NUMZONES
                        div temp4 EP_MAIN_NUMZONES
                        ife eol_type 2
                        {
                                redefinequote 12 KILLS:^11 %ld%
                                qsprintf 12 12 temp3
                                set hudx_shade 5
                                set hudx_txtflags 0

                                set hudx_x 26
                                set hudx_y 180
                                set hudx_scale 53248
                                set hudx_shade 5
                                set hudx_pal 80
                                state DrawText640x480Screen_WithShadow
                                ifl temp3 10
                                    redefinequote 12 At least try and shoot straight!
                                else ifl temp3 30
                                    redefinequote 12 Sure you're not a traffic cop?
                                else ifl temp3 60
                                    redefinequote 12 Solid kills.
                                else ifl temp3 100
                                    redefinequote 12 Wipe em out!
                                else
                                {
                                    redefinequote 12 Beautiful brutality.
                                    add temp8 1
                                }
                                set hudx_x 40
                                set hudx_y 204
                                set hudx_scale 34816
                                set hudx_pal 88
                                state DrawText640x480Screen_WithShadow
                            }
                        else
                        {
                            redefinequote 12 KILLS: %ld/%ld
                            qsprintf 12 12 p_killed_left p_killed
                            set hudx_shade 5
                            set hudx_txtflags 0

                            set hudx_x 26
                            set hudx_y 180
                            set hudx_scale 53248
                            set hudx_shade 5
                            set hudx_pal 11
                            state DrawText640x480Screen_WithShadow

                            ife p_killed 0
                                redefinequote 12 No enemies due to budget cuts!
                            else ifge p_killed_left p_killed
                                redefinequote 12 You murdered everyone!
                            else ifn p_killed_left p_killed
                            {
                                ife p_killed_left 0
                                    redefinequote 12 What are you trying to prove?
                                else
                                    redefinequote 12 ...get hunting!
                            }

                            set hudx_x 40
                            set hudx_y 204
                            set hudx_scale 34816
                            set hudx_pal 88
                            state DrawText640x480Screen_WithShadow
                        }
                        ifg eol_stage 3
                        {
                            set temp3 game_session_stat
                            set temp4 game_session_stat
                            shiftr temp3 16
                            and temp4 0xFFFF
                            div temp3 EP_MAIN_NUMZONES
                            div temp4 EP_MAIN_NUMZONES
                            ife eol_type 2
                            {
                                redefinequote 12 SECRETS:^11 %ld%
                                qsprintf 12 12 temp4
                                set hudx_x 26
                                set hudx_y 228
                                set hudx_scale 53248
                                set hudx_pal 80
                                state DrawText640x480Screen_WithShadow
                                ifl temp4 10
                                    redefinequote 12 Oh come on!
                                else ifl temp4 30
                                    redefinequote 12 Try harder next time!
                                else ifl temp4 60
                                    redefinequote 12 Getting better!
                                else ifl temp4 100
                                    redefinequote 12 Almost there!
                                else
                                    redefinequote 12 Simply amazing!
                                ifge temp4 100
                                {
                                    add temp8 1
                                    ife yahahayoufoundme2 0
                                    {
                                        redefinequote 11 ^06 ...(or is it)
                                        qstrcat 12 11
                                    }
                                    else
                                    {
                                        add temp8 1
                                        redefinequote 11 ^06 +a secret level
                                        redefinequote 115 gamestate.bin
                                        readarrayfromfile gamestate 115
                                        set temp3 gamestate[3]
                                        ifand temp3 66584576
                                        {
                                            xor temp3 66584576
                                            ifand temp3 66584576
                                                nullop
                                            else
                                            {
                                                redefinequote 11 ^06 +a secret level ^08+all Mega Secrets!
                                                ife temp8 3
                                                    or cheevo_tracker 268435456
                                            }
                                        }
                                        qstrcat 12 11
                                    }
                                }
                                set hudx_x 40
                                set hudx_y 252
                                set hudx_scale 34816
                                set hudx_pal 88
                                state DrawText640x480Screen_WithShadow
                            }
                            else
                            {
                                redefinequote 12 SECRETS: %ld/%ld
                                qsprintf 12 12 p_secrets_left p_secrets
                                set hudx_x 26
                                set hudx_y 228
                                set hudx_scale 53248
                                set hudx_pal 11
                                state DrawText640x480Screen_WithShadow
                                ife p_secrets 0
                                    redefinequote 12 Designer forgot to add any secrets.
                                else ifge p_secrets_left p_secrets
                                    redefinequote 12 An amazing effort!
                                else ifn p_secrets_left p_secrets
                                {
                                    ife p_secrets_left 0
                                        redefinequote 12 You didn't even try to look!
                                    else
                                        redefinequote 12 Nice! But there is more.
                                }
                                set hudx_x 40
                                ife yahahayoufoundme 1
                                    set hudx_y 265
                                else
                                    set hudx_y 252
                                set hudx_scale 34816
                                set hudx_pal 88
                                state DrawText640x480Screen_WithShadow
                            }
                            ife yahahayoufoundme 1
                            {
                                set hudx_x 40
                                set hudx_y 252
                                set hudx_scale 34816
                                redefinequote 12 + The Zone Mega-Secret!
                                set hudx_pal 93
                                state DrawText640x480Screen_WithShadow
                            }
                            ifg eol_stage 4
                            {
                                set temp 0
								ifn p_secrets_left p_secrets
                                {
                                    set temp 1
                                    ifg p_secrets_left p_secrets  // bunch of nonsense, might use as a marker later
                                        set temp 0
                                }
                                ifn p_killed_left p_killed
                                {
                                    set temp 1
                                    ifg p_killed_left p_killed // bunch of nonsense, might use as a marker later
                                        set temp 0
                                }

                                ife eol_type 2
                                    redefinequote 12 THANK YOU FOR PLAYING!
                                else ife temp 1
                                    redefinequote 12 GREAT JOB!
                                else
                                    redefinequote 12 OUTSTANDING!!
                                set hudx_x 320
                                set hudx_y 360
                                ife eol_type 2
                                    add hudx_y 73
                                set hudx_scale 69632
                                set hudx_shade 10
                                set hudx_pal 1
                                set hudx_txtflags 2
                                state DrawText640x480Screen_WithShadow
                                ifn eol_type 2
                                {
                                    add hudx_y 29
                                    ife temp 1
                                    {
                                        set hudx_scale 53248
                                        redefinequote 12 ...BUT REAL PLAYERS AIM FOR 100%!
                                    }
                                    else
                                    {
                                        set hudx_scale 45056
                                        redefinequote 12 ...READY FOR MORE?
                                    }
                                    state DrawText640x480Screen_WithShadow
                                    add hudx_y 19
                                    set hudx_scale 34816
                                    ife temp 1
                                        redefinequote 12 (are you a real player?)
                                    else
                                        redefinequote 12 (get psyched)
                                    state DrawText640x480Screen_WithShadow
                                }
                            }
                        }
                    }
                }
            }
            switch eol_stage
                case 0
                    set hudx_pal 1
                    set hudx_x smooth_p_eol
                    shiftl hudx_x 3
                    sub hudx_x 640
                    ifl hudx_x 0
                    {
                        abs hudx_x
                        ife p_eol 15
                            soundonce S_SWITCH_LARGE02
                        clamp hudx_x 320 639
                    }
                    else
                        set hudx_x 320
                    ife p_eol 19
                        set hudx_pal 64
                    redefinequote 12 ZONE COMPLETE!
                    ife userdef[].volume_number EP_MAIN
                        ife LEVEL EP_MAIN_ZONE_S_END
                            redefinequote 12 SECRET ZONE COMPLETE!
                    // gametextz STARTALPHANUM temp 20 12 0 temp4 17 0 0 xdim ydim 32768


                    set hudx_y 49
                    set hudx_scale 69632
                    set hudx_shade 10
                    set hudx_txtflags 2
                    set hudx_alpha p_eol
                    sub hudx_alpha 30
                    abs hudx_alpha
                    shiftl hudx_alpha 3
                    state DrawText640x480Screen_WithShadow

                    ifge p_eol 20
                    {
                        add eol_stage 1
                        set p_eol 3
                    }
                    break
                case 1
                    set hudx_pal 1
                    set hudx_x smooth_p_eol
                    shiftl hudx_x 3
                    sub hudx_x 640
                    ifl hudx_x 0
                    {
                        abs hudx_x
                        ife p_eol 15
                        {
                            stopsound S_SWITCH_LARGE02
                            soundonce S_SWITCH_LARGE02
                        }
                        clamp hudx_x 320 639
                    }
                    else
                        set hudx_x 320
                    ife p_eol 19
                        set hudx_pal 64
                    ife userdef[].volume_number EP_PREVIEW
                        qgetsysstr 12 STR_VOLUMENAME
                    else ife userdef[].volume_number EP_MAIN
                    {
                        // ZONE_1 16320 QUOTE_NAME_ZONE_1
                        switch LEVEL
                            case EP_MAIN_ZONE_1_END
                                qstrcpy 12 QUOTE_NAME_ZONE_1
                                break
                            case EP_MAIN_ZONE_2_END
                                qstrcpy 12 QUOTE_NAME_ZONE_2
                                break
                            case EP_MAIN_ZONE_3_END
                                qstrcpy 12 QUOTE_NAME_ZONE_3
                                break
                            case EP_MAIN_ZONE_4_END
                                qstrcpy 12 QUOTE_NAME_ZONE_4
                                break
                            case EP_MAIN_ZONE_5_END
                                qstrcpy 12 QUOTE_NAME_ZONE_5
                                break
                            case EP_MAIN_ZONE_6_END
                                qstrcpy 12 QUOTE_NAME_ZONE_6
                                break
                            case EP_MAIN_ZONE_7_END
                                qstrcpy 12 QUOTE_NAME_ZONE_7
                                break
                            case EP_MAIN_ZONE_S_END
                                qstrcpy 12 QUOTE_NAME_ZONE_S
                                break
                            default
                                qgetsysstr 12 STR_MAPNAME
                                break
                        endswitch
                    }
                    else
                        qgetsysstr 12 STR_MAPNAME
                    // gametextz STARTALPHANUM temp 30 12 0 temp4 17 0 0 xdim ydim 16384


                    set hudx_y 73
                    set hudx_scale 34816
                    set hudx_shade 10
                    set hudx_txtflags 2
                    state DrawText640x480Screen_WithShadow

                    ifge p_eol 60
                    {
                        add eol_stage 1
                        set p_eol 3
                    }
                    break
                case 2
                    set hudx_pal 11
                    set hudx_x smooth_p_eol
                    shiftl hudx_x 2
                    sub hudx_x 320
                    ifl hudx_x 0
                    {
                        abs hudx_x
                        ife p_eol 15
                            soundonce S_SWITCH_LARGE02
                        clamp hudx_x 26 639 // 319
                    }
                    else
                        set hudx_x 26
                    ife p_killed_left 0
                        set temp2 0
                    else
                    {
                        set temp p_killed_left
                        div temp 28
                        ifl temp 1
                            ifg p_eol 3
                                set temp 1
                        set temp2 p_eol
                        sub temp2 3
                        mul temp2 temp

                        clamp temp2 0 p_killed_left

                        ifn temp2 p_killed_left
                        {
                            setp[].sound_pitch temp2
                            soundonce S_COUNTER
                            setp[].sound_pitch 0
                        }
                    }
                    ife p_eol 19
                        set hudx_pal 64
                    redefinequote 12 KILLS: %ld/%ld
                    qsprintf 12 12 temp2 p_killed

                    set hudx_y 180
                    set hudx_scale 53248
                    set hudx_shade 5
                    set hudx_txtflags 0
                    state DrawText640x480Screen_WithShadow
                    ifg p_eol 25
                    {
                        ifn p_killed_left p_killed
                        {
                            ife p_killed_left 0
                            {
                                redefinequote 12 What are you trying to prove?
                                ife p_eol 28
                                    soundonce  S_SWITCH_BUTTONBLEEP
                            } else
                            {
                                redefinequote 12 ...get hunting!
                                ife p_eol 28
                                    soundonce  S_SWITCH_BUTTON02
                            }
                        } else ife p_killed 0
                        {
                            redefinequote 12 No enemies due to budget cuts!
                            ife p_eol 28
                                soundonce  S_IMPACT_MUGSMASH
                        } else
                        {
                            redefinequote 12 You murdered everyone!
                            ife p_eol 28
                                soundonce  S_DOOR_CLANK_HUGE
                        }
                        ife p_eol 28
                            set hudx_pal 64
                        else
                            set hudx_pal 88
                                                set hudx_x 40
                                                set hudx_y 204
                                                set hudx_scale 34816
                                                state DrawText640x480Screen_WithShadow
                        ifge p_eol 50
                        {
                            add eol_stage 1
                            set p_eol 3
                        }
                    }
                    break
                case 3
                    set hudx_pal 11
                    set hudx_x smooth_p_eol
                    shiftl hudx_x 2
                    sub hudx_x 320
                    ifl hudx_x 0
                    {
                        abs hudx_x
                        ife p_eol 15
                            soundonce S_SWITCH_LARGE02
                        clamp hudx_x 26 639 // 319
                    }
                    else
                        set hudx_x 26
                    ife p_secrets_left 0
                        set temp2 0
                    else
                    {
                        set temp p_secrets_left
                        div temp 28
                        ifl temp 1
                            ifg p_eol 3
                                set temp 1
                        set temp2 p_eol
                        sub temp2 3
                        mul temp2 temp

                        clamp temp2 0 p_secrets_left

                        ifn temp2 p_secrets_left
                        {
                            setp[].sound_pitch temp2
                            soundonce S_COUNTER
                            setp[].sound_pitch 0
                        }
                    }
                    ife p_eol 19
                        set hudx_pal 64
                    redefinequote 12 SECRETS: %ld/%ld
                    qsprintf 12 12 temp2 p_secrets

                    set hudx_y 228
                    set hudx_scale 53248
                    set hudx_shade 5
                    set hudx_txtflags 0
                    state DrawText640x480Screen_WithShadow
                    ifg p_eol 25
                    {
                        ifn p_secrets_left p_secrets
                        {
                            ife p_secrets_left 0
                            {
                                redefinequote 12 You didn't even try to look!
                                ife p_eol 28
                                    soundonce  S_CROSSBOW_RESET
                            }
                            else
                            {
                                redefinequote 12 Nice! But there is more.
                                ife p_eol 28
                                    soundonce  S_SWITCH_BUTTON02
                            }
                        }
                        else ife p_secrets 0
                        {
                            redefinequote 12 Designer forgot to add any secrets.
                            ife p_eol 28
                                soundonce  S_BBOMB_LOCK
                        }
                        else
                        {
                            ife p_secrets 0
                                    redefinequote 12 Designer forgot to add any secrets.
                            else ife userdef[].volume_number EP_PREVIEW  
                                redefinequote 12 Did you know that the full version will have even more secrets?
                            else
                                redefinequote 12 An amazing effort!
                            ife p_eol 28
                                soundonce  S_PICKUP02
                        }
                        ife p_eol 28
                            set hudx_pal 64
                        else
                            set hudx_pal 88
                        set hudx_x 40
                        ife yahahayoufoundme 1
                            set hudx_y 265
                        else
                            set hudx_y 252
                        set hudx_scale 34816
                        state DrawText640x480Screen_WithShadow

                        ife yahahayoufoundme 1
                        {
                            set hudx_x 40
                            set hudx_y 252
                            set hudx_scale 34816
                            redefinequote 12 + The Zone Mega-Secret!
                            set hudx_pal 93
                            state DrawText640x480Screen_WithShadow
                        }
                        ifge p_eol 50
                        {
                            add eol_stage 1
                            set p_eol 3
                        }
                    }
                    break
                case 4
                    set hudx_pal 1
                    set hudx_y smooth_p_eol
                    shiftl hudx_y 1
                    sub hudx_y 480
                    ifl hudx_y 0
                    {
                        abs hudx_y
                        ife p_eol 3
                            soundonce S_BBOMB_THROW_ALT
                        ife p_eol 18
                            soundonce S_PICKUP03
                        clamp hudx_y 360 479
                    }
                    else
                        set hudx_y 360
                    set temp 0
                    ifn p_secrets_left p_secrets
                    {
                        set temp 1
                        ifg p_secrets_left p_secrets  // bunch of nonsense, might use as a marker later
                            set temp 0
                    }
                    ifn p_killed_left p_killed
                    {
                        set temp 1
                        ifg p_killed_left p_killed // bunch of nonsense, might use as a marker later
                            set temp 0
                    }
                    ife p_eol 13
                        set hudx_pal 64
                    else ife p_eol 15
                        set hudx_pal 64
                    else ife p_eol 17
                        set hudx_pal 64
                    else ife p_eol 19
                        set hudx_pal 64

                    ife eol_type 2
                        redefinequote 12 THANK YOU FOR PLAYING!
                    else ife temp 1
                        redefinequote 12 GREAT JOB!
                    else
                        redefinequote 12 OUTSTANDING!!

                    set hudx_x 320
                    ife eol_type 2
                        add hudx_y 80
                    set hudx_scale 69632
                    set hudx_shade 10
                    set hudx_txtflags 2
                    state DrawText640x480Screen_WithShadow

                    ifn eol_type 2
                    {
                        add hudx_y 29
                        ife temp 1
                        {
                            set hudx_scale 53248
                            redefinequote 12 ...BUT REAL PLAYERS AIM FOR 100%!
                        }
                        else
                        {
                            set hudx_scale 45056
                            redefinequote 12 ...READY FOR MORE?
                        }
                        state DrawText640x480Screen_WithShadow
                        add hudx_y 19
                        ife temp 1
                            redefinequote 12 (are you a real player?)
                        else
                            redefinequote 12 (get psyched)

                        set hudx_scale 34816
                        state DrawText640x480Screen_WithShadow
                    }
                    ifge p_eol 63
                    {
                        add eol_stage 1
                        set p_eol 3
                        redefinequote 115 gamestate.bin
                        readarrayfromfile gamestate_temp 115
                    }
                    break
                case 5
                    ifn show_teaser 0
                    {
                        set temp show_teaser
                        ifge show_teaser 118
                            set temp 0
                        else
                        {
                            ifg temp 60
                            {
                                sub temp 120
                                abs temp
                            }
                        }
                        ifg show_teaser 60
                            state draw_teaser2
                        shiftl temp 2
                        clamp temp 0 255
                        screenpal 0 0 0 temp
                        ifg show_teaser 120
                        {
                            set hudx_shade p_eol
                            mod hudx_shade 60
                            sub hudx_shade 30
                            abs hudx_shade
                            set hudx_x 320
                            set hudx_y 464
                            set hudx_scale 34816
                            set hudx_pal 8
                            set hudx_tilenum STARTALPHANUM
                            set hudx_txtflags 2
                            redefinequote 12 PRESS USE TO CONTINUE
                            state DrawText640x480Screen
                        }
                    }
                    else ifg eol_relay 0
                    {
                        set temp eol_relay
                        sub temp 61
                        abs temp
                        shiftl temp 3
                        clamp temp 0 255
                        screenpal 0 0 0 temp
                    }
                    else
                    {
                        set hudx_shade p_eol
                        mod hudx_shade 60
                        sub hudx_shade 30
                        abs hudx_shade
                        set hudx_x 320
                        set hudx_y 432
                        ife eol_type 2
                            add hudx_y 25
                        set hudx_scale 34816
                        set hudx_pal 8
                        set hudx_txtflags 2
                        redefinequote 12 PRESS USE TO CONTINUE
                        state DrawText640x480Screen_WithShadow
                        mul hudx_shade 3
                        shiftr hudx_shade 3
                        set hudx_x 40
                        set hudx_y 300
                        set hudx_pal 88

                        set temp g_playtics
                        div temp 30
                        set temp2 temp
                        div temp2 10
                        mod temp 10
                        mod temp2 6

                        set temp3 g_playtics
                        div temp3 1800
                        set temp4 temp3
                        div temp4 10
                        mod temp3 10
                        mod temp4 6

                        set temp5 g_playtics
                        div temp5 108000
                        set temp6 temp5
                        div temp6 10
                        mod temp5 10

                        ife eol_type 2
                            redefinequote 12 ^10Final Zone Completion Time: ^15%ld%ld:%ld%ld:%ld%ld
                        else
                            redefinequote 12 Completion Time: ^15%ld%ld:%ld%ld:%ld%ld
                        qsprintf 12 12 temp6 temp5 temp4 temp3 temp2 temp
                        set hudx_txtflags 0
                        state DrawText640x480Screen_WithShadow 
                    }
                    ifhitspace
                    {
                        ifn eol_type 0
                        {
                            ife eol_relay 0
                                set eol_relay 61
                        }
                        else
                        {
                            ifg show_teaser 150
                            {
                                redefinequote 115 gamestate.bin
                                readarrayfromfile gamestate_temp 115
                                set temp6 gamestate_temp[0]
                                ifand temp6 32768
                                    nullop
                                else
                                {
                                    or temp6 32768
                                    readarrayfromfile gamestate 115
                                    setarray gamestate[0] temp6
                                    redefinequote 115 gamestate.bin
                                    writearraytofile gamestate 115
                                }
                                set load_black 1
                                set g_playtics 0
                                setp .gm 3
                            }
                            else ifl show_teaser 2
                                set show_teaser 2
                        }
                    }
                    else
                    {
                        ifl show_teaser 2
                        {
                            set temp6 gamestate_temp[0]
                            ifand temp6 32768
                                nullop
                            else
                            {
                                redefinequote 12 NEW MODE UNLOCKED
                                sub hudx_shade 5
                                ifg p_eol 30
                                    shiftr hudx_shade 1
                                set hudx_x 630
                                set hudx_y 10
                                set hudx_shade 0
                                set hudx_pal 6
                                set hudx_txtflags 1
                                set hudx_orientation 529
                                state DrawText640x480Screen
                            }
                        }
                    }

                    break
            endswitch
        }
    }
    else
        set eol_stage 0
    ife profiler 1
        gametextz STARTALPHANUM 4 1 400 0 0 273 0 0 xdim ydim 12288
    ife showtime 1
    {
        redefinequote 400 %ld
        qsprintf 400 400 end_world_tics
        // gametextz STARTALPHANUM 4 1 400 0 0 273 0 0 xdim ydim 12288
        
        state ResetText
        set hudx_quote 400
        set hudx_tilenum STARTALPHANUM
        set hudx_scale 24576
        set hudx_x 8
        set hudx_y 2
        set hudx_shade 0
        set hudx_pal 0
        set hudx_txtflags 0
        set hudx_orientation 273
        state DrawText640x480Screen
    }
endevent

appendevent EVENT_WORLD
    ifg load_text 0
        sub load_text 1
    ifg show_teaser 1
        ifle show_teaser 150
            add show_teaser 1
endevent

// Test stuff

appendevent EVENT_DISPLAYREST
    ife testhud 1
    {
        set weaponscale 100
        set hud_x 160
        set hud_y 197
        sub hud_x 12
        set temp xdim
        mul temp 10
        div temp ydim
        ifg temp 20
        {
            set temp2 temp
            shiftr temp2 4
            sub temp temp2
        }
        sub temp 3
        sub hud_y temp
        set hud_scale 29184
        set hud_angle 0
        set hud_tilenum 5941
        set hud_pal 0
        set hud_shade 0
        set hud_orientation 0
        state shift_status_x
        state shift_status_y
        state shift_status_z
        set temp userdef[].statusbarscale
        sub temp 100
        inv temp
        shiftl temp 16
        shiftr temp 4
        add hud_y temp
        state G_DrawTileScaled
    }
endevent

appendevent EVENT_SPAWN
    ifactor A_BIGHORDEMODE
    {
        geta[].hitag se_hitag
        geta[].lotag se_lotag
        seta[].hitag 0
        seta[].lotag 0
        cstat 32768
        ifspritepal 9
            changespritestat THISACTOR STAT_HORDEBASE
        else
            changespritestat THISACTOR STAT_HORDENUM
    }
endevent

var horde_curr
var horde_num
var horde_enemies
var horde_time
var horde_add_time
var horde_roundtime
var horde_count
var horde_start
var horde_score
var horde_running_score
var horde_add_score
var horde_add_score_count
var horde_lastkills
var horde_message_state
var horde_restart_time
var horde_top
var horde_cheated
var reset_top
define HORDE_TIMEDIV 300
define HORDE_KILLMUL 1

appendevent EVENT_ACTIVATECHEAT
    set horde_cheated 1
endevent

var trigger
var trigger_all
var watch
var watch_time
var watchcount
var horde_vcheck
var horde_vneed 3 0

appendevent EVENT_WORLD
    ifn trigger 0
        setarray preloadactivations[trigger] 1
    set trigger 0
    ifn trigger_all 0
    {
        setarray preloadactivations[trigger_all] 1
        operateactivators trigger_all 0 // there is always a 0!!!!
        operatemasterswitches trigger_all
        operaterespawns trigger_all
    }
    ifn watch 0
    {
        add watchcount 1
        ife activateshit[watch] 1
        {
            // addlogvar watch
            ifn watch_time 0
                addlogvar watchcount
            set watchcount 0
        }
    }
    else
        set watchcount 0
    set trigger_all 0
   //  break
    ife horde_num 0
    {
        for temp sprofstat STAT_HORDENUM
            add horde_num 1
    }
    else ifl horde_curr horde_num
    {
        for temp sprofstat STAT_HORDENUM
        {
            ife actorvar[temp].se_lotag horde_curr
                set horde_enemies actorvar[temp].se_hitag
        }
        for temp sprofstat STAT_HORDEBASE
        {
            ife horde_vcheck 0
            {
                set horde_vcheck 1
                redefinequote 115 gamestate.bin
                readarrayfromfile gamestate_temp 115
                set temp2 gamestate_temp[255]
                ifl temp2 g_version
                {
                    ifl temp2 horde_vneed
                    {
                        set reset_top 1
                        redefinequote 115 gamestate.bin
                        readarrayfromfile gamestate 115
                        setarray gamestate[255] g_version
                        writearraytofile gamestate 115
                    }
                }
            }
            ifg killshit 16384
                set killshit 1
            ifn userdef[].volume_number EP_HORDE
            {
                setu[].volume_number EP_HORDE
                starttrackslot EP_HORDE 0
            }
            setu[].vm_sprite temp
            setu[].vm_player myconnectindex
            ife userdef[].clipping 1
                set horde_cheated 1
            else ife userdef[].god 1
                set horde_cheated 1
            set minigun 1
            clamp horde_score 0 999999999
            clamp horde_top 0 999999999
            clamp horde_running_score 0 999999999
            ifp pdead
                set p_horde_restart -2
            ife p_horde_restart -1
            {
                set p_horde_restart 0
                set horde_top 0
                ifg horde_message_state 0
                    set horde_cheated 1
            }
            ife horde_top 0
            {
                redefinequote 115 gamestate.bin
                readarrayfromfile gamestate_temp 115
                set horde_top gamestate_temp[1]
                set st_do_once 1
            }
            ife reset_top 1
            {
                set reset_top 0
                redefinequote 115 gamestate.bin
                readarrayfromfile gamestate 115
                setarray gamestate[1] 0
                set horde_top 0
                writearraytofile gamestate 115
            }
            ife horde_cheated 0
            {
               // ife st_do_once 1
                {
                    ifp pdead
                    {
                        redefinequote 115 gamestate.bin
                        readarrayfromfile gamestate 115
                        setarray gamestate[1] horde_top
                        writearraytofile gamestate 115
                        set st_do_once 2
                    }
                    else ifn horde_num 0
                    {
                         ifge horde_curr horde_num
                         {
                            redefinequote 115 gamestate.bin
                            readarrayfromfile gamestate 115
                            setarray gamestate[1] horde_top
                            writearraytofile gamestate 115
                            set st_do_once 2
                         }
                    }
                }
            }
            ifg horde_add_score_count 0
                sub horde_add_score_count 1
            ifg horde_add_time 0
                sub horde_add_time 1
            set temp2 0
            ifg horde_score horde_top
                set horde_top horde_score
            else ifg horde_running_score horde_top
                set horde_top horde_running_score
            ifge horde_curr horde_num
            {
                ifn horde_num 0
                    set temp2 1
            }
            ifl horde_start 90
            {
                ifp palive ife fade_amount 0
                {
                    ife horde_start 0
                        set horde_message_state 1
                    add horde_start 1
                }
                ife horde_start 90
                {
                    setp[].sound_pitch 320
                    globalsound S_ELEVATOR_BELL
                    setp[].sound_pitch 0
                    set horde_message_state 2
                }
            }
            else
            {
                ifl horde_count 300
                {
                    ifl horde_count 150
                        set horde_count 150
                    set temp2 horde_count
                    sub temp2 330
                    abs temp2
                    clamp temp2 1 300
                    div temp2 30
                    add horde_count 1
                    switch horde_count
                        case 30
                        case 60
                        case 90
                        case 120
                        case 150
                        case 180
                        case 210
                        case 240
                        case 270
                            setp[].sound_pitch 320
                            globalsound S_ELEVATOR_BELL
                            setp[].sound_pitch 0
                            break
                        case 295
                            setp[].sound_pitch 128
                            globalsound S_AMB_BUZZER
                            setp[].sound_pitch 0
                            break
                    endswitch
                    ife horde_count 300
                    {
                        set temp2 0
                        set temp3 horde_curr
                        add temp3 1
                        mul temp3 1000
                        add temp3 1
                        setarray preloadactivations[temp3] 1
                        operateactivators temp3 THISACTOR
                        operatemasterswitches temp3
                        operaterespawns temp3
                        set horde_time se_lotag
                        add horde_time 1
                        mul horde_time 30
                    }
                    set temp3 horde_curr
                    add temp3 1
                }
                else ifl player[].actors_killed horde_enemies
                {
                    ife horde_round_spawned horde_enemies ifge horde_message_state 9
                    {
                        ife num_flag32 1
                        {
                            set temp3 horde_enemies
                            sub temp3 1
                            ifl player[].actors_killed temp3
                            {
                                setp[].actors_killed temp3
                            }
                        }
                        else ife num_flag32 0
                        {
                            ifn player[].actors_killed horde_enemies
                            {
                                setp[].actors_killed horde_enemies
                            }
                        }
                    }
                    ifl horde_lastkills player[].actors_killed
                    {
                        sub horde_lastkills player[].actors_killed
                        abs horde_lastkills
                        set temp2 horde_lastkills
                        mul horde_lastkills 90
                        add horde_time horde_lastkills
                        clamp horde_time 0 2970
                        set horde_add_time 30
                        set horde_lastkills player[].actors_killed
                        ifn userdef[].player_skill 0
                            mul temp2 userdef[].player_skill
                        add horde_running_score temp2
                        ifn horde_add_score_count 0
                            add horde_add_score temp2
                        else
                            set horde_add_score temp2
                        set horde_add_score_count 30
                    }
                    ifl horde_message_state 9
                        add horde_message_state 1
                    set temp7 horde_time
                    div temp7 30
                    set temp2 temp7
                    div temp2 10
                    mod temp7 10
                    mod temp2 6

                    set temp3 horde_time
                    div temp3 1800
                    set temp4 temp3
                    div temp4 10
                    mod temp3 10
                    mod temp4 6

                    set temp5 horde_time
                    div temp5 108000
                    set temp6 temp5
                    div temp6 10
                    mod temp5 10

                    set temp2 horde_enemies
                    sub temp2 player[].actors_killed

                    ifg horde_time 0
                    {
                        
                        sub horde_time 1
                        ifp pdead
                            sub horde_time horde_time
                        add horde_roundtime 1
                        switch horde_time
                            case 60
                            case 90
                            case 120
                            case 150
                            case 180
                            case 210
                            case 240
                            case 270
                            case 300
                            case 330
                                setp[].sound_pitch 480
                                globalsound S_ELEVATOR_BELL
                                setp[].sound_pitch 0
                                break
                        endswitch
                        ife horde_time 30
                        {
                            set horde_time 0
                            setp[].sound_pitch 640
                            globalsound S_ELEVATOR_BELL
                            globalsound S_ELEVATOR_CRASH
                            setp[].sound_pitch 0
                            addphealth -1000
                        }
                        else ife horde_time 0
                            addphealth -1000
                    }
                }
                else
                {
                    ifl horde_lastkills player[].actors_killed
                    {
                        sub horde_lastkills player[].actors_killed
                        abs horde_lastkills
                        set temp2 horde_lastkills
                        mul horde_lastkills 90
                        add horde_time horde_lastkills
                        clamp horde_time 0 2970
                        set horde_add_time 30
                        set horde_lastkills player[].actors_killed
                        ifn userdef[].player_skill 0
                            mul temp2 userdef[].player_skill
                        add horde_running_score temp2
                        ifn horde_add_score_count 0
                            add horde_add_score temp2
                        else
                            set horde_add_score temp2
                        set horde_add_score_count 30
                    }
                    set temp2 horde_curr
                    add temp2 1
                    set temp7 horde_roundtime
                    div temp7 30
                    set temp2 temp7
                    div temp2 10
                    mod temp7 10
                    mod temp2 6

                    set temp3 horde_roundtime
                    div temp3 1800
                    set temp4 temp3
                    div temp4 10
                    mod temp3 10
                    mod temp4 6

                    set temp5 horde_roundtime
                    div temp5 108000
                    set temp6 temp5
                    div temp6 10
                    mod temp5 10
                   
                    set temp2 horde_curr
                    add temp2 1
                    shiftl temp2 1
                    mul temp2 horde_enemies
                    mul temp2 HORDE_KILLMUL
                    shiftl temp2 4
                    set temp3 horde_roundtime
                    div temp3 HORDE_TIMEDIV
                    shiftl temp3 4
                    
                    ife temp3 0
                        set temp3 1
                    div temp2 temp3
                    ifl temp2 0
                        set temp2 0
                    // SCORE: 100(KILLS*(2*WAVELEVEL))/(TIMEINTICS/300)
                    ife horde_count 300
                    {
                        add horde_score temp2
                        add horde_score horde_running_score
                        setp[].sound_pitch 128
                        globalsound S_AMB_BUZZER
                        globalsound S_PICKUP04
                        setp[].sound_pitch 0
                        add horde_count 1
                        set horde_message_state 10
                    }
                    else
                        add horde_count 1

                    ife horde_count 390
                        set horde_message_state 11
                    else ife horde_count 480
                        set horde_message_state 12
                    ifg horde_count 510
                    {
                        add horde_curr 1
                        set horde_running_score 0
                        ifl horde_curr horde_num
                        {
                            set horde_count 0
                            set horde_start 0
                            set horde_roundtime 0
                            set temp3 horde_curr
                            mul temp3 1000
                            add temp3 2
                            setarray preloadactivations[temp3] 1
                            operateactivators temp3 THISACTOR
                            operatemasterswitches temp3
                            operaterespawns temp3
                            setp[].actors_killed 0
                            set horde_lastkills 0
                            set horde_round_spawned 0
                            for temp3 allsprites
                            {
                                switch sprite[temp3].picnum
                                    case A_TURRETDEAD
                                    case A_MECHSECT_DEAD1
                                    case A_MECHSECT_DEAD2
                                    case A_CULTIST_DEAD
                                    case A_CULTIST_GIBBED
                                    case A_GREATER_DEAD1
                                    case A_GREATER_DEAD2
                                    case A_GREATER_GIBBED
                                    case A_SHOTGUNNER_DEAD
                                    case A_SHOTGUNNER_GIBBED
                                        seta[temp3].xrepeat 0
                                        changespritestat temp3 STAT_ACTOR
                                        break
                                endswitch
                            }
                        }
                        palfrom 20 60 60 60
                    }
                }
            }
        }
    }
    else ifn horde_num 0
    {
        ifge horde_curr horde_num
        {
            clamp horde_score 0 999999999
            clamp horde_top 0 999999999

            ife horde_cheated 0
            {
                redefinequote 115 gamestate.bin
                readarrayfromfile gamestate 115
                setarray gamestate[1] horde_top
                writearraytofile gamestate 115
            }
            ifn horde_message_state 13
            {
                set horde_message_state 13
                set horde_restart_time 0
                starttrackslot -1 1
            }
            ifl horde_restart_time 150
                add horde_restart_time 1
            else
            {
                ifhitspace
                {
                    ifl horde_restart_time 300
                    {
                        add horde_restart_time 1
                        ife horde_restart_time 282
                        {
                            setu[].vm_player myconnectindex
                            setp[].sound_pitch 512
                            globalsound S_AMB_BUZZER
                            setp[].sound_pitch 0
                        }
                        else ife horde_restart_time 292
                        {
                            setu[].vm_player myconnectindex
                            setp[].sound_pitch 512
                            globalsound S_AMB_BUZZER
                            setp[].sound_pitch 0
                        }
                    }
                    else
                        setvar p_horde_restart 1
                }
                else
                    set horde_restart_time 150
            }
        }
    }
endevent

// Horde mode scoreboard

appendevent EVENT_DISPLAYREST
    ifn horde_message_state 0
    ifg userdef[].screen_size 0
    {
        switch horde_message_state
            case 1
                set temp 512
                add temp horde_curr
                set text_flags 0
                or text_flags TEXT_BIGALPHANUM
                or text_flags TEXT_XCENTER
                or text_flags TEXT_UPPERCASE

                
                set temp2 horde_start
                ifl temp2 10
                {
                    shiftl temp2 4
                    sub temp2 255
                    abs temp2
                }
                else ifg temp2 80
                {
                    sub temp2 90
                    shiftl temp2 3
                    add temp2 255
                    abs temp2
                }
                else
                    set temp2 0
                screentext BIGALPHANUM 160 100 24576 0 0 temp 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                
                break
            case 2
            case 3
            case 4
            case 5
            case 6
            case 7
            case 8
                set text_flags 0
                or text_flags TEXT_BIGALPHANUM
                or text_flags TEXT_XCENTER
                or text_flags TEXT_UPPERCASE

                set temp2 horde_count
                sub temp2 330
                abs temp2
                clamp temp2 0 300
                div temp2 30
                ife horde_count 300
                    set temp2 0
                redefinequote 480 %ld
                qsprintf 480 480 temp2
                set temp 0
                ifg horde_message_state 2
                {
                    set temp horde_message_state
                    shiftl temp 5
                    clamp temp 0 255
                }
                ifle temp2 5
                {
                    ifn temp2 0
                    {
                        screentext BIGALPHANUM 160 99 29696 0 0 480 0 1 24 180 BIGFONT_XSPACE 8 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                        screentext BIGALPHANUM 160 100 24576 0 0 480 0 5 24 temp BIGFONT_XSPACE 8 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                        redefinequote 480 ^11GET READY!
                        screentext BIGALPHANUM 160 78 16384 0 0 480 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2

                    }
                    else
                    {
                        set temp3 temp
                        shiftl temp3 8
                        set temp4 100
                        sub temp4 horde_message_state
                        ifg temp3 0 // if zoom is zero, prevents a crash
                            screentext BIGALPHANUM 160 temp4 temp3 0 0 480 0 9 24 temp BIGFONT_XSPACE 8 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                        
                        ifg horde_message_state 2
                        {
                            set temp7 horde_time
                            div temp7 30


                            ifle horde_time 330
                            {
                                ifand horde_time 2
                                    redefinequote 480 ^09%ld
                                else
                                    redefinequote 480 ^11%ld
                            }
                            else
                                redefinequote 480 ^11%ld
                            qsprintf 480 480 temp7
                            set temp2 horde_enemies
                            sub temp2 player[].actors_killed
                            ife temp2 1
                                redefinequote 481 ^11Enemies Remaining: ^10%ld
                            else
                                redefinequote 481 ^11Enemies Remaining: ^01%ld
                            qsprintf 481 481 temp2
                            // qstrcat 480 481
                            redefinequote 482 ^11Stage: ^01%ld
                            set temp2 horde_curr
                            add temp2 1
                            qsprintf 482 482 temp2
                            set temp2 horde_running_score
                            add temp2 horde_score
                            ife temp2 0
                                redefinequote 483 ^11Score: ^01%ld
                            else
                                redefinequote 483 ^11Score: ^01%ld0
                            qsprintf 483 483 temp2

                            redefinequote 484 ^05+ %ld0
                            qsprintf 484 484 horde_add_score
                            screentext BIGALPHANUM 160 5 16384 0 0 482 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            
                            screentext BIGALPHANUM 160 230 16384 0 0 481 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            set temp2 horde_message_state
                            shiftl temp2 9
                            add temp2 20480
                            screentext BIGALPHANUM 160 20 temp2 0 0 480 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            ifn horde_add_time 0
                            {
                                set temp horde_add_time
                                shiftl temp 3
                                sub temp 240
                                abs temp
                                redefinequote 480 ^05%ld
                                qsprintf 480 480 temp7
                                set temp3 temp
                                shiftl temp3 6
                                add temp2 temp3
                                screentext BIGALPHANUM 160 20 temp2 0 0 480 0 1 24 temp BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            }
                            xor text_flags TEXT_XCENTER
                            screentext BIGALPHANUM 5 5 16384 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            ifg horde_add_score_count 0
                            {
                                screentext BIGALPHANUM 40 15 12288 0 0 484 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            }
                            or text_flags TEXT_XRIGHT

                            ife horde_top 0
                                redefinequote 483 ^11Top: ^01%ld
                            else
                                redefinequote 483 ^11Top: ^01%ld0
                            qsprintf 483 483 horde_top

                            screentext BIGALPHANUM 315 5 16384 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            ifn horde_cheated 0
                            {
                                redefinequote 483 ^9Cheater!
                                screentext BIGALPHANUM 315 15 12288 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                            }
                        }
                    }
                }
                break
            case 9
                set temp7 horde_time
                div temp7 30


                ifle horde_time 330
                {
                    ifand horde_time 2
                        redefinequote 480 ^09%ld
                    else
                        redefinequote 480 ^11%ld
                }
                else
                    redefinequote 480 ^11%ld
                qsprintf 480 480 temp7
                set temp2 horde_enemies
                sub temp2 player[].actors_killed
                ife temp2 1
                    redefinequote 481 ^11Enemies Remaining: ^10%ld
                else
                    redefinequote 481 ^11Enemies Remaining: ^01%ld
                qsprintf 481 481 temp2

                redefinequote 482 ^11Stage: ^01%ld
                set temp2 horde_curr
                add temp2 1
                qsprintf 482 482 temp2
                set temp2 horde_running_score
                add temp2 horde_score
                ife temp2 0
                    redefinequote 483 ^11Score: ^01%ld
                else
                    redefinequote 483 ^11Score: ^01%ld0
                qsprintf 483 483 temp2

                redefinequote 484 ^05+ %ld
                set temp2 horde_add_score
                mul temp2 10
                clamp temp2 0 999999999
                qsprintf 484 484 temp2
                set text_flags 0
                or text_flags TEXT_BIGALPHANUM
                or text_flags TEXT_XCENTER
                or text_flags TEXT_UPPERCASE
                screentext BIGALPHANUM 160 5 16384 0 0 482 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                screentext BIGALPHANUM 160 20 24576 0 0 480 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ifn horde_add_time 0
                {
                    set temp horde_add_time
                    shiftl temp 3
                    sub temp 240
                    abs temp
                    redefinequote 480 ^05%ld
                    qsprintf 480 480 temp7
                    set temp3 temp
                    shiftl temp3 6
                    add temp3 24576
                    screentext BIGALPHANUM 160 20 temp3 0 0 480 0 1 24 temp BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                screentext BIGALPHANUM 160 230 16384 0 0 481 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                xor text_flags TEXT_XCENTER
                screentext BIGALPHANUM 5 5 16384 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ifg horde_add_score_count 0
                {
                    screentext BIGALPHANUM 40 15 12288 0 0 484 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }

                ife horde_top 0
                    redefinequote 483 ^11Top: ^01%ld
                else
                    redefinequote 483 ^11Top: ^01%ld0
                qsprintf 483 483 horde_top

                or text_flags TEXT_XRIGHT
                screentext BIGALPHANUM 315 5 16384 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ifn horde_cheated 0
                {
                    redefinequote 483 ^9Cheater!
                    screentext BIGALPHANUM 315 15 12288 0 0 483 0 1 24 0 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                break
            case 10
            case 11
                set temp7 horde_roundtime
                div temp7 30
                set temp2 temp7
                div temp2 10
                mod temp7 10
                mod temp2 6

                set temp3 horde_roundtime
                div temp3 1800
                
                set text_flags 0
                or text_flags TEXT_BIGALPHANUM
                or text_flags TEXT_UPPERCASE
                or text_flags TEXT_XCENTER
                
                set temp horde_count
                ifl temp 450
                {
                    sub temp 300
                    shiftl temp 3
                    clamp temp 0 255
                    sub temp 255
                    abs temp
                    clamp temp 0 255
                }
                else
                {
                    sub temp 450
                    shiftl temp 3
                    clamp temp 0 255
                }
                redefinequote 480 ^1 Round Time: ^00%ld:%ld%ld
                qsprintf 480 480 temp3 temp2 temp7
                
                screentext BIGALPHANUM 160 10 16384 0 0 480 0 1 24 temp BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2

                
                set temp2 horde_curr
                add temp2 1
                shiftl temp2 1
                mul temp2 horde_enemies
                mul temp2 HORDE_KILLMUL
                shiftl temp2 4
                set temp3 horde_roundtime

                div temp3 HORDE_TIMEDIV
                shiftl temp3 4
                
                ife temp3 0
                    set temp3 1
                div temp2 temp3
                ifl temp2 0
                    set temp2 0
                ife temp2 0
                {
                    ife horde_running_score 0
                        redefinequote 480 ^1 Round Score: ^06%ld ^04+BONUS %ld
                    else
                        redefinequote 480 ^1 Round Score: ^06%ld0 ^04+BONUS %ld
                }
                else
                {
                    ife horde_running_score 0
                        redefinequote 480 ^1 Round Score: ^06%ld ^04+BONUS %ld0
                    else
                        redefinequote 480 ^1 Round Score: ^06%ld0 ^04+BONUS %ld0
                }
                qsprintf 480 480 horde_running_score temp2
                set temp horde_count
                ifl temp 450
                {
                    sub temp 300
                    shiftl temp 3
                    clamp temp 0 270
                    sub temp 270
                    abs temp
                    clamp temp 0 255
                }
                else
                {
                    sub temp 450
                    shiftl temp 3
                    clamp temp 0 255
                }
                screentext BIGALPHANUM 160 20 16384 0 0 480 0 1 24 temp BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                redefinequote 480 ^1 Total Score: ^05%ld0
                qsprintf 480 480 horde_score
                set temp horde_count
                ifl temp 450
                {
                    sub temp 300
                    shiftl temp 3
                    clamp temp 0 285
                    sub temp 285
                    abs temp
                    clamp temp 0 255
                }
                else
                {
                    sub temp 450
                    shiftl temp 3
                    clamp temp 0 255
                }
                screentext BIGALPHANUM 160 30 24576 0 0 480 0 1 24 temp BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ife horde_message_state 11
                {
                    set temp 552
                    add temp horde_curr
                    set text_flags 0
                    or text_flags TEXT_BIGALPHANUM
                    or text_flags TEXT_XCENTER
                    or text_flags TEXT_UPPERCASE
                    
                    set temp2 horde_count
                    sub temp2 390
                    ifl temp2 10
                    {
                        shiftl temp2 4
                        sub temp2 255
                        abs temp2
                    }
                    else ifg temp2 80
                    {
                        sub temp2 90
                        shiftl temp2 3
                        add temp2 255
                        abs temp2
                    }
                    else
                        set temp2 0
                    screentext BIGALPHANUM 160 100 24576 0 0 temp 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                break
            case 13
                set text_flags 0
                or text_flags TEXT_BIGALPHANUM
                or text_flags TEXT_XCENTER
                or text_flags TEXT_UPPERCASE
                
                set temp2 horde_restart_time
                ife horde_cheated 0
                {
                    ifl temp2 150
                    {
                        sub temp2 150
                        abs temp2
                        ifand temp2 4
                            redefinequote 483 ^4You Win!
                        else
                            redefinequote 483 ^1You Win!
                    }
                    else
                    {
                        set temp2 0
                        redefinequote 483 ^4You Win!
                    }
                }
                else
                {
                    ifl temp2 150
                    {
                        sub temp2 150
                        abs temp2
                        ifand temp2 4
                            redefinequote 483 ^10You Cheated!
                        else
                            redefinequote 483 ^1You ^9Cheated^1!
                    }
                    else
                    {
                        set temp2 0
                        redefinequote 483 ^9You Cheated!
                    }
                }
                screentext BIGALPHANUM 160 80 32768 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ife horde_score 0
                    redefinequote 483 ^1Final Score: ^05%ld
                else
                    redefinequote 483 ^1Final Score: ^05%ld0
                qsprintf 483 483 horde_score
                screentext BIGALPHANUM 160 100 32768 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                ife horde_top 0
                    redefinequote 483 ^11Best Score: ^01%ld
                else
                    redefinequote 483 ^11Best Score: ^01%ld0
                qsprintf 483 483 horde_top
                screentext BIGALPHANUM 160 120 16384 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                
                xor text_flags TEXT_XCENTER
                shiftl temp2 2
                clamp temp2 0 255
                ifle horde_restart_time 150
                {
                    redefinequote 483 ^6Hold ^7USE ^6to restart
                    screentext BIGALPHANUM 5 5 8192 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                else
                {
                    set temp3 horde_restart_time
                    ife temp3 300
                        set temp3 0
                    else
                    {
                        sub temp3 330
                        abs temp3
                        div temp3 30
                    }
                    redefinequote 483 ^6. . . Restarting in^07 %ld
                    qsprintf 483 483 temp3
                    screentext BIGALPHANUM 5 5 8192 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                ifn horde_cheated 0
                {
                    redefinequote 483 ^1Your ^9score ^1will not be saved
                    screentext BIGALPHANUM 15 10 8192 0 0 483 0 1 24 temp2 BIGFONT_XSPACE 16 BIGFONT_XBETWEEN 0 text_flags windowx1 windowy1 windowx2 windowy2
                }
                break
        endswitch
    }
endevent


// Radar

define RADAR_UPDATE_TIME 10
define MAX_RADAR_RADIUS 20480

var radar_time
var radar_targets

array radar_target_x 16384 // 0
array radar_target_y 16384 // 0

array radar_target_c 16384 GAMEARRAY_RESTORE GAMEARRAY_UINT8 // 0

appendevent EVENT_RESETINVENTORY
    // resizearray radar_target_x 0
    // resizearray radar_target_y 0
endevent

/*
defstate radar_on
    set radar_time 0
ends

defstate radar_off
    // resizearray radar_target_x 0
    // resizearray radar_target_y 0
ends
*/

appendevent EVENT_WORLD
    ifn VOLUME EP_HORDE
        ifle playervar[myconnectindex].p_pup_radar_time 0
        {
            set radar_time 0
            break
        }
    ife radar_time 0
    {
        ifg playervar[myconnectindex].p_pup_radar_time 0
        {
            set radar_targets 0
            for temp2 range radar_targets_num
            {
                set temp3 radar_targets_pup[temp2]
                set temp9 temp3
                abs temp3
                ife temp3 32768
                    set temp3 0

                dist temp4 player[myconnectindex].i temp3
                set temp8 MAX_RADAR_RADIUS
                shiftr temp8 1
                ifle temp4 temp8
                {
                    set temp4 player[myconnectindex].ang
                    set temp5 player[myconnectindex].posx
                    set temp6 player[myconnectindex].posy

                    sub temp5 sprite[temp3].x
                    sub temp6 sprite[temp3].y

                    getangle temp7 temp5 temp6
                    sub temp4 temp7

                    calchypotenuse temp5 temp5 temp6
                    ifg temp5 temp8
                        set temp5 temp8

                    sin temp6 temp4
                    scalevar temp6 temp6 temp5 temp8

                    cos temp7 temp4
                    scalevar temp7 temp7 temp5 temp8

                    setarray radar_target_x[radar_targets] temp6
                    setarray radar_target_y[radar_targets] temp7
                    setarray radar_target_c[radar_targets] 38
                    ifl temp9 0
                        setarray radar_target_c[radar_targets] 34
                    else ife temp9 32768
                        setarray radar_target_c[radar_targets] 34

                    add radar_targets 1
                }
            }
        }
        else
        {
            set radar_targets num_flag32
            // resizearray radar_target_x num_flag32
            // resizearray radar_target_y num_flag32
            
            for temp2 range num_flag32
            {
                set temp3 gameflag32[temp2]

                set temp4 player[].ang
                set temp5 player[].posx
                set temp6 player[].posy

                sub temp5 sprite[temp3].x
                sub temp6 sprite[temp3].y

                getangle temp7 temp5 temp6
                sub temp4 temp7

                calchypotenuse temp5 temp5 temp6
                ifg temp5 MAX_RADAR_RADIUS
                    set temp5 MAX_RADAR_RADIUS

                sin temp6 temp4
                scalevar temp6 temp6 temp5 MAX_RADAR_RADIUS

                cos temp7 temp4
                scalevar temp7 temp7 temp5 MAX_RADAR_RADIUS

                setarray radar_target_x[temp2] temp6
                setarray radar_target_y[temp2] temp7
            }
        }
    }
    add radar_time 1
    ifn VOLUME EP_HORDE
    {
        ife radar_time 5
            set radar_time 0    
    }
    else ife radar_time RADAR_UPDATE_TIME
        set radar_time 0
    getpv[myconnectindex].p_pup_radar_time temp
    ifg temp 0
    {
        sub temp 1
        ife temp 225
        {
            setp[myconnectindex].sound_pitch -128
            globalsound S_MINIGUN_PULSE
            setp[myconnectindex].sound_pitch 0
        }
        setpv[myconnectindex].p_pup_radar_time temp
    }
endevent

appendevent EVENT_DISPLAYSBAR
    ife userdef[].screen_size 0
      break

    ifn VOLUME EP_HORDE
        ifg hud_radar 0
        {
            state ResetTile
            set hudx_x HUD_MEDKIT_X
            set hudx_y HUD_MEDKIT_Y
            sub hudx_y 18
            set hudx_scale HUD_MEDKIT_Z
            shiftr hudx_scale 1
            set hudx_tilenum I_RADAR
            ifn flash_radar 0
            {
                ifg flash_radar 2
                    set hudx_pal 5
                else ifg flash_radar 0
                    set hudx_pal 4

                set temp6 flash_radar
                shiftl temp6 12
                ifl flash_radar 0
                {
                    inv temp6
                    shiftr temp6 1
                }
                add hudx_scale temp6
            }
            
            set hudx_orientation 257
            state DrawTile640x480Hud

            state ResetText
            set hudx_x HUD_MEDKIT_TXT_X
            set hudx_y HUD_MEDKIT_TXT_Y
            sub hudx_y 24
            set hudx_scale HUD_MEDKIT_TXT_Z
            redefinequote 190 x%ld
            qsprintf 190 190 hud_radar
            set hudx_quote 190
            set hudx_tilenum STARTALPHANUM
            set hudx_pal 0
            ifg flash_radar 0
            {
                ifg flash_radar 2
                    set hudx_pal 5
                else
                    set hudx_pal 4
                set temp6 flash_radar
                shiftl temp6 10
                add hudx_scale temp6
            }
            else
                set hudx_pal 12
            set hudx_orientation 273
            state DrawText640x480Hud
        }

   
   /*
    ifg p_pup_radar_time 0
    {
        set hudx_shade radar_time
        mod hudx_shade 30
        sub hudx_shade 15
        abs hudx_shade
        shiftl hudx_shade 1
        sub hudx_shade 4
        
        set hudx_x HUD_HEALTH_TXT_X
        sub hudx_x 10
        set hudx_y HUD_HEALTH_TXT_Y
        sub hudx_y 80
        set hudx_scale HUD_AMMO_TXT_Z
        sub hudx_scale 4096
        set temp hudx_scale
        shiftr temp 12
        add hudx_x temp
        shiftl temp 1
        add hudx_y temp
        ifle p_pup_bomb_time 300
        {
            ifle p_pup_bomb_time 100
                set hudx_pal 9
            else ifle p_pup_bomb_time 200
                set hudx_pal 10
            else
                set hudx_pal 11
        }
        else
            set hudx_pal 1
        redefinequote 190 %ld
        set temp p_pup_radar_time
        div temp 30
        qsprintf 190 190 temp
        set hudx_quote 190
        set hudx_tilenum BIGALPHANUM
        set hudx_orientation 256
        set hudx_txtflags 258
        set hudx_xbetween 60
        state DrawText640x480Hud
    } */
endevent

appendevent EVENT_DISPLAYREST
    set automapping 0

    ifn VOLUME EP_HORDE
        ifle playervar[myconnectindex].p_pup_radar_time 0
            break

    set automapping 1
    state ResetTile
    ifg p_pup_radar_time 0
    {
        set hudx_alpha p_pup_radar_time
        clamp hudx_alpha 0 255
        sub hudx_alpha 255
        inv hudx_alpha
        
    }
    set hudx_x 100
    ifg p_pup_radar_time 0
        sub hudx_x 20
    shiftl hudx_x 16
    set hudx_y 375
    shiftl hudx_y 16
    set hudx_shade 12
    set hudx_pal 34
    set hudx_tilenum 5600
    set hudx_orientation 2305
    ife rendmode 0
        ifg hudx_alpha 84
            xor hudx_orientation 1
    set hudx_scale 49152
    state DrawTile640x480Hud

    set hudx_tilenum 5601
    set hudx_orientation 2304

    set hudx_shade radar_time
    set temp RADAR_UPDATE_TIME
    shiftr temp 3
    add hudx_shade 2
    add hudx_shade temp

    ifg radar_time 0
    {
        ifl hudx_shade 28
        {
            set hudx_pal 38

            set temp hudx_x
            set temp2 hudx_y

            for temp3 range radar_targets
            {
                ifg p_pup_radar_time 0
                    set hudx_pal radar_target_c[temp3]
                set hudx_x radar_target_x[temp3]
                set hudx_y radar_target_y[temp3]
                mul hudx_x 48
                mul hudx_y 48
                mulscale hudx_x hudx_x hudx_scale 14
                mulscale hudx_y hudx_y hudx_scale 14

                add hudx_x temp
                add hudx_y temp2

                ife hudx_pal 34
                    sub hudx_scale 4096
                state DrawTile640x480Hud
                ife hudx_pal 34
                    add hudx_scale 4096
            }

            set hudx_x temp
            set hudx_y temp2
        }
    }

    set hudx_shade 8
    set hudx_pal 34
    state DrawTile640x480Hud
endevent

var do_static 1 0
onevent EVENT_DISPLAYSBAR
    ifg player.newowner -1 
    {
        ife do_static 1 ifrnd 63
        {
            for temp range 320
            {
                state ResetTile
                set hudx_tilenum 5601
                set hudx_scale 65536
                set hudx_pal 78
                set hudx_shade 10
                ifrnd 127
                {
                    ifrnd 127
                        add hudx_shade 5
                    else ifrnd 127
                        add hudx_shade 15
                    else
                        set hudx_shade 15
                }
                displayrandvar hudx_x 640
                displayrandvar hudx_y 480
                ifg temp 159
                {
                    ifl hudx_x 300
                        set hudx_orientation 256
                    else ifg hudx_x 340
                        set hudx_orientation 512
                }
                else
                {
                    ifl hudx_x 40
                        set hudx_orientation 256
                    else ifg hudx_x 600
                        set hudx_orientation 512
                }
                state DrawTile640x480Screen
            }
        }
        set temp totalclock
        mod temp 120
        ifl temp 30
        {
            state ResetTile
            set hudx_tilenum 5854
            set hudx_scale 98304
            set hudx_pal 9
            set hudx_shade 0
            set hudx_orientation 256
            set hudx_x 16
            set hudx_y 16
            state DrawTile640x480Screen
        }
        for temp range 120
        {
            set temp2 temp
            shiftl temp2 2
            rotatesprite 160 temp2 32768 0 5531 28 0 1024 windowx1 windowy1 windowx2 windowy2
        }
    }
endevent

