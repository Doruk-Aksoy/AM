/*
--------------------------------------------------------------------------------
================================================================================
                          +:
WWW@*WWWWWWW+  *WWWWWWW*  :=@       @WWWWWWWWW*WWW*  =WWW*WWWWWWWWWW@*WWW+  @WW
WWW@*WWWWWWWWW**WWWWWWWWW=   =*     @WWWWWWWWW*WWW*  =WWW*WWWWWWWWWW@*WWW+  @WW
WWW@*WWW+  WWWW*WWW*  @WWW :WWWWWW+ @WWW*    *+WWW*  =WWW*WWW#=#WWWW#*WWWWW@@WW
WWW@*WWW+  @WWW*WWW*  #WWW @WWWWWWW @WWW#WWWW@+WWW*  =WWW*WWW#WWWWW* *WWWWW@@WW
WWW@*WWW@  @WWW*WWW*  #WWW += =# += @WWW      +WWWW: =WWW*WWW=  @WWW@      *WWW
WWW@ *WWWWWWWWW*WWW*  #WWW   =WW@   @WWW       :WWWWWWWWW*WWW=   WWW@:WWWWWWWW@
@@@@   +@@@@@@@+@@@+  #WWW          @WWW         :WWWWWWW+W@@=   @@@@:@@@@@@#

###############################################################################
Ion Fury
Code by Jonathan Strander, Fox Martins, Richard Gobeille, Evan Ramos
        and Dino Bollinger
All code as written belongs to Voidpoint and the respective authors.
(c) 2019-2021 Voidpoint, LLC
--------------------------------------------------------------------------------
While we encourage you to experiment, modifications are allowed WITHOUT any
warranty or guarantee of support. Editing these files is AT YOUR OWN RISK, and
we encourage you to make backups.
--------------------------------------------------------------------------------

NOTES:
This file contains most of the code for weapons, barring a few functions that
felt less disjointed in the player code directly. Drawing events for weapons are
also included here.
================================================================================
--------------------------------------------------------------------------------
*/

//
// WEAPON LIST
/*
1) taser
2) loverboy
3) shotgun
4) smg
5) minigun
6) bowling bombs
7) grenade launcher
8) crossbow
9) lam
*/

var bobcounter2 // custom bob stuff, with the similar names for the sake of posterity
var weapon_sway2
var press_alt
var press_reload
var weapon1_alt
var weapon1_alt_time
var weapon1_alt_skill
var weapon_mini_fire
var weapon3_delay 0 1
var p_have_dart 0 GAMEVAR_PERPLAYER GAMEVAR_NORESET GAMEVAR_SERIALIZE
var p_dart_pal 0 GAMEVAR_PERPLAYER GAMEVAR_NORESET GAMEVAR_SERIALIZE
var w0alt
var w1alt
var w2alt
var w3alt
var w2alt_count
var w3alt_count
var w3alt_lastinv
var w3alt_ammo
var w2_ammo1
var w2_ammo2
var w4alt_zing
var w5alt
var w5alt_delay
var w5alt_delay2
var w1_sparkle
var w5_sparkle
var w6_sparkle
var w9_state 0 1
var w9_tween 0 1
var w9_lock_button 0 1
var lam_hit_id 0 2
var shell_invisible 0 2
var shell_smg 0 2
var weapon1_validtarget 0 2
var was_plasma_alt 0 2
var fuckup_aim 0 1
var fuckup_aim_count 0 1

var fuckup_aim2 0 1
var fuckup_aim2_r 0 1
var fuckup_aim2_count 0 1

var pup_bomb_safety 0 1

var kickback_other 0 1
var other_smg_toggle 0 GAMEVAR_NORESET GAMEVAR_SERIALIZE
var other_smg 0 GAMEVAR_NORESET GAMEVAR_SERIALIZE
var main_smg_fired 0 131072
var p_pl_ang 0 0

var nodrawweapon

var input_obits 0 1
var input_stall 0 1

var PIPEBOMB_CONTROL 0 1

var bbomb_hold_count 0 1
var bbomb_alt_mode 0 2
var bbomb_lastx 0 2
var bbomb_lasty 0 2
var bbomb_lastz 0 2
var bbomb_lastsect 0 2
var bombette_throw
var bombette_ammo BOMBETTE_MAXAMMO 1
var player_target -1 1
var p_want_angry

var bbomb_pickup 0 2
var bbomb_bounce_v 0 2
var bbomb_oy 0 2
var bbomb_move_v 0 2
var bbomb_angdiff 0 2
var bbomb_pv 0 2
var bbomb_target -1 2
var bbomb_fulllock -1 2
var bbomb_bounce_snd 0 2
var bbomb_fast_next 0 2
var bbomb_bonb 0 2
var bbomb_gold 0 2
var bbomb_search_count 0 2
var bb_x 0 2
var bb_y 0 2
var bbomb_fuse_snd 0 2
var bbomb_delayslow 0 2
var bbomb_interrupt -1 2

var bbomb_radius 0 2

var smg_snd 0 1

var minimissile_t -1 2

var plasma_last_x 0 2
var plasma_last_y 0 2
var plasma_last_z 0 2

var grenade_tumble 14 2
var napalm_oxv 0 2
var napalm_ozv 0 2

var old_boltlike 0 2
var old_boltlike2 0 2

var old_hud_weapon_shade

var hud_totaltime
var hud_reload
var hud_firedelay

var interpolate_weapons
var smooth_world_totalclock
var smooth_totalclock
var smooth_weaponcount
var smooth_inv_weaponcount
var last_weaponcount
var last_weapon_pos

var last_xbaton_x
var last_xbaton_y
var last_xbaton_weaponcount

var WEAPON0_CLIP 0 1
var WEAPON0_RELOAD 0 1
var WEAPON0_FIREDELAY 7 1
var WEAPON0_TOTALTIME 70 1
var WEAPON0_HOLDDELAY 0 1
var WEAPON0_FLAGS 256 1
var WEAPON0_SHOOTS -1 1
var WEAPON0_SPAWNTIME 0 1
var WEAPON0_SPAWN -1 1
var WEAPON0_SHOTSPERBURST 0 1
var WEAPON0_WORKSLIKE 0 1
var WEAPON0_INITIALSOUND 0 1
var WEAPON0_FIRESOUND 0 1
var WEAPON0_SOUND2TIME 0 1
var WEAPON0_SOUND2SOUND 0 1
var WEAPON0_RELOADSOUND1 0 1
var WEAPON0_RELOADSOUND2 0 1
var WEAPON0_SELECTSOUND S_MELEE_SWING02 1

var WEAPON1_CLIP 0 1
var WEAPON1_RELOAD 60 1
var WEAPON1_FIREDELAY 2 1
var WEAPON1_TOTALTIME 6 1
var WEAPON1_HOLDDELAY 0 1
var WEAPON1_FLAGS 0 1
var WEAPON1_SHOOTS P_LOVERBOY 1
var WEAPON1_SPAWNTIME 0 1
var WEAPON1_SPAWN -1 1
var WEAPON1_SHOTSPERBURST 3 1
var WEAPON1_WORKSLIKE 1 1
var WEAPON1_INITIALSOUND 0 1
var WEAPON1_FIRESOUND AM_S_TRIFIRE_1 1
var WEAPON1_SOUND2TIME 54 1
var WEAPON1_SOUND2SOUND S_TRILOAD2 1
var WEAPON1_RELOADSOUND1 S_TRILOAD1 1
var WEAPON1_RELOADSOUND2 S_BBOMB_THROW 1
var WEAPON1_SELECTSOUND S_TRILOAD2 1

var WEAPON2_CLIP 0 1
var WEAPON2_RELOAD 100 1
var WEAPON2_FIREDELAY 2 1
var WEAPON2_TOTALTIME 32 1
var WEAPON2_HOLDDELAY 0 1
var WEAPON2_FLAGS 4 1
var WEAPON2_SHOOTS P_SHOTGUN 1
var WEAPON2_SPAWNTIME 0 1
var WEAPON2_SPAWN -1 1
var WEAPON2_SHOTSPERBURST 16 1
var WEAPON2_WORKSLIKE 2 1
var WEAPON2_INITIALSOUND 0 1
var WEAPON2_FIRESOUND AM_S_SHOTGUNFIRE_1 1
var WEAPON2_SOUND2TIME 12 1
var WEAPON2_SOUND2SOUND 0 1
var WEAPON2_RELOADSOUND1 0 1
var WEAPON2_RELOADSOUND2 0 1
var WEAPON2_SELECTSOUND S_SHOTGUN_RELOAD1 1

define PISTOL_CLIP      6
define SHOTGUN_CLIP     6
define SMG_CLIP         40
define CROSSBOW_CLIP    15

define PISTOL_NUMSHELLS    18
define SHOTGUN_NUMSHELLS   6

var WEAPON3_CLIP 0 1
var WEAPON3_RELOAD 47 1
var WEAPON3_FIREDELAY 1 1
var WEAPON3_TOTALTIME 7 1
var WEAPON3_HOLDDELAY 0 1
var WEAPON3_FLAGS 84 1
var WEAPON3_SHOOTS P_SMG2 1
var WEAPON3_SPAWNTIME 0 1
var WEAPON3_SPAWN 0 1
var WEAPON3_SHOTSPERBURST 0 1
var WEAPON3_WORKSLIKE 3 1
var WEAPON3_INITIALSOUND 0 1
var WEAPON3_FIRESOUND 0 1
var WEAPON3_SOUND2TIME 0 1
var WEAPON3_SOUND2SOUND 0 1
var WEAPON3_RELOADSOUND1 0 1
var WEAPON3_RELOADSOUND2 0 1
var WEAPON3_SELECTSOUND S_SMG_BOLT 1


var WEAPON4_CLIP 0 1
var WEAPON4_RELOAD 36 1
var WEAPON4_FIREDELAY 30 1
var WEAPON4_TOTALTIME 75 1
var WEAPON4_HOLDDELAY 31 1
var WEAPON4_FLAGS 0 1
var WEAPON4_SHOOTS P_MINIGUN 1
var WEAPON4_SPAWNTIME 0 1
var WEAPON4_SPAWN 0 1
var WEAPON4_SHOTSPERBURST 1 1
var WEAPON4_WORKSLIKE WEAPON_MINIGUN 1
var WEAPON4_INITIALSOUND 0 1
var WEAPON4_FIRESOUND 0 1
var WEAPON4_SOUND2TIME 0 1
var WEAPON4_SOUND2SOUND 0 1
var WEAPON4_RELOADSOUND1 0 1
var WEAPON4_RELOADSOUND2 0 1
var WEAPON4_SELECTSOUND S_MINIGUN_PICKUP 1


var WEAPON6_CLIP 0 1
var WEAPON6_RELOAD 100 1
var WEAPON6_FIREDELAY 2 1
var WEAPON6_TOTALTIME 32 1
var WEAPON6_HOLDDELAY 0 1
var WEAPON6_FLAGS 4 1
var WEAPON6_SHOOTS P_GRENADE 1
var WEAPON6_SPAWNTIME 0 1
var WEAPON6_SPAWN -1 1
var WEAPON6_SHOTSPERBURST 1 1
var WEAPON6_WORKSLIKE 6 1
var WEAPON6_INITIALSOUND 0 1
var WEAPON6_FIRESOUND S_GRENADE_LAUNCH 1
var WEAPON6_SOUND2TIME 12 1
var WEAPON6_SOUND2SOUND 0 1
var WEAPON6_RELOADSOUND1 0 1
var WEAPON6_RELOADSOUND2 0 1
var WEAPON6_SELECTSOUND S_SHOTGUN_CLIPOUT 1

var WEAPON7_CLIP 0 1
var WEAPON7_RELOAD 83 1
var WEAPON7_FIREDELAY 40 1
var WEAPON7_TOTALTIME 53 1
var WEAPON7_HOLDDELAY 41 1
var WEAPON7_FLAGS 64 1
var WEAPON7_SHOOTS -1 1 // seems to work
var WEAPON7_SPAWNTIME 0 1
var WEAPON7_SPAWN 0 1
var WEAPON7_SHOTSPERBURST 0 1
var WEAPON7_WORKSLIKE 7 1
var WEAPON7_INITIALSOUND 0 1
var WEAPON7_FIRESOUND 0 1
var WEAPON7_SOUND2TIME 0 1
var WEAPON7_SOUND2SOUND 0 1
var WEAPON7_RELOADSOUND1 0 1
var WEAPON7_RELOADSOUND2 0 1
var WEAPON7_SELECTSOUND S_CROSSBOW_READY 1


var WEAPON5_CLIP 0 1
var WEAPON5_RELOAD 30 1
var WEAPON5_FIREDELAY 12 1
var WEAPON5_TOTALTIME 34 1
var WEAPON5_HOLDDELAY 13 1
var WEAPON5_FLAGS 512 1
var WEAPON5_SHOOTS P_BOWLINGBOMB 1
var WEAPON5_SPAWNTIME 0 1
var WEAPON5_SPAWN 0 1
var WEAPON5_SHOTSPERBURST 0 1
var WEAPON5_WORKSLIKE 5 1
var WEAPON5_INITIALSOUND 0 1
var WEAPON5_FIRESOUND 0 1
var WEAPON5_SOUND2TIME 0 1
var WEAPON5_SOUND2SOUND 0 1
var WEAPON5_RELOADSOUND1 0 1
var WEAPON5_RELOADSOUND2 0 1
var WEAPON5_SELECTSOUND S_BBOMB_THROW 1

var WEAPON8_CLIP 0 1
var WEAPON8_RELOAD 0 1
var WEAPON8_FIREDELAY 3 1
var WEAPON8_TOTALTIME 24 1
var WEAPON8_HOLDDELAY 0 1
var WEAPON8_FLAGS 16640 1
var WEAPON8_SHOOTS P_PUCK_THROWN 1
var WEAPON8_SPAWNTIME 0 1
var WEAPON8_SPAWN 0 1
var WEAPON8_SHOTSPERBURST 1 1
var WEAPON8_WORKSLIKE 9 1
var WEAPON8_INITIALSOUND 0 1
var WEAPON8_FIRESOUND 0 1
var WEAPON8_SOUND2TIME 0 1
var WEAPON8_SOUND2SOUND 0 1
var WEAPON8_RELOADSOUND1 0 1
var WEAPON8_RELOADSOUND2 0 1
var WEAPON8_SELECTSOUND S_BBOMB_THROW 1


// weapon frame tester here!
/*
var WEAPON9_CLIP 0 1
var WEAPON9_RELOAD 0 1
var WEAPON9_FIREDELAY 7 1
var WEAPON9_TOTALTIME 14 1
var WEAPON9_HOLDDELAY 0 1
var WEAPON9_FLAGS 292 1
var WEAPON9_SHOOTS 2521 1
var WEAPON9_SPAWNTIME 0 1
var WEAPON9_SPAWN 0 1
var WEAPON9_SHOTSPERBURST 0 1
var WEAPON9_WORKSLIKE 9 1
var WEAPON9_INITIALSOUND 0 1
var WEAPON9_FIRESOUND 0 1
var WEAPON9_SOUND2TIME 0 1
var WEAPON9_SOUND2SOUND 0 1
var WEAPON9_RELOADSOUND1 0 1
var WEAPON9_RELOADSOUND2 0 1
var WEAPON9_SELECTSOUND 0 1
*/

// weapon vars

var muzzle_flash_ang 0 1
var minigun_need_spinup 0 1

var last_crossbow_spb 0 1
var crossbow_idle_count 0 1
var delay_weapon_switch 0 1

var guntester_counter 0 1
var guntester_tileadd 0 1
var delay_blur1 0 1
var delay_blur2 0 1

var release_fire 0 1
var baton_strikes 0 1
var baton_idle 0 1
var baton_fizzer 0 1
var baton_idle_delay 0 1
var baton_idle_2 30 1
var baton_early 0 1
var baton_next 0 1
var pistol_num_shells 0 1
var do_flash_ammo 0 1
var pistol_interrupt 0 1
var smg_extra 0 1
var smg_extra_rand 0 1


defineprojectile P_LOVERBOY PROJ_WORKSLIKE 1
defineprojectile P_LOVERBOY PROJ_SPAWNS A_SPARK1
defineprojectile P_LOVERBOY PROJ_DECAL A_BULLETHOLE
defineprojectile P_LOVERBOY PROJ_XREPEAT 4
defineprojectile P_LOVERBOY PROJ_YREPEAT 4
defineprojectile P_LOVERBOY PROJ_EXTRA WEAPON1_DMG
defineprojectile P_LOVERBOY PROJ_EXTRA_RAND WEAPON1_DMG
defineprojectile P_LOVERBOY PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_LOVERBOY PROJ_TNUM 32
defineprojectile P_LOVERBOY PROJ_TOFFSET -4
defineprojectile P_LOVERBOY PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_SHOTGUN PROJ_WORKSLIKE 1
defineprojectile P_SHOTGUN PROJ_SPAWNS A_SPARK1
defineprojectile P_SHOTGUN PROJ_DECAL A_BULLETHOLE
defineprojectile P_SHOTGUN PROJ_XREPEAT 4
defineprojectile P_SHOTGUN PROJ_YREPEAT 4
defineprojectile P_SHOTGUN PROJ_EXTRA WEAPON2_DMG
defineprojectile P_SHOTGUN PROJ_EXTRA_RAND WEAPON2_DMG
defineprojectile P_SHOTGUN PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_SHOTGUN PROJ_TNUM 24
defineprojectile P_SHOTGUN PROJ_TOFFSET -4
defineprojectile P_SHOTGUN PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_FIREBALL PROJ_WORKSLIKE 4227074
defineprojectile P_FIREBALL PROJ_SPAWNS A_SMOKE1
defineprojectile P_FIREBALL PROJ_SXREPEAT 8
defineprojectile P_FIREBALL PROJ_SYREPEAT 8
defineprojectile P_FIREBALL PROJ_XREPEAT 64
defineprojectile P_FIREBALL PROJ_YREPEAT 64
defineprojectile P_FIREBALL PROJ_EXTRA FIREBALL_DMG
defineprojectile P_FIREBALL PROJ_EXTRA_RAND 0
defineprojectile P_FIREBALL PROJ_HITRADIUS 0
defineprojectile P_FIREBALL PROJ_OFFSET 224
defineprojectile P_FIREBALL PROJ_VEL 840
defineprojectile P_FIREBALL PROJ_PAL 7
defineprojectile P_FIREBALL PROJ_SHADE -127
defineprojectile P_FIREBALL PROJ_CSTAT 642
defineprojectile P_FIREBALL PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_FIREBALL PROJ_TNUM 5
defineprojectile P_FIREBALL PROJ_TOFFSET 0
defineprojectile P_FIREBALL PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_PLASMA_BOLT PROJ_WORKSLIKE 32770
defineprojectile P_PLASMA_BOLT PROJ_SPAWNS A_SMOKE1
defineprojectile P_PLASMA_BOLT PROJ_SXREPEAT 8
defineprojectile P_PLASMA_BOLT PROJ_SYREPEAT 8
defineprojectile P_PLASMA_BOLT PROJ_XREPEAT 2
defineprojectile P_PLASMA_BOLT PROJ_YREPEAT 2
defineprojectile P_PLASMA_BOLT PROJ_EXTRA WEAPON4_DMG
defineprojectile P_PLASMA_BOLT PROJ_EXTRA_RAND 0
defineprojectile P_PLASMA_BOLT PROJ_HITRADIUS 0
defineprojectile P_PLASMA_BOLT PROJ_OFFSET 336
defineprojectile P_PLASMA_BOLT PROJ_VEL PLASMA_VEL_DEFAULT
defineprojectile P_PLASMA_BOLT PROJ_PAL PAL_PLASMA_BOLT
defineprojectile P_PLASMA_BOLT PROJ_SHADE -127
defineprojectile P_PLASMA_BOLT PROJ_CSTAT 32768
defineprojectile P_PLASMA_BOLT PROJ_TRAIL -1
defineprojectile P_PLASMA_BOLT PROJ_TNUM 1
defineprojectile P_PLASMA_BOLT PROJ_TOFFSET 0
defineprojectile P_PLASMA_BOLT PROJ_ISOUND -1
defineprojectile P_PLASMA_BOLT PROJ_BSOUND S_LAVANAIL_FLESH
defineprojectile P_PLASMA_BOLT PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is
defineprojectile P_PLASMA_BOLT PROJ_CLIPDIST 1

// spritenum of last pierced sprite
defineprojectile P_PLASMA_BOLT PROJ_USERDATA -1

defineprojectile P_SMG2 PROJ_WORKSLIKE 4227074
defineprojectile P_SMG2 PROJ_SPAWNS A_SMOKE1
defineprojectile P_SMG2 PROJ_SXREPEAT 8
defineprojectile P_SMG2 PROJ_SYREPEAT 8
defineprojectile P_SMG2 PROJ_XREPEAT 2
defineprojectile P_SMG2 PROJ_YREPEAT 2
defineprojectile P_SMG2 PROJ_EXTRA WEAPON6_DMG
defineprojectile P_SMG2 PROJ_EXTRA_RAND WEAPON6_DMG
defineprojectile P_SMG2 PROJ_HITRADIUS 0
defineprojectile P_SMG2 PROJ_OFFSET 448
defineprojectile P_SMG2 PROJ_VEL 960
defineprojectile P_SMG2 PROJ_VEL_MULT 2
defineprojectile P_SMG2 PROJ_PAL 0
defineprojectile P_SMG2 PROJ_SHADE -127
defineprojectile P_SMG2 PROJ_CSTAT 32768
defineprojectile P_SMG2 PROJ_TRAIL -1
defineprojectile P_SMG2 PROJ_TNUM 0
defineprojectile P_SMG2 PROJ_TOFFSET 0
defineprojectile P_SMG2 PROJ_ISOUND -1
defineprojectile P_SMG2 PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is
defineprojectile P_SMG2 PROJ_CLIPDIST 1

action AC_SMG2 0 1 9 1 1
spritenoshade P_SMG2
spritenopal P_SMG2
actor P_SMG2 WEAPON6_DMG AC_SMG2 enda

defineprojectile P_MINIGUN PROJ_WORKSLIKE 1
defineprojectile P_MINIGUN PROJ_SPAWNS A_SPARK1
defineprojectile P_MINIGUN PROJ_DECAL A_BULLETHOLE
defineprojectile P_MINIGUN PROJ_XREPEAT 4
defineprojectile P_MINIGUN PROJ_YREPEAT 4
defineprojectile P_MINIGUN PROJ_EXTRA WEAPON3_DMG
defineprojectile P_MINIGUN PROJ_EXTRA_RAND WEAPON3_DMG
defineprojectile P_MINIGUN PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_MINIGUN PROJ_TNUM 80
defineprojectile P_MINIGUN PROJ_OFFSET 896
defineprojectile P_MINIGUN PROJ_TOFFSET -4
defineprojectile P_MINIGUN PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_SMG PROJ_WORKSLIKE 1
defineprojectile P_SMG PROJ_SPAWNS A_SPARK1
defineprojectile P_SMG PROJ_DECAL A_BULLETHOLE
defineprojectile P_SMG PROJ_XREPEAT 4
defineprojectile P_SMG PROJ_YREPEAT 4
defineprojectile P_SMG PROJ_EXTRA WEAPON6_DMG
defineprojectile P_SMG PROJ_EXTRA_RAND WEAPON6_DMG
defineprojectile P_SMG PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_SMG PROJ_TNUM 20
defineprojectile P_SMG PROJ_OFFSET 448
defineprojectile P_SMG PROJ_TOFFSET -4
defineprojectile P_SMG PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_TURRET PROJ_WORKSLIKE 1
defineprojectile P_TURRET PROJ_SPAWNS A_SPARK1
defineprojectile P_TURRET PROJ_DECAL A_BULLETHOLE
defineprojectile P_TURRET PROJ_XREPEAT 4
defineprojectile P_TURRET PROJ_YREPEAT 4
defineprojectile P_TURRET PROJ_EXTRA TURRET_DMG
defineprojectile P_TURRET PROJ_EXTRA_RAND TURRET_DMG
defineprojectile P_TURRET PROJ_TRAIL A_GENERIC_PARTICLE
defineprojectile P_TURRET PROJ_TNUM 80
defineprojectile P_TURRET PROJ_OFFSET 896
defineprojectile P_TURRET PROJ_TOFFSET -4
defineprojectile P_TURRET PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

defineprojectile P_SHOCKER PROJ_WORKSLIKE 16
defineprojectile P_SHOCKER PROJ_SPAWNS A_SMOKE1
defineprojectile P_SHOCKER PROJ_DECAL -1
defineprojectile P_SHOCKER PROJ_XREPEAT 4
defineprojectile P_SHOCKER PROJ_YREPEAT 4
defineprojectile P_SHOCKER PROJ_EXTRA WEAPON0_DMG
defineprojectile P_SHOCKER PROJ_EXTRA_RAND 0
defineprojectile P_SHOCKER PROJ_RANGE 1024
defineprojectile P_SHOCKER PROJ_TRAIL -1
defineprojectile P_SHOCKER PROJ_TNUM 0
defineprojectile P_SHOCKER PROJ_OFFSET 14354
defineprojectile P_SHOCKER PROJ_TOFFSET 0
defineprojectile P_SHOCKER PROJ_TXREPEAT 0

// remove for demo
defineprojectile P_FLAMER PROJ_WORKSLIKE 49218
defineprojectile P_FLAMER PROJ_SPAWNS A_FIRECYCLONE
defineprojectile P_FLAMER PROJ_CLIPDIST 96
defineprojectile P_FLAMER PROJ_SXREPEAT 16
defineprojectile P_FLAMER PROJ_SYREPEAT 16
defineprojectile P_FLAMER PROJ_XREPEAT 2
defineprojectile P_FLAMER PROJ_YREPEAT 2
defineprojectile P_FLAMER PROJ_EXTRA 25
defineprojectile P_FLAMER PROJ_RANGE 22
defineprojectile P_FLAMER PROJ_EXTRA_RAND 0
defineprojectile P_FLAMER PROJ_HITRADIUS 0
defineprojectile P_FLAMER PROJ_OFFSET 336
defineprojectile P_FLAMER PROJ_VEL 640
defineprojectile P_FLAMER PROJ_PAL 0
defineprojectile P_FLAMER PROJ_SHADE 0
defineprojectile P_FLAMER PROJ_CSTAT 32768
defineprojectile P_FLAMER PROJ_TRAIL A_EXPLOSION
defineprojectile P_FLAMER PROJ_TNUM 0
defineprojectile P_FLAMER PROJ_TOFFSET 0
defineprojectile P_FLAMER PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is

spritenoshade P_BOMBETTE
defineprojectile P_BOMBETTE PROJ_WORKSLIKE 2103502 // 6350 + NOSETSHADE // 22734
defineprojectile P_BOMBETTE PROJ_SPAWNS A_EXPLOSION
defineprojectile P_BOMBETTE PROJ_SXREPEAT 8
defineprojectile P_BOMBETTE PROJ_SYREPEAT 8
defineprojectile P_BOMBETTE PROJ_XREPEAT 4
defineprojectile P_BOMBETTE PROJ_YREPEAT 4
defineprojectile P_BOMBETTE PROJ_EXTRA BOMBETTE_DMG
defineprojectile P_BOMBETTE PROJ_RANGE 90
defineprojectile P_BOMBETTE PROJ_EXTRA_RAND 0
defineprojectile P_BOMBETTE PROJ_HITRADIUS BOMBETTE_RADIUS
defineprojectile P_BOMBETTE PROJ_OFFSET 448 // 14354
defineprojectile P_BOMBETTE PROJ_PAL 73
defineprojectile P_BOMBETTE PROJ_SHADE -127
defineprojectile P_BOMBETTE PROJ_CSTAT 32768
// defineprojectile P_BOMBETTE PROJ_BOUNCES 0
defineprojectile P_BOMBETTE PROJ_BSOUND -1
defineprojectile P_BOMBETTE PROJ_VEL 800 // 292
defineprojectile P_BOMBETTE PROJ_DROP -292

defineprojectile P_GRENADE PROJ_WORKSLIKE 2190
defineprojectile P_GRENADE PROJ_SPAWNS A_EXPLOSION
defineprojectile P_GRENADE PROJ_SXREPEAT 32
defineprojectile P_GRENADE PROJ_SYREPEAT 32
defineprojectile P_GRENADE PROJ_XREPEAT 16
defineprojectile P_GRENADE PROJ_YREPEAT 16
defineprojectile P_GRENADE PROJ_EXTRA GRENADE_DMG
defineprojectile P_GRENADE PROJ_EXTRA_RAND 0
defineprojectile P_GRENADE PROJ_HITRADIUS GRENADE_RADIUS
defineprojectile P_GRENADE PROJ_OFFSET 224 // 14354
defineprojectile P_GRENADE PROJ_PAL 0
defineprojectile P_GRENADE PROJ_SHADE 0
defineprojectile P_GRENADE PROJ_CSTAT 32768
defineprojectile P_GRENADE PROJ_TRAIL -1
defineprojectile P_GRENADE PROJ_BOUNCES 3
defineprojectile P_GRENADE PROJ_BSOUND S_GRENADE_BOUNCE
defineprojectile P_GRENADE PROJ_VEL 512
defineprojectile P_GRENADE PROJ_DROP -292
defineprojectile P_GRENADE PROJ_CLIPDIST 1

defineprojectile A_SHELL1 PROJ_WORKSLIKE 2136206 // 39054 + NOSETSHADE // 2190
defineprojectile A_SHELL1 PROJ_SPAWNS -1
defineprojectile A_SHELL1 PROJ_SXREPEAT 4
defineprojectile A_SHELL1 PROJ_SYREPEAT 4
defineprojectile A_SHELL1 PROJ_XREPEAT 4
defineprojectile A_SHELL1 PROJ_YREPEAT 4
defineprojectile A_SHELL1 PROJ_EXTRA 0
defineprojectile A_SHELL1 PROJ_EXTRA_RAND 0
defineprojectile A_SHELL1 PROJ_HITRADIUS 0
defineprojectile A_SHELL1 PROJ_OFFSET 672 // 14354
defineprojectile A_SHELL1 PROJ_PAL 0
defineprojectile A_SHELL1 PROJ_SHADE 0
defineprojectile A_SHELL1 PROJ_CSTAT 32768
defineprojectile A_SHELL1 PROJ_TRAIL -1
defineprojectile A_SHELL1 PROJ_BOUNCES 2
defineprojectile A_SHELL1 PROJ_BSOUND -1
defineprojectile A_SHELL1 PROJ_VEL 32
defineprojectile A_SHELL1 PROJ_DROP -180


defineprojectile A_COIN1 PROJ_WORKSLIKE 2136206 // 39054 + NOSETSHADE // 2190
defineprojectile A_COIN1 PROJ_SPAWNS -1
defineprojectile A_COIN1 PROJ_SXREPEAT 4
defineprojectile A_COIN1 PROJ_SYREPEAT 4
defineprojectile A_COIN1 PROJ_XREPEAT 4
defineprojectile A_COIN1 PROJ_YREPEAT 3
defineprojectile A_COIN1 PROJ_EXTRA 0
defineprojectile A_COIN1 PROJ_EXTRA_RAND 0
defineprojectile A_COIN1 PROJ_HITRADIUS 0
defineprojectile A_COIN1 PROJ_OFFSET 14354
defineprojectile A_COIN1 PROJ_PAL 0
defineprojectile A_COIN1 PROJ_SHADE 0
defineprojectile A_COIN1 PROJ_CSTAT 32768
defineprojectile A_COIN1 PROJ_TRAIL -1
defineprojectile A_COIN1 PROJ_BOUNCES 5
defineprojectile A_COIN1 PROJ_BSOUND S_SHELLY_COINLAND
defineprojectile A_COIN1 PROJ_VEL 32
defineprojectile A_COIN1 PROJ_DROP -180

action AC_COIN_TUMBLE 0 8 1 1 1

actor A_COIN1 0 AC_COIN_TUMBLE enda

defineprojectile P_NAPALM_BALL PROJ_WORKSLIKE 2190
defineprojectile P_NAPALM_BALL PROJ_SPAWNS A_NAPALM_BURST
defineprojectile P_NAPALM_BALL PROJ_SXREPEAT 32
defineprojectile P_NAPALM_BALL PROJ_SYREPEAT 32
defineprojectile P_NAPALM_BALL PROJ_XREPEAT 32
defineprojectile P_NAPALM_BALL PROJ_YREPEAT 28
defineprojectile P_NAPALM_BALL PROJ_EXTRA NAPALM_BALL_DMG
defineprojectile P_NAPALM_BALL PROJ_EXTRA_RAND 0
defineprojectile P_NAPALM_BALL PROJ_HITRADIUS NAPALM_BALL_RADIUS
defineprojectile P_NAPALM_BALL PROJ_OFFSET 224 // 14354
defineprojectile P_NAPALM_BALL PROJ_PAL 0
defineprojectile P_NAPALM_BALL PROJ_SHADE -127
defineprojectile P_NAPALM_BALL PROJ_CSTAT 32768
defineprojectile P_NAPALM_BALL PROJ_TRAIL -1
defineprojectile P_NAPALM_BALL PROJ_BOUNCES 5
defineprojectile P_NAPALM_BALL PROJ_BSOUND S_STEP_DIRT_JUMP1
defineprojectile P_NAPALM_BALL PROJ_VEL 480
defineprojectile P_NAPALM_BALL PROJ_DROP -292
defineprojectile P_NAPALM_BALL PROJ_CLIPDIST 1
spritenoshade P_NAPALM_BALL

defineprojectile P_FLAMINGSKULL PROJ_WORKSLIKE 2
defineprojectile P_FLAMINGSKULL PROJ_SPAWNS A_NAPALM_BURST
defineprojectile P_FLAMINGSKULL PROJ_SXREPEAT 64
defineprojectile P_FLAMINGSKULL PROJ_SYREPEAT 64 
defineprojectile P_FLAMINGSKULL PROJ_XREPEAT 32
defineprojectile P_FLAMINGSKULL PROJ_YREPEAT 28
defineprojectile P_FLAMINGSKULL PROJ_EXTRA FLAMINGSKULL_DMG
defineprojectile P_FLAMINGSKULL PROJ_EXTRA_RAND 3
defineprojectile P_FLAMINGSKULL PROJ_HITRADIUS FLAMINGSKULL_RADIUS
defineprojectile P_FLAMINGSKULL PROJ_OFFSET 14354
defineprojectile P_FLAMINGSKULL PROJ_PAL 0
defineprojectile P_FLAMINGSKULL PROJ_SHADE -127
defineprojectile P_FLAMINGSKULL PROJ_CSTAT 32768
defineprojectile P_FLAMINGSKULL PROJ_TRAIL A_EXPLOSION
defineprojectile P_FLAMINGSKULL PROJ_TOFFSET 0
defineprojectile P_FLAMINGSKULL PROJ_TNUM 1
defineprojectile P_FLAMINGSKULL PROJ_TXREPEAT 8
defineprojectile P_FLAMINGSKULL PROJ_TYREPEAT 8
defineprojectile P_FLAMINGSKULL PROJ_VEL 512
defineprojectile P_FLAMINGSKULL PROJ_DROP 0
defineprojectile P_FLAMINGSKULL PROJ_CLIPDIST 16
defineprojectile P_FLAMINGSKULL PROJ_ISOUND S_FLAMESKULL_HIT_1
spritenoshade P_FLAMINGSKULL
spritenopal P_FLAMINGSKULL

defineprojectile P_DANCINGQUEEN PROJ_WORKSLIKE 4227074
defineprojectile P_DANCINGQUEEN PROJ_SPAWNS A_SMOKE2
defineprojectile P_DANCINGQUEEN PROJ_SXREPEAT 8
defineprojectile P_DANCINGQUEEN PROJ_SYREPEAT 8
defineprojectile P_DANCINGQUEEN PROJ_XREPEAT 8
defineprojectile P_DANCINGQUEEN PROJ_YREPEAT 8
defineprojectile P_DANCINGQUEEN PROJ_EXTRA DANCINGQUEEN_DMG
defineprojectile P_DANCINGQUEEN PROJ_EXTRA_RAND 0
defineprojectile P_DANCINGQUEEN PROJ_HITRADIUS 0
defineprojectile P_DANCINGQUEEN PROJ_OFFSET -14354
defineprojectile P_DANCINGQUEEN PROJ_VEL 512
defineprojectile P_DANCINGQUEEN PROJ_PAL PAL_DANCINGQUEEN
defineprojectile P_DANCINGQUEEN PROJ_SHADE -127
defineprojectile P_DANCINGQUEEN PROJ_CSTAT 32768
defineprojectile P_DANCINGQUEEN PROJ_TRAIL -1
defineprojectile P_DANCINGQUEEN PROJ_TNUM 1
defineprojectile P_DANCINGQUEEN PROJ_TOFFSET 0
defineprojectile P_DANCINGQUEEN PROJ_ISOUND S_IMPACT_PLASMABOW
defineprojectile P_DANCINGQUEEN PROJ_TXREPEAT 127 // This is a hack to tell the actor which particle it is
defineprojectile P_DANCINGQUEEN PROJ_CLIPDIST 1
spritenoshade P_DANCINGQUEEN
spritenopal P_DANCINGQUEEN

defineprojectile P_ACIDYSPIT PROJ_WORKSLIKE 4229262
defineprojectile P_ACIDYSPIT PROJ_SPAWNS A_ACIDYSPIT_SPLASH
defineprojectile P_ACIDYSPIT PROJ_SXREPEAT 18
defineprojectile P_ACIDYSPIT PROJ_SYREPEAT 16
defineprojectile P_ACIDYSPIT PROJ_XREPEAT 32
defineprojectile P_ACIDYSPIT PROJ_YREPEAT 28
defineprojectile P_ACIDYSPIT PROJ_EXTRA 0
defineprojectile P_ACIDYSPIT PROJ_EXTRA_RAND 0
defineprojectile P_ACIDYSPIT PROJ_HITRADIUS 0
defineprojectile P_ACIDYSPIT PROJ_OFFSET 14354
defineprojectile P_ACIDYSPIT PROJ_PAL 0
defineprojectile P_ACIDYSPIT PROJ_SHADE -127
defineprojectile P_ACIDYSPIT PROJ_CSTAT 32768
defineprojectile P_ACIDYSPIT PROJ_TRAIL A_ACIDYSPIT_TRAIL
defineprojectile P_ACIDYSPIT PROJ_BOUNCES 1
defineprojectile P_ACIDYSPIT PROJ_BSOUND S_STEP_DIRT_JUMP1
defineprojectile P_ACIDYSPIT PROJ_VEL 480
defineprojectile P_ACIDYSPIT PROJ_DROP -292
defineprojectile P_ACIDYSPIT PROJ_CLIPDIST 80
spritenoshade P_ACIDYSPIT
spritenoshade A_ACIDYSPIT_TRAIL

defineprojectile P_MINIMISSILE PROJ_WORKSLIKE 2
defineprojectile P_MINIMISSILE PROJ_SPAWNS A_EXPLOSION
defineprojectile P_MINIMISSILE PROJ_SXREPEAT 8
defineprojectile P_MINIMISSILE PROJ_SYREPEAT 8
defineprojectile P_MINIMISSILE PROJ_XREPEAT 8
defineprojectile P_MINIMISSILE PROJ_YREPEAT 6
defineprojectile P_MINIMISSILE PROJ_EXTRA MINIMISSILE_DMG
defineprojectile P_MINIMISSILE PROJ_EXTRA_RAND 8
defineprojectile P_MINIMISSILE PROJ_HITRADIUS 1024
defineprojectile P_MINIMISSILE PROJ_OFFSET 14354
defineprojectile P_MINIMISSILE PROJ_PAL 28
defineprojectile P_MINIMISSILE PROJ_SHADE 0
defineprojectile P_MINIMISSILE PROJ_CSTAT 128
defineprojectile P_MINIMISSILE PROJ_TRAIL A_SMOKE2
defineprojectile P_MINIMISSILE PROJ_TOFFSET 0
defineprojectile P_MINIMISSILE PROJ_TXREPEAT 2
defineprojectile P_MINIMISSILE PROJ_TYREPEAT 2
defineprojectile P_MINIMISSILE PROJ_VEL 480
defineprojectile P_MINIMISSILE PROJ_CLIPDIST 1

defineprojectile P_PUCK_THROWN PROJ_WORKSLIKE 2190
defineprojectile P_PUCK_THROWN PROJ_SPAWNS A_EXPLOSION
defineprojectile P_PUCK_THROWN PROJ_SXREPEAT 48
defineprojectile P_PUCK_THROWN PROJ_SYREPEAT 48
defineprojectile P_PUCK_THROWN PROJ_XREPEAT 7
defineprojectile P_PUCK_THROWN PROJ_YREPEAT 6
defineprojectile P_PUCK_THROWN PROJ_EXTRA 0
defineprojectile P_PUCK_THROWN PROJ_EXTRA_RAND 0
defineprojectile P_PUCK_THROWN PROJ_HITRADIUS 0
defineprojectile P_PUCK_THROWN PROJ_OFFSET 14354
defineprojectile P_PUCK_THROWN PROJ_PAL 21
defineprojectile P_PUCK_THROWN PROJ_SHADE 0
defineprojectile P_PUCK_THROWN PROJ_CSTAT 32768 // 384
defineprojectile P_PUCK_THROWN PROJ_TRAIL -1
defineprojectile P_PUCK_THROWN PROJ_BOUNCES 1
defineprojectile P_PUCK_THROWN PROJ_BSOUND -1
defineprojectile P_PUCK_THROWN PROJ_VEL 512
defineprojectile P_PUCK_THROWN PROJ_DROP -128
defineprojectile P_PUCK_THROWN PROJ_CLIPDIST 1

defineprojectile P_DART PROJ_WORKSLIKE 34958
defineprojectile P_DART PROJ_SPAWNS -1
defineprojectile P_DART PROJ_SXREPEAT 32
defineprojectile P_DART PROJ_SYREPEAT 32
defineprojectile P_DART PROJ_XREPEAT 13
defineprojectile P_DART PROJ_YREPEAT 12
defineprojectile P_DART PROJ_EXTRA 10
defineprojectile P_DART PROJ_EXTRA_RAND 0
defineprojectile P_DART PROJ_HITRADIUS 0
defineprojectile P_DART PROJ_OFFSET 14354 // 14354
defineprojectile P_DART PROJ_PAL 0
defineprojectile P_DART PROJ_SHADE 0
defineprojectile P_DART PROJ_CSTAT 32768
defineprojectile P_DART PROJ_TRAIL -1
defineprojectile P_DART PROJ_BOUNCES 1
defineprojectile P_DART PROJ_BSOUND S_BULLET_WOOD1
defineprojectile P_DART PROJ_VEL 512
defineprojectile P_DART PROJ_DROP -256
defineprojectile P_DART PROJ_CLIPDIST 1

action AC_FLAMINGSKULL_LIGHT 0 9 5 1 1

actor P_FLAMINGSKULL FLAMINGSKULL_DMG AC_FLAMINGSKULL_LIGHT enda

eventloadactor P_BOWLINGBOMB
    seta[].cstat 32768
enda
appendevent EVENT_SPAWN
    ifactor P_BOWLINGBOMB
        cstat 32768
endevent

appendevent EVENT_EGS
    ifactor P_BOWLINGBOMB
        cstat 32768
    else ifactor P_SMOKE2
        cstat 32768
    else ifactor A_SMOKE2
        cstat 32768
endevent

action AC_BOWLINGBOMB_ROLL 0 14 1 1 2 // 14 frames for bowlingbomb
action AC_BOWLINGBOMB_ROLL2 0 14 1 1 6
action AC_BOWLINGBOMB_ROLL3 0 14 1 1 8
action AC_BOWLINGBOMB_ROLL4 0 14 1 1 12
action AC_BOWLINGBOMB_ROLL5 0 14 1 1 32
action AC_BOWLINGBOMB_IDLE 14 1 7 1 1

action AC_GRENADE 0 8 5 1 70
action AC_GRENADE_TUMBLE 0 8 5 1 7

action AC_PUCK_SPIN 0 4 1 1 1
action AC_PUCK_SPIN_LIT 301 4 1 1 1
actor P_PUCK_THROWN GRENADE_DMG AC_PUCK_SPIN_LIT enda

defstate update_ammotype
	set p_prevammotype p_usedammotype
	set press_alt 20
	set p_extra_ammo_menu_on 0
	add temp 1
	set p_forcedammoswitch temp
ends

defstate check_and_do_disperser_reload
	set temp2 0
	ifg p_grenades 0
		or temp2 1
	ifg p_explosiveshells 0
		or temp2 2
	ifg player.ammo_amount WEAPON_SHOTGUN 0 ifn p_ammohack 1
		or temp2 4
	
	ifn temp2 0 {
		setp .weaponswitch 0
		// this below line caused the weapon to show the shotgun while lowering instead of the prev weapon
		// I'm leaving this as a note to myself
		//setp .last_weapon -1
		
		// enable ammo_hack only if we ran out of ammo on main ammo
		ifand temp2 4
			nullop
		else {
			set p_ammohack 1
			setp .ammo_amount WEAPON_SHOTGUN AM_AMMOHACK_VAL
		}
		
		// replace with some cycling algorithm later that shifts bits to check maybe, idk
		ife p_usedammotype AM_AMMOTYPE_NORMALSHELL {
			ifand temp2 1
				set temp AM_AMMOTYPE_GRENADE
			else ifand temp2 2
				set temp AM_AMMOTYPE_EXPLOSIVESHELL
		}
		else ife p_usedammotype AM_AMMOTYPE_GRENADE {
			ifand temp2 4
				set temp AM_AMMOTYPE_NORMALSHELL
			else ifand temp2 2
				set temp AM_AMMOTYPE_EXPLOSIVESHELL
		}
		else ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL {
			ifand temp2 4
				set temp AM_AMMOTYPE_NORMALSHELL
			else ifand temp2 1
				set temp AM_AMMOTYPE_GRENADE
		}
			
		state update_ammotype
	}
ends

defstate skip_reload
    ife weapon_switch_skip_reload 1
    {
        ife player.reloading 1
        {
            setp .reloading 0
            setp .kickback_pic 0
        }
    }
ends

defstate do_idle_pal
    set hudx_shade hud_weapon_shade
    set hudx_temp10 player.cursectnum
    ife hudx_temp10 -1
        set hudx_temp10 p_goodsect
    ifn sector[hudx_temp10].floorpal 0
        ifn paldata[sector[hudx_temp10].floorpal].nofloorpal 1
            set hudx_pal sector[hudx_temp10].floorpal
ends

defstate get_q16ang_diff // fills temp2
    getp .q16ang temp2
    sub temp2 p_oq16ang

    ifg temp2 67108864
        sub temp2 134217728
    else ifl temp2 -67108864
        add temp2 134217728
ends
defstate get_q16horiz_diff // fills temp2
    getp .q16horiz temp2
    sub temp2 p_oq16horiz
ends
defstate set_q16ang_diff // fills temp3, temp2
    set temp3 p_oq16ang
    add temp3 temp2
    setp .q16ang temp3
ends
defstate set_q16horiz_diff // fills temp3, temp2
    set temp3 p_oq16horiz
    add temp3 temp2
    setp .q16horiz temp3
ends

defstate grab_puck
        ife player[].gotweapon WEAPON_LAM 0
        {
            set p_face_grin 30
            set myfavoriteguns 1
            or p_wantline TALK_BOMB
        }
        addweapon WEAPON_LAM 1
        quote 139
        palfrom 15 5 32 5
        globalsound S_BBOMB_THROW
        globalsound S_BBOMB_LAND
        getp .sound_pitch temp
        setp .sound_pitch 480
        globalsound S_SHOTGUN_OPENCLOSE
        setp .sound_pitch temp
        killit
ends

defstate puck_radius_shared
    set temp6 GRENADE_RADIUS
    
    set temp7 GRENADE_DMG
    shiftr temp7 2

    set temp8 GRENADE_DMG
    shiftr temp8 1

    set temp9 GRENADE_DMG
    
    ifand se_yvel 2
    {
        shiftl temp6 1
        shiftr temp7 2
        shiftr temp8 2
        shiftr temp9 2
    }
    else shiftr temp6 1
    
    sub temp9 temp7

    hitradiusvar temp6 temp7 temp8 temp9 GRENADE_DMG
ends

defstate clear_weapon_charges
    ife player[].curr_weapon 5
        setp[].kickback_pic 0
    else ife player[].curr_weapon 7 ifl player.kickback_pic 38
        setp[].kickback_pic 0
ends

action AC_PUCK_IDLE 0 1 9 1 1
action AC_PUCK_IDLE_LIT 288 1 9 1 1

// must be placed here due to dependencies
include scripts/base/subroutines_weapons.con
include scripts/exp/weapons.con

// used below, inside the above script, the functions are used directly
defstate noweapon
    ifn exp_aftershock 0
        state ashock_noweapon
    else
        state fury_noweapon
ends

spritenoshade P_PUCK_PLACED
useractor notenemy P_PUCK_PLACED GRENADE_DMG AC_PUCK_IDLE
    ifaction AC_PUCK_IDLE
        nullop
    else
        action AC_PUCK_IDLE
    sizeat 5 4
    cstat 384
    clipdist 16
    set temp 0
    ife sprite.htowner player.i
    {
        set actor_switch 1
        cstator 512
        ifhitspace
        {
            ifpdistl RETRIEVEDISTANCE ife actor_switch_usable 1 ifactioncount 3
                state grab_puck
            resetactioncount
        }
        set actor_switch_usable 0
    }
    else ifspritepal 15
        or se_yvel 2
    else ifspritepal 172
        or se_yvel 2
    else ifspritepal 170
        nullop
    else
        spritepal 21
    
    
    ifn sprite.sectnum -1
    {
        ifoutside            
            set temp sector.ceilingshade
        else
            set temp sector.floorshade
    }
    ifl counter2 30
    {
        add temp 4
        clamp temp -127 127
        seta .shade temp
        add counter2 1
        break
    }
    else
    {
        ifaction AC_PUCK_IDLE_LIT
            nullop
        else
            action AC_PUCK_IDLE_LIT
        ifspritepal 15
            spritepal 172
        else ifn sprite.pal 172
            spritepal 170
        add counter3 1
        mod counter3 30
        ife counter3 1
            sound S_PUCK_BEEP
        ifl temp 4
            set temp 4
        ife counter3 1
            sub temp 4
        clamp temp -127 127
        seta .shade temp
    }
    
    set temp7 0
    for itervar range num_flag32
    {
        set temp gameflag32[itervar]
        ifg sprite[temp].extra 0
        {
            dist temp2 THISACTOR temp
            ifl temp2 1024
            {
                setav[temp].enemy_init 1
                set temp7 1
                changespritestat temp STAT_ACTOR
            }
        }
    }
    ifn sprite.htowner player.i
        ifpdistl 1024
            set temp7 1
    ifhitweapon
    {
        strength GRENADE_DMG
        set temp7 1
    }    
	ife temp7 1
    {
        espawn A_EXPLOSION
        seta[RETURN].xrepeat 48
        seta[RETURN].yrepeat 48
        seta[RETURN].cstat 32768

        state puck_radius_shared

        //ifand se_yvel 2
        {
            set temp7 16
            ifand se_yvel 2
                shiftl temp7 1
        
            for itervar range temp7
            {
                rand temp3 2047
                seta .ang temp3
                rand temp3 4096
                ifrnd 127
                    inv temp3
                ezshoot temp3 P_BOMBETTE
                ifand se_yvel 2
                    setav[RETURN] .se_xvel 2
            }
        }
        killit
    }
enda

spritenoshade P_MINIMISSILE
action AC_MINIMISSILE_9 0 1 9 1 1
actor P_MINIMISSILE 32 AC_MINIMISSILE_9 enda

appendevent EVENT_SPAWN
    switch sprite[].picnum
        case A_ACIDYSPIT_TRAIL
        case A_ACIDYSPIT_SPLASH
            sizeat 16 18
            seta[].blend 129
            spritepal 5
            cstat 130
            break
        case A_ACID_POOL
            ifspawnedby A_ACIDYSPIT_SPLASH
            {
                sizeat 12 12
                seta[].blend 129
                spritepal 5
                cstat 34
                seta[].shade 0
            }
            else
                changespritestat THISACTOR STAT_DEFAULT
            break
    endswitch
endevent
action AC_ACIDYSPRAY1 0 5 1 1 4
action AC_ACIDYSPRAY2 5 5 1 1 4
useractor notenemy A_ACIDYSPIT_TRAIL 0
    ifaction 0
    {
        ifrnd 127
            action AC_ACIDYSPRAY2
        else
            action AC_ACIDYSPRAY1
        ifrnd 64
            cstator 8
        ifrnd 64
            cstator 4
    }
    geta[].xrepeat temp
    add temp 1
    seta[].xrepeat temp
    geta[].yrepeat temp
    add temp 1
    seta[].yrepeat temp
    ifactioncount 5
        killit
enda

action AC_ACIDYSPLASH1 0 5 1 1 1
useractor notenemy A_ACIDYSPIT_SPLASH 0 AC_ACIDYSPLASH1
    cstat 2
    fall
    iffloordistl 1
    {
        ife st_do_once 0
        {
            findnearactor A_ACID_POOL 256 temp
            ife temp -1
                spawn A_ACID_POOL
            else ifspawnedby A_DIOPEDE_HEAD
                spawn A_ACID_POOL
            else ifspawnedby A_DIOPEDE_BUTT
                spawn A_ACID_POOL
            set st_do_once 1
        }
    }
    
    ifactioncount 10
        killit
enda

action AC_ACID_POOL1 0 1 1 1 1
action AC_ACID_POOL2 1 1 1 1 1
action AC_ACID_POOL3 2 1 1 1 1

spritenoshade A_ACID_POOL
useractor notenemy A_ACID_POOL 0
    fall
    getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
    seta[].z temp
    ifaction 0
    {
        ifrnd 96
            action AC_ACID_POOL3
        else ifrnd 96
            action AC_ACID_POOL2
        else
            action AC_ACID_POOL1
		stopsound S_P_SIZZLE
        sound S_P_SIZZLE
    }
    ifle sprite[].htg_t 2 8
    {
        geta[].xrepeat temp
        add temp 1
        seta[].xrepeat temp
        seta[].yrepeat temp
    }
    else ifge sprite[].htg_t 2 64
    {
        geta[].xrepeat temp
        ifge sprite[].shade 16
        {
            ifand sprite[].htg_t 2 1
                sub temp 1
        }
        seta[].xrepeat temp
        seta[].yrepeat temp
        geta[].shade temp
        add temp 1
        seta[].shade temp
        ifge temp 24
            killit
    }
    ife sprite[].htg_t 2 1
    {
        espawn A_SMOKE2
        seta[RETURN].xrepeat 8
        seta[RETURN].yrepeat 8
    }
    else ife sprite[].htg_t 2 32
    {
        espawn A_SMOKE2
        seta[RETURN].xrepeat 2
        seta[RETURN].yrepeat 2
    }
    ife p_hazard_amount 0
    {
        ifpdistl 800
        {
            ifrnd 28
            {
                ifp palive
                {
                    ifcansee
                    {
                        soundonce S_SHELLY_BREATH2
                        addphealth -1
                        seta[player[].i].htpicnum P_ACIDYSPIT
                    }
                }
            }
        }
    }
    else
    {
        ifpdistl 800
            ifrnd 28
                ifp palive
                    ifcansee
                        actorsound player.i S_ITEM_HAZMAT_GEIGER
    }
enda

spriteshadow P_GRENADE
actor P_GRENADE GRENADE_DMG AC_GRENADE
enda

action AC_SHELL_IDLE 0 1 5 1 1
action AC_SHELL_TUMBLE 0 8 5 1 7

var shell_shot 0 2
var shell_skip 0 2
actor A_SHELL1 0 AC_SHELL_TUMBLE
    ife shell_shot 1
        sizeat 8 8
    else
        sizeat 4 4
    geta[].htflags temp
    or temp 2048
    seta[].htflags temp
    clipdist 6
    ife st_do_once 0
    {
        ife se_zvel 32767
            killit
        else
        {
            set queued 1
            insertspriteq
        }
        set st_do_once 1
    }
    iffloordistl 1
        add shell_skip 1
    else
        add shell_skip 2
    ifge shell_skip 4
        set shell_skip 0
    else
        break
    ife counter 0
    {
        action AC_SHELL_IDLE
        set counter 1
        seta[].xvel 0
        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
        ifn temp -1
            seta[].sectnum temp
    }
    else ifaction AC_SHELL_TUMBLE
    {
        ifge sprite[].zvel 0
        {
            seta[].yvel 2
            set counter 0
            changespritestat THISACTOR STAT_PROJECTILE
        }
    }
    fall
    set temp6 0
    ifg sprite[].zvel 0
    {
        ifn se_extra 0
            set se_extra 0
    }
    else ifn se_extra 0
        set temp6 1
    ifinwater
        ifle sprite.zvel 0
        {
            geta .zvel temp2
            add temp2 GRAVITATIONALCONSTANT
            seta .zvel temp2
        }
    iffloordistl 1 ife se_extra 0
    {
        for temp spritesofsector sprite[].sectnum
        {
            ifand sprite[temp].cstat 32
            {
                ifand sprite[temp].cstat 1
                {
                    ifle sprite[].z sprite[temp].z
                    {
                        set temp2 sprite[temp].z
                        sub temp2 256
                        ifge temp2 sprite[].z
                        {
                            set temp6 1
                            set se_extra 1
                        }
                    }
                }
            }
        }
    }
    ife sprite[].xvel 0
    {
        ife sprite[].zvel 0 ifl se_xvel 10
            add se_xvel 1
        else
            set se_xvel 0
    }
    else
        set se_xvel 0
    ifge se_xvel 10
        set temp6 1
    ife temp6 0
    {
        getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
        sub temp 512
        ifand sector[].floorstat 2
        {
            gets[].floorslope temp2
            abs temp2
            ifg temp2 8192
                add temp 512
        }
        ifl sprite[].z temp ife sprite[].zvel 0
        {
            gets[].wallptr temp
            getw[temp].x temp2
            getw[temp].y temp3
            getw[temp].point2 temp4
            getw[temp4].x temp5
            getw[temp4].y temp6
            sub temp2 temp5
            sub temp3 temp6
            getangle temp temp2 temp3
            add temp 1536
            ifl sector[].floorslope 0
                add temp 1024
            rand temp2 128
            ifrnd 127
                inv temp2
            add temp temp2
            and temp 2047
            geta[].ang temp2
            seta[].ang temp
            seta[].xvel 100
            ssp THISACTOR 0
            seta[].ang temp2
        }
    }
    ifn sprite[].xvel 0
    {
        geta[].xvel temp
        shiftr temp 1
        seta[].xvel temp
    }
    geta[].htextra temp
    cstat 256
    strength 0
    ifhitweapon
    {
        geta[].htang temp2
        seta[].ang temp2
        seta[].xvel temp
        ifg temp 0
            inv temp
        shiftl temp 1
        seta[].zvel temp
        action AC_SHELL_TUMBLE
    }
/*
    ifrnd 127
    {
        geta .sectnum temp2
        updatesectorz sprite.x sprite.y sprite.z temp2
        ifn temp2 -1
            seta .sectnum temp2
    }
*/
    ssp THISACTOR 6
enda

spritenoshade P_PLASMA_BOLT
action AC_PLASMA_FLY 0 1 5 1 1
actor P_PLASMA_BOLT WEAPON4_DMG AC_PLASMA_FLY enda

var last_yvel 0 2

appendevent EVENT_SPAWN
    switch sprite[].picnum
        case A_NAPALM_FLAME
            cstat 2
            rand temp7 1
            add temp7 7
            ifspawnedby A_SMOKE1
            {
                sub temp7 3
                geta[].z temp
                add temp 256
                seta[].z temp
            }
            seta[].yrepeat temp7
            ifspawnedby A_NAPALM_BURST
                add temp7 3
            seta[].xrepeat temp7
          //  spritepal 4
            seta[].blend 129
            seta[].shade -127
            ifrnd 127
                cstator 4
            break
        case A_NAPALM_BURST
            rand temp7 5
            add temp7 27
            seta[].xrepeat temp7
            seta[].yrepeat temp7
          //  spritepal 4
            cstat 130
            seta[].blend 129
            seta[].shade -127
            break
    endswitch
endevent
spritenoshade A_NAPALM_FLAME
spritenoshade A_NAPALM_BURST
spritenopal A_NAPALM_FLAME
spritenopal A_NAPALM_BURST
action AC_NAPALM_FLAMEON 0 10 1 1 1
useractor notenemy A_NAPALM_FLAME 0 AC_NAPALM_FLAMEON
    ifspawnedby A_PARTICLE_SPAWNER
    {
        ifand sprite.cstat 32768
            cstat 2
    }
    ifawayfromwall fall
    ifvare shell_shot 1
    {
        fall
        geta .shade temp
        ife temp -127
            set temp -5
        add temp 1
        clamp temp -127 127
        seta .shade temp
    }
    else ifrnd 32 set shell_shot 1
    ifge counter 25
    {
        ifspawnedby A_NAPALM_BURST
        {
            geta[].xrepeat temp
            sub temp 1
            ife temp 0
                killit
            else
            {
                seta[].xrepeat temp
                geta[].yrepeat temp
                sub temp 1
                ife temp 0
                    killit
                else
                    seta[].yrepeat temp
            }
            geta[].cstat temp
            ifand temp 4
                xor temp 4
            else
                or temp 4
            seta[].cstat temp
        }
        else
        {
            geta[].xrepeat temp
            sub temp 1
            ife temp 0
                killit
            else
            {
                seta[].xrepeat temp
                seta[].yrepeat temp
            }
        }
    }
    
    ifspawnedby A_NAPALM_BURST
    {
        geta[].xvel temp
        shiftr temp 1
        seta[].xvel temp
        geta[].zvel temp
        ssp THISACTOR 0
        seta[].zvel temp
        fall
        ifrnd 28
        {
            ifpdistl 640
            {
                ifp palive
                {
                    ifcansee
                    {
                        soundonce S_SHELLY_BREATH2
                        addphealth -1
                    }
                }
            }
        }
    }
    else ifspawnedby A_ARCHANGEL
    {
        geta[].xvel temp
        shiftr temp 1
        seta[].xvel temp
        geta[].zvel temp
        ssp THISACTOR 0
        seta[].zvel temp
        fall
        ifrnd 28
        {
            ifpdistl 640
            {
                ifp palive
                {
                    ifcansee
                    {
                        soundonce S_SHELLY_BREATH2
                        addphealth -1
                    }
                }
            }
        }
    }
    else ifrnd 28
    {
        ifpdistl 640
        {
            ifp palive
            {
                ifcansee
                {
                    soundonce S_SHELLY_BREATH2
                    addphealth -1
                }
            }
        }
    }
    add counter 1
enda

action AC_NAPALM_BURSTING 0 6 1 1 4
useractor notenemy A_NAPALM_BURST 0 AC_NAPALM_BURSTING
    ifn exp_aftershock 0
        state ashock_a_napalm_burst
    else
        state fury_a_napalm_burst
enda

appendevent EVENT_EGS
    switch sprite[].picnum
        case 2390
        case 2391
        case 2392
        case 2393
        case 2394
        case 2395
        case 2396
        case 2397
            seta[].xrepeat 0
            changespritestat THISACTOR STAT_ACTOR
            break
     endswitch
endevent


action AC_DART 0 1 9 1 1
action AC_DART_PICKUP -1 1 9 1 1
actor P_DART 10 AC_DART
    ife counter3 0
        fall
    set actor_switch 1
    cstator 512
    geta .cstat temp
    ifand temp 16
        xor temp 16
    else ifand temp 32
        xor temp 32
    seta .cstat temp
    ifn ref_hitsect -1
    {
        set temp ref_hitx
        sub temp sprite.x
        mul temp temp
        
        set temp2 ref_hity
        sub temp2 sprite.y
        mul temp2 temp2
        
        add temp temp2
        sqrt temp temp
        abs temp
        ifle temp 64
        {
            set temp ref_hitz
            sub temp sprite.z
            abs temp
            ifl temp 512
                set actor_switch_usable 1
        }
        
    }
 /*   ife se_above 1 // this breaks shit... so nevermind, but for posterity
    {
        set se_above 0
        geta .ang temp
        add temp 1024
        and temp 2047
        seta .ang temp
        seta .xvel 16
        ssp THISACTOR 0
        add temp 1024
        and temp 2047
        seta .ang temp
        seta .xvel 0
    } */
    ifhitspace
    {
        ife p_have_dart 0 ife player.kickback_pic 0
        {
            ifpdistl 1536 ife actor_switch_usable 1 ifactioncount 2
            {
                set p_have_dart 1
                set p_dart_pal sprite.pal
                palfrom 15 5 32 5
                globalsound S_BBOMB_THROW
                killit
            }
        }
        ifpdistl 2048 ife actor_switch_usable 0
        {
            ifp pfacing
                nullop
            else
                resetactioncount
        }
    }
    set actor_switch_usable 0
enda

eventloadactor A_DART
    ifand sprite.cstat 16
        set counter3 1
enda

actor A_DART 10 AC_DART
    geta .ang temp
    add temp 512
    and temp 2047
    seta .ang temp
    cactor P_DART
enda

useractor notenemy 10975 0
    cstator 128
    cstator 257
    sizeat 24 24
    ifawayfromwall
        nullop
    else ifand sprite.cstat 16
    {
        seta .xvel 16
        ssp THISACTOR 0
    }
    changespritestat THISACTOR STAT_DEFAULT
enda

defstate weapon_projectiles
        geta[temp].picnum temp2
        switch temp2
            case P_DART
                setu[].vm_sprite temp
                setu .vm_player myconnectindex
                add counter 1
                ifg counter 1
                {
                    ife counter 3
                        cstat 128
                }
                else
                {
                    geta .z temp3
                    sub temp3 512
                    seta .z temp3
                    geta .zvel temp3
                    sub temp3 1024
                    seta .zvel temp3
                    geta .ang counter2
                }
                geta .xvel temp3
                ifg temp3 256
                {
                    sub temp3 16
                    seta .xvel temp3
                }
                set temp4 -1
                geta[].htmovflag temp3
                ifl temp3 0
                {
                    set temp4 temp3
                    add temp4 16384
                    ifg temp4 -1
                    {
                        ife sprite[temp4].statnum 0
                        {
                            geta[temp4].picnum surface_type
                            state get_surface_type
                            ife surface_type SURFACE_WOOD
                                set counter3 1
                        }
                        else ifand tiledata[sprite[temp4].picnum].gameflags 32
                        {
                            seta[temp4].htpicnum EXPLOSION
                            geta[temp4].htextra temp3
                            add temp3 201
                            seta[temp4].htextra temp3
                        }
                        else ife sprite[temp4].picnum T_DARTBOARD_SWITCH
                        {
                            seta[temp4].htpicnum P_DART
                            geta[temp4].htextra temp3
                            add temp3 5
                            seta[temp4].htextra temp3
                            setav[temp4].counter3 THISACTOR
                            set se_above 1
                            set counter3 1
                        }
                        else 
                        {
                            geta[temp4].extra temp3
                            ife sprite.owner player.i
                                ife temp4 player.i
                                    set temp3 0
                            ifg temp3 0
                            {
                                geta[temp4].picnum surface_type
                                state get_surface_type
                                ife surface_type SURFACE_FLESH
                                {
                                    seta[temp4].htpicnum EXPLOSION
                                    geta[temp4].htextra temp3
                                    add temp3 201
                                    seta[temp4].htextra temp3
                                }
                                else ife actorvar[temp4].actor_switch 1
                                {
                                    seta[temp4].htpicnum P_DART
                                    geta[temp4].htextra temp3
                                    add temp3 5
                                    seta[temp4].htextra temp3
                                }
                                else ife actorvar[temp4].actor_moveable 1
                                {
                                    seta[temp4].htpicnum P_DART
                                    geta[temp4].htextra temp3
                                    add temp3 5
                                    seta[temp4].htextra temp3
                                    geta .ang temp5
                                    add temp5 1024
                                    and temp5 2047
                                    seta[temp4].htang temp5
                                }
                            }
                        }
                        seta .yvel 0
                    }
                    else
                    {
                        set temp4 temp3
                        add temp4 32768
                        ifg temp4 -1
                        {
                            set h_ang counter2
                            cos h_cos h_ang
                            sin h_sin h_ang
                            hitscan sprite.x sprite.y sprite.z sprite.sectnum h_cos h_sin 0 hitsect hitwall hitsprite hitx hity hitz CLIPMASK_HITSCAN
                            ifn hitwall -1
                            {
                                set temp5 counter2
                                add temp5 1024
                                and temp5 2047
                                cos move_xv temp5
                                sin move_yv temp5
                                shiftl move_xv 5
                                shiftl move_yv 5

                                shiftr move_xv 14
                                shiftr move_yv 14
                                add hitx move_xv
                                add hity move_yv
                                
                                setsprite THISACTOR hitx hity hitz
                                seta .sectnum hitsect // guarantee hit sector
                                seta .yvel 0
                                getw[hitwall].picnum surface_type
                                state get_surface_type
                                ife surface_type SURFACE_WOOD
                                {
                                    set counter3 1
                                    ifn hitsect -1
                                    {
                                        set temp5 tainted[hitsect]
                                        ife temp5 1
                                            set counter3 0
                                    }
                                    getw[hitwall].nextsector temp4
                                    ifn temp4 -1
                                    {
                                        set temp5 tainted[temp4]
                                        ife temp5 1
                                            set counter3 0
                                    }
                                }
                            }
                        }
                    }
                }
                ife counter3 0
                {
                    set surface_type sector.ceilingpicnum
                    state get_surface_type
                    ife surface_type SURFACE_WOOD
                    {
                        getceilzofslope sprite.sectnum sprite.x sprite.y temp6
                        add temp6 2048
                        ifl sprite.z temp6
                        {
                            sub temp6 2048
                            seta .z temp6
                            set se_zvel temp6
                            set counter3 2
                            ifn sprite.sectnum -1
                            {
                                set temp5 tainted[sprite.sectnum]
                                ife temp5 1
                                    set counter3 0
                            }
                            geta .x se_xvel
                            geta .y se_yvel
                        }
                    }
                }
                ife sprite.yvel 0
                {
                    cstat 128
                    
                    ife counter3 0
                    {
                        seta .z se_zvel
                        ifl sprite.zvel 0
                            seta .zvel GRAVITATIONALCONSTANT
                    }
                    else ife counter3 2
						setsprite THISACTOR se_xvel se_yvel se_zvel
						
                    changespritestat THISACTOR STAT_ACTOR
                    seta .ang counter2
                }
                else ifn counter3 2
                    geta .z se_zvel
                break
            case P_PUCK_THROWN
                ifn exp_aftershock 0
                    state ashock_proj_puck_thrown
                else
                     state fury_proj_puck_thrown
                break
            case P_FLAMINGSKULL
                setu[].vm_sprite temp
                ife counter 1
                    cstat 2
                else
                {
                    add counter 1
                    rand counter3 -3
                }
                seta[].blend 255
                ifg counter3 0
                {
                    add counter3 1
                    ifge counter3 35
                        set counter3 0
                }
                else ifl counter3 0
                    add counter3 1
                else
                {
                    ldist temp2 temp player[myconnectindex].i
                    ifl temp2 16384
                    {
                        actorsound THISACTOR S_FIRELOOP_SHORT
                        set counter3 1
                    }
                    else
                        set counter3 15
                }
                break
            case P_FIREBALL
                ifn exp_aftershock 0
                    state ashock_player_fireball
                seta[temp].blend 255
                break
            case P_SMG2
                setu[].vm_sprite temp
                ifactioncount 1
                {
                    seta[temp].blend 255
                    seta[temp].cstat 2
                    seta[temp].shade -70
					// no reduced dmg on my smg!
                    /*ifspawnedby APLAYER
                        ifn other_smg_toggle 0
                        {
                            geta .extra temp3
                            shiftl temp3 2
                            div temp3 5
                            seta .extra temp3
                        }*/
                }
                break
            case P_MINIMISSILE
                ifn exp_aftershock 0
                    state ashock_proj_minimissile
                else
                    state fury_proj_minimissile
                break
            case P_ACIDYSPIT
                setu[].vm_sprite temp
                geta[].htmovflag temp3
                ifl temp3 0 // 49152 is normal, but for this apparently sprites are negative? weird
                {
                    add temp3 16384
                    ifg temp3 -1
                    {
                        ife temp3 player[myconnectindex].i
                        {
                            ife p_hazard_amount 0
                            {
                                ife se_extra 1
                                {
                                    geta[player[myconnectindex].i].htextra temp3
                                    add temp3 1
									ifrnd 127
										add temp3 1
                                    clamp temp3 1 131072
                                    seta[player[myconnectindex].i].htextra temp3
                                    seta[player[myconnectindex].i].htpicnum sprite[].picnum
                                }
                            }
                            else ife se_extra 1
                                actorsound player[myconnectindex].i S_ITEM_HAZMAT_GEIGER
                            seta[].yvel 0
                        }
                    }
                }
                break
            case P_PLASMA_BOLT
                setu[].vm_sprite temp
                setu[].vm_player myconnectindex
                ife counter 0
                {
                    geta .extra temp4
                    shiftl temp4 1
                    seta .extra temp4
                }
                add counter 1
                ife counter 1 ifspawnedby APLAYER
                {
                    geta[].x plasma_last_x
                    geta[].y plasma_last_y
                    geta[].z plasma_last_z
                    set temp4 hitx
                    sub temp4 player.posx
                    mul temp4 temp4
                    
                    set temp5 hity
                    sub temp5 player.posy
                    mul temp5 temp5
                    
                    add temp4 temp5
                    sqrt temp4 temp4
                    
                    set temp5 hitz
                    subvarvar temp5 player.posz
                    shiftvarl temp5 2
                    divvarvar temp5 temp4
                    abs temp5
                    geta .xvel temp3
                    sub temp3 temp5
                    seta .xvel temp3
                }
                ifg counter 0
                {
                    
                    ife counter 2
                        setthisprojectile[temp].trail A_GENERIC_PARTICLE
                    ifg counter 2
                    {
                        seta[temp].cstat 642
                    }
                    ifspawnedby APLAYER
                    {
                        setav[].particle_ignore_distance 1
                        set temp2 0
                        ifn sprite[].x plasma_last_x
                            set temp2 1
                        ifn sprite[].y plasma_last_y
                            set temp2 1
                        ifn sprite[].z plasma_last_z
                            set temp2 1
                        ife temp2 1
                        {
                            set temp2 plasma_last_x // front
                            set temp3 plasma_last_y
                            set temp4 plasma_last_z
                            
                            ife was_plasma_alt 1
                            {
                                set temp5 4
                                ifl counter 3
                                    add temp5 3
                                sub plasma_last_x sprite[].x
                                div plasma_last_x temp5
                                inv plasma_last_x
                                sub plasma_last_y sprite[].y
                                div plasma_last_y temp5
                                inv plasma_last_y
                                sub plasma_last_z sprite[].z
                                div plasma_last_z temp5
                                inv plasma_last_z                           
                            }
                            else
                            {
                                set temp5 9
                                ifl counter 2
                                    add temp5 3
                                sub plasma_last_x sprite[].x
                                div plasma_last_x temp5
                                inv plasma_last_x
                                sub plasma_last_y sprite[].y
                                div plasma_last_y temp5
                                inv plasma_last_y
                                sub plasma_last_z sprite[].z
                                div plasma_last_z temp5
                                inv plasma_last_z
                            }
                            set temp8 temp5
                            for itervar range temp8
                            {
                                ifg temp5 1
                                {
                                    add temp2 plasma_last_x
                                    add temp3 plasma_last_y
                                    add temp4 plasma_last_z
                                    espawn A_GENERIC_PARTICLE
                                    seta[RETURN].xrepeat 127
                                    seta[RETURN].cstat 32768
                                    setsprite RETURN temp2 temp3 temp4
                                    seta[RETURN].pal PAL_PLASMA_BOLT
                                    set temp THISACTOR
                                    set temp6 temp5
                                    ifl counter 3
                                    {
                                        sub temp6 1
                                        ife was_plasma_alt 1
                                        {
                                            set temp7 temp5
                                            shiftr temp7 1
                                            add temp6 temp7
                                        }
                                        clamp temp6 0 10
                                        setav[RETURN].particle_shift_repeat -temp6
                                        set temp6 temp5
                                        set temp7 temp6
                                        shiftr temp7 1
                                        add temp6 temp7
                                        shiftr temp7 1
                                        add temp6 temp7
                                        shiftr temp7 1
                                        add temp6 temp7
                                        setav[RETURN].particle_shift_shade temp6
                                    }
                                    else
                                        shiftr temp6 3
                                    sub temp5 1
                                }
                            }

                            geta[].x plasma_last_x
                            geta[].y plasma_last_y
                            geta[].z plasma_last_z
                        }
                        geta[].x plasma_last_x
                        geta[].y plasma_last_y
                        geta[].z plasma_last_z
                    }
                    else ifspawnedby A_SMOKE1
                        nullop
                    else
                    {
                        seta[temp].pal PAL_PLASMA_BOLT_OTHER
                        setav[temp].particle_force_pal PAL_PLASMA_BOLT_OTHER
                    }
                }
                else
                {
                    geta[].x plasma_last_x
                    geta[].y plasma_last_y
                    geta[].z plasma_last_z
                }
                seta[temp].blend 255
                ifspawnedby APLAYER
                    seta[temp].pal PAL_PLASMA_BOLT
                else ifspawnedby A_SMOKE1
                    nullop
                else
                {
                    seta[temp].pal PAL_PLASMA_BOLT_OTHER
                    setav[temp].particle_force_pal PAL_PLASMA_BOLT_OTHER
                }
                seta[temp].shade -72
                break
            case P_BOMBETTE
                ifn exp_aftershock 0
                    state ashock_proj_bombette
                else
                    state fury_proj_bombette
                break
            case P_GRENADE
                ifn exp_aftershock 0
                    state ashock_proj_grenade
                else
                    state fury_proj_grenade
                break
            case P_NAPALM_BALL
                setu[].vm_sprite temp

                ifn sprite[].htmovflag 0
                {

                    geta[].htmovflag temp3
                    ifl temp3 0 // 49152 is normal, but for this apparently sprites are negative? weird
                    {
                        add temp3 16384
                        ifg temp3 -1
                        {
                            ifand tiledata[sprite[temp3].picnum].gameflags 32 ifg sprite[temp3].extra 0
                            {
                                seta[temp].xvel 0
                                seta[temp].yvel 0
                            }
                            else ife temp3 player[myconnectindex].i
                            {
                           //     setthisprojectile[temp].extra 10
                                seta[temp].xvel 0
                                seta[temp].yvel 0
                            }
                        }
                    }

                    espawn A_SOUND_EMITTER
                    seta[RETURN].extra SE_DIST_NAPALM_BOUNCE // read distance
                    seta[RETURN].xrepeat 64
                    seta[RETURN].yrepeat 64
                    seta[RETURN].cstat 32768
                }
                getflorzofslope sprite[temp].sectnum sprite[temp].x sprite[temp].y temp5
                geta[temp].zvel temp4
                shiftr temp4 1
                sub temp5 temp4
                ifonwater ifl temp5 sprite[temp].z
                {
                    seta[temp].xvel 0
                    seta[temp].yvel 0
                }
                ifspawnedby APLAYER
                    setthisprojectile[temp].range 1280
                ldist temp2 temp player[myconnectindex].i

                ifg temp2 768 // we don't want the projectile to spawn in the player's face
                {
                    seta[temp].cstat 259
                    seta[temp].blend 129
                    
                }
                else ife counter 2
                    seta[temp].cstat 0
                ife counter 0
                {
                    geta[].z temp3
                    ifspawnedby APLAYER
                        add temp3 512
                    else
                        sub temp3 1024
                    seta[].z temp3
                    geta[].yvel last_yvel
                    set napalm_oxv sprite[].xvel
                    geta[].xvel temp3
                    shiftr temp3 2
                    seta[].xvel temp3
                }
                else
                {
                    ifn sprite[].yvel last_yvel
                    {
                        geta[].yvel last_yvel
                        spawn A_NAPALM_FLAME
                    }
                }
                add counter 1
                geta[].xvel temp3
                ifl temp3 320
                {
                    set temp4 temp3
                    sub temp4 napalm_oxv
                    abs temp4
                    shiftr temp4 1
                    add temp4 temp3
                    seta[].xvel temp4
                }
                
                set napalm_oxv temp3
                ifle temp3 32
                {
                    seta[temp].xvel 0
                    seta[temp].yvel 0
                }
                ifl counter 5
                {
                    geta[].zvel temp3
                    ifspawnedby APLAYER
                        add temp3 128
                    else
                        sub temp3 256
                    seta[].zvel temp3
                    add counter 1
                }
                geta[].zvel temp3
                ifl temp3 0
                {
                    set temp4 temp3
                    sub temp4 napalm_ozv
                    abs temp4
                    shiftr temp4 2
                    sub temp3 temp4
                    seta[].zvel temp3
                    set napalm_ozv temp3
                }
                else
                    set napalm_ozv 0
                break
            case P_DANCINGQUEEN
                setu[].vm_sprite temp
                ldist temp2 temp player[myconnectindex].i
                ifg counter3 0
                {
                    add counter3 1
                    ifge counter3 6
                        set counter3 0
                }
                else ifl counter3 0
                    add counter3 1
                else
                {
                    ifl temp2 12288
                    {
                        actorsound THISACTOR S_LASERLOOP_SHORT
                        set counter3 1
                    }
                    else
                        set counter3 -10
                }

                ifg temp2 768
                {
                    seta[temp].cstat 2
                }
                else ife st_do_once 2
                    seta[temp].cstat 0
                seta[temp].blend 255
                ifg st_do_once 10
                {
                    geta[].yvel temp2
                    ife temp2 -1
                    {
                        set temp2 counter
                        sub temp2 2
                        geta[].ang temp3
                        add temp3 512
                        ifge counter 3
                            add temp3 1024
                        and temp3 2047
                        cos temp4 temp3
                        sin temp5 temp3
                        set temp3 temp2
                        shiftl temp3 3
                        abs temp3
                        mul temp4 temp3
                        mul temp5 temp3
                        shiftr temp4 14
                        shiftr temp5 14

                        set temp3 temp2
                        shiftl temp3 8
                        movesprite THISACTOR temp4 temp5 temp3 0 temp2

                        add counter 1
                        ifg counter 4
                            set counter 0
                    }
                    else ife temp2 0
                    {
                        set temp2 counter
                        sub temp2 2
                        inv temp2
                        geta[].ang temp3
                        add temp3 1024
                        add temp3 512
                        ifge counter 3
                            add temp3 1024
                        and temp3 2047
                        cos temp4 temp3
                        sin temp5 temp3
                        set temp3 temp2
                        shiftl temp3 3
                        abs temp3
                        mul temp4 temp3
                        mul temp5 temp3
                        shiftr temp4 14
                        shiftr temp5 14

                        set temp3 temp2
                        shiftl temp3 8
                        movesprite THISACTOR temp4 temp5 temp3 0 temp2

                        add counter 1
                        ifg counter 4
                            set counter 0
                    }
                }
                else
                    add st_do_once 1

                seta[temp].shade -72
                break
            default
				ifn exp_aftershock 0
					state ashock_projectiles_extension
                break
        endswitch
ends

defstate bomb_blow
    stopactorsound THISACTOR S_BBOMB_FUSE
    set bbomb_radius BOWLINGBOMB_RADIUS
    add bbomb_radius bbomb_move_v
    set temp sprite[].x
    set temp2 sprite[].y
    set temp3 sprite[].z
    ifge bbomb_alt_mode 1
    {
        ife sprite[RETURN].picnum A_EXPLOSION
        {
            rand temp4 4
            add temp4 48
            seta[RETURN].xrepeat temp4
            seta[RETURN].yrepeat temp4
            seta[RETURN].pal 1
            seta[RETURN].xvel 10
            ssp RETURN 0
        }
        add bbomb_radius 512
    }
    ifn exp_aftershock 0
    	state ashock_goldbbomb_expl_size

    seta[].owner THISACTOR
    set temp7 WEAPON5_DMG
    shiftr temp7 2
    ifge bbomb_alt_mode 1
    {
        set temp temp7
        shiftr temp 3
        add temp7 temp
    }
    set temp8 WEAPON5_DMG
    shiftr temp8 1
    ifge bbomb_alt_mode 1
    {
        set temp temp8
        shiftr temp 3
        add temp8 temp
    }
    set temp9 WEAPON5_DMG
    sub temp9 temp7
    ifge bbomb_alt_mode 1
    {
        set temp temp9
        shiftr temp 3
        add temp9 temp
    }

    ifn exp_aftershock 0
    	state ashock_goldbbomb_dmgmod

    ifge bbomb_alt_mode 1
    {
        ifge bbomb_interrupt 49152
        {
            set temp4 bbomb_interrupt
            sub temp4 49152
            ifand tiledata[sprite[temp4].picnum].gameflags 32
            {
                ife sprite[temp4].picnum A_PSEUDO_ENEMY
                    setsprite THISACTOR sprite[temp4].x sprite[temp4].y sprite[temp4].z
            }
        }
        add bbomb_radius 512
        shiftr temp7 3
    }
    hitradiusvar bbomb_radius temp7 temp8 temp9 WEAPON5_DMG
ends

defstate bomb_alt_blink
    switch bbomb_alt_mode
        case 30
        case 27
        case 24
        case 21
        case 18
        case 16
        case 14
        case 12
            spritepal 9
            break
        default
            ifle bbomb_alt_mode 10
            {
                ifand bbomb_alt_mode 2
                    spritepal 9
                else
                    spritepal 0
            }
            else ifle bbomb_alt_mode 60
            {
                ifand bbomb_alt_mode 4
                    spritepal 9
                else
                    spritepal 0
            }
            else
            {
                ifand bbomb_alt_mode 8
                    spritepal 9
                else
                    spritepal 0
            }
            break
    endswitch
ends
eventloadactor A_BOMB_ATTRACT
    cstat 32768
enda
useractor notenemy A_BOMB_ATTRACT
    cstat 32768
    findnearactor P_BOWLINGBOMB 4096 temp
    ifn temp -1
    {
        ife actorvar[temp].bbomb_target -1
            ifg actorvar[temp].bbomb_move_v 4
                setav[temp].bbomb_target THISACTOR
    }
enda

var bbomb_loseit
useractor notenemy P_BOWLINGBOMB 1
    ifn exp_aftershock 0
    	state ashock_goldbbomb_mdflags

    ifn bbomb_target -1
    {
        ife sprite[bbomb_target].picnum A_BOMB_ATTRACT
        {
            ldist temp2 THISACTOR bbomb_target
            ifl temp2 512
            {
                geta .zvel temp2
                add temp2 256
                seta .zvel temp2
            }
            add bbomb_loseit 1
            ifg bbomb_loseit 4
            {
                set bbomb_loseit 0
                set bbomb_target -1
            }
        }
        else
            set bbomb_loseit 0
    }
    else
        set bbomb_loseit 0
    ife st_do_once 0
    {
        ife sprite.htowner player.i
        {
            set bbomb_alt_mode actorvar[player.i].bbomb_alt_mode
            ifg bbomb_alt_mode 0
            {
                set bbomb_alt_mode 120
                getplayervar[].bbomb_hold_count temp
                sub bbomb_alt_mode temp
                clamp bbomb_alt_mode 2 150
            }
        }
        set st_do_once 1
    }
    else ifg bbomb_alt_mode 0
    {
        ife bbomb_fuse_snd 0
        {
            sound S_BBOMB_FUSE
            set bbomb_fuse_snd 1
        }
        else
        {
            add bbomb_fuse_snd 1
            mod bbomb_fuse_snd 20
        }
        sub bbomb_alt_mode 1
        ife bbomb_alt_mode 1
        {
            stopactorsound THISACTOR S_BBOMB_ROLL
            setp[].sound_pitch -1024
            sound S_TRIFIRE4
            setp[].sound_pitch 0
            espawn A_EXPLOSION
            rand temp4 8
            add temp4 40
            seta[RETURN].cstat 32768
            seta[RETURN].xrepeat temp4
            seta[RETURN].yrepeat temp4
            state bomb_blow
            killit
        }
    }
    geta[].htflags temp
    set temp 8193
    seta[].htflags temp
    ifl counter 10
        clipdist 8
    else
        clipdist 16
    ifhitweapon
    {
        stopactorsound THISACTOR S_BBOMB_ROLL
        setp[].sound_pitch -1024
        sound S_TRIFIRE4
        setp[].sound_pitch 0
        espawn A_EXPLOSION
        rand temp4 8
        add temp4 40
        seta[RETURN].cstat 32768
        seta[RETURN].xrepeat temp4
        seta[RETURN].yrepeat temp4
        for itervar range num_flag32
        {
            set temp gameflag32[itervar]
            ifg sprite[temp].extra 0
            {
                ldist temp2 THISACTOR temp
                ifl temp2 1024
                {
                    setav[temp].enemy_init 1
                    changespritestat temp STAT_ACTOR
                }
            }
        }

        state bomb_blow
        killit
    }

    ifpdistl RETRIEVEDISTANCE ifp palive ifcount 6 ifcanseetarget ife bbomb_alt_mode 0 ife bbomb_gold 0
    {
        ife player[].curr_weapon 0
        {
            getp[].weaponswitch temp6
            ife player[].gotweapon WEAPON_BOWLINGBOMB 1
                setp[].weaponswitch 0
            addweapon WEAPON_BOWLINGBOMB 1
            setp[].weaponswitch temp6
        }
        else
            addweapon WEAPON_BOWLINGBOMB 1
        quote 69
        palfrom 15 5 32 5
        globalsound S_BBOMB_THROW
        globalsound S_BBOMB_LAND
        killit
    }

    ifg counter 10
    {
        ife bbomb_search_count 0
        {
            set temp 0
            ifg bbomb_alt_mode 1
                set temp 1
            else
            {
                ifaction AC_BOWLINGBOMB_IDLE
                    nullop
                else
                    set temp 1
            }
            ife sprite.sectnum heskel_sectnum
                set temp 1
            ife temp 1
            {
                set bbomb_interrupt -1
                set temp7 0
                for temp spritesofsector sprite[].sectnum
                {
                    ifn temp THISACTOR ife temp7 0
                    {
                        set temp6 0
                        ifn actorvar[temp].actor_crack 1
                            ife bbomb_alt_mode 0
                                set temp6 1
                        ife temp6 0
                        {
                            set temp2 0
                            ife actorvar[temp].actor_moveable 1
                            {
                                switch sprite[temp].picnum
                                    case A_BARREL_1
                                    case A_BARREL_2
                                    case A_SHOCKCANISTER
                                    case A_SHOCKCANISTER_DMG
                                    case A_FIREEXT
                                    case A_CANISTER_1
                                    case A_CANISTER_2
                                        set temp2 2
                                        break
                                    default
                                        ife actorvar[temp].actor_crack 1
                                            set temp2 2
                                        else
                                            set temp2 1
                                        break
                                endswitch
                            }
                            else ife actorvar[temp].actor_crack 1
                            {
                                ifaction AC_BOWLINGBOMB_IDLE
                                    set temp2 1
                                else
                                {
                                    set temp2 2
                                    set temp7 -1
                                }
                            }
                            else ifand tiledata[sprite[temp].picnum].gameflags 32
                            {
                                ifaction AC_BOWLINGBOMB_IDLE
                                    set temp2 1
                                else
                                    set temp2 2
                            }
                            else ife sprite[temp].picnum APLAYER
                                set temp2 1
                            else ife sprite[temp].picnum P_BOWLINGBOMB
                                ifn temp THISACTOR
                                    set temp2 1
                            ife bbomb_alt_mode 0
                            {
                                ifn temp7 -1
                                    set temp2 0
                            }
                            ifn temp2 0
                            {
                                geta[temp].picnum temp5
                                set temp5 tilesizy[temp5]
                                shiftl temp5 2
                                mul temp5 sprite[temp].yrepeat
                                set temp6 sprite[temp].z
                                sub temp5 128
                                sub temp6 temp5
                                ifge sprite[].z temp6
                                {
                                    ifg sprite[].z sprite[temp].z
                                        set temp2 0
                                }
                                else
                                    set temp2 0
                            }
                            ifg temp2 0
                            {
                                ife temp2 2
                                {
                                    ldist temp2 THISACTOR temp
                                    set temp3 sprite[temp].clipdist
                                    ifand tiledata[sprite[temp].picnum].gameflags 32
                                        clamp temp3 32 65536
                                    shiftl temp3 3
                                    clamp temp3 64 512
                                    ifl temp2 temp3
                                    {
                                        set bbomb_interrupt temp
                                        add bbomb_interrupt 49152
                                        ife temp7 -1
                                            set temp7 1
                                    }
                                    else ife temp7 -1
                                        set temp7 0
                                }
                                else
                                {
                                    ldist temp2 THISACTOR temp
                                    set temp3 sprite[temp].clipdist
                                    shiftl temp3 3
                                    clamp temp3 64 512
                                    ifl temp2 temp3
                                    {
                                        ifn sprite[temp].xvel 0
                                        {
                                            set aft_target temp
                                            set aft_noclamp 1
                                            state angle_from_target
                                            set temp3 aft_return
                                            add temp3 sprite[].ang
                                            and temp3 2047
                                            seta[].ang temp3
                                            set temp3 sprite[temp].xvel
                                            abs temp3
                                            ife sprite[temp].picnum APLAYER
                                                shiftr temp3 1
                                            else ifand tiledata[sprite[temp].picnum].gameflags 32
                                                shiftr temp3 3
                                            else
                                                shiftr temp3 2
                                            add bbomb_move_v temp3
                                            clamp bbomb_move_v 0 160
                                            ife sprite[temp].picnum P_BOWLINGBOMB
                                            {
                                                set temp2 bbomb_move_v
                                                shiftr temp2 2
                                                setav[temp].bbomb_bonb 1
                                                add temp2 actorvar[temp].bbomb_move_v
                                                clamp temp2 0 160
                                                setav[temp].bbomb_move_v temp2
                                            }
                                        }
                                    }
                                }
                            }
                            else ife temp7 -1
                                set temp7 0
                        }
                    }
                }
            }
            set bbomb_search_count 1
        }
        else
        {
            add bbomb_search_count 1
            ifg bbomb_search_count 2
                set bbomb_search_count 0
        }
    }
    ife bbomb_gold 1
    {
        ifle bbomb_move_v 4
            set bbomb_move_v 0
        else ifl bbomb_move_v 10
        {
            add counter2 1
            ifg counter2 300
                shiftr bbomb_move_v 1
        }
    }
    ifaction AC_BOWLINGBOMB_IDLE
    {
        // do stuff
        ife bbomb_gold 1
        {
            stopactorsound THISACTOR S_BBOMB_ROLL
            setp[].sound_pitch -1024
            sound S_TRIFIRE4
            setp[].sound_pitch 0
            espawn A_EXPLOSION
            rand temp4 8
            add temp4 40
            seta[RETURN].cstat 32768
            seta[RETURN].xrepeat temp4
            seta[RETURN].yrepeat temp4
            state bomb_blow
            killit
        }
        ifn bbomb_move_v 0
            action AC_BOWLINGBOMB_ROLL
        cstat 256
        spritepal 0
        fall
        ife bbomb_mode 1
        {
            canseespr THISACTOR player[].i temp4
            ife temp4 0 ifspawnedby APLAYER
            {
                ifactioncount 900
                    killit
            }
        }
        ifg bbomb_alt_mode 1
        {
            ife bbomb_bonb 1
            {
                ifl bbomb_move_v 20
                {
                    
                    ifle bbomb_move_v 5
                        nullop
                    else
                        action AC_BOWLINGBOMB_ROLL5
                }
                else ifl bbomb_move_v 40
                    action AC_BOWLINGBOMB_ROLL4
                else ifl bbomb_move_v 80
                    action AC_BOWLINGBOMB_ROLL3
                else ifl bbomb_move_v 120
                    action AC_BOWLINGBOMB_ROLL2
            }
            state bomb_alt_blink
            ifrnd 16
            {
                espawn A_SMOKE2
                seta[RETURN].xrepeat 16
                seta[RETURN].yrepeat 16
            }
            else
            {
                espawn A_GENERIC_PARTICLE
                seta[RETURN].xrepeat 129
                seta[RETURN].yrepeat 16
                ifrnd 16
                {
                    espawn A_SMOKE2
                    seta[RETURN].xrepeat 16
                    seta[RETURN].yrepeat 16
                }
            }
        
            seta[RETURN].owner THISACTOR
            set temp bbomb_move_v
            shiftr temp 2
            seta[RETURN].xvel temp
            geta[].zvel temp
            div temp 3
            abs temp
            inv temp
            seta[RETURN].zvel temp
            ssp RETURN 0
            geta[].ang temp
            add temp 512
            and temp 2047
            seta[RETURN].ang temp
            geta[].z temp
            sub temp 1280
            seta[RETURN].z temp
            ifactioncount 150
            {
                stopactorsound THISACTOR S_BBOMB_ROLL
                setp[].sound_pitch -1024
                sound S_TRIFIRE4
                setp[].sound_pitch 0
                espawn A_EXPLOSION
                rand temp4 8
                add temp4 40
                seta[RETURN].cstat 32768
                seta[RETURN].xrepeat temp4
                seta[RETURN].yrepeat temp4
                state bomb_blow
                killit
            }
        }
        set bbomb_bonb 0
        break
    }
    else ifg bbomb_alt_mode 1
        state bomb_alt_blink
    set bbomb_bonb 0

    ifaction 0
    {
        ifspawnedby APLAYER
        {
            ifp pducking
                set grenade_tumble 0
        }
        else ife sprite[].zvel 0
        {
            action AC_BOWLINGBOMB_IDLE
            fall
            sizeat 11 10
            cstat 256
            break
        }
        set bbomb_bounce_snd 5
        ifn player_target -1
        {
            set bbomb_target player_target
            sound S_BBOMB_LOCK
        }
        set temp sprite[].ang
        add temp 128
        and temp 2047
        cos temp2 temp
        sin temp3 temp
        shiftr temp2 7
        shiftr temp3 7

        set temp sprite[].x
        add temp temp2
        seta[].x temp

        set temp sprite[].y
        add temp temp3
        seta[].y temp

        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
            ifn temp -1
                seta[].sectnum temp
        getp[].i temp2
        set temp4 0
        ifn sprite.sectnum -1
        {
            geta[].x temp5
            geta[].y temp6
            geta[].z temp7
            geta[].sectnum temp8
            seta[].x player[].posx
            seta[].y player[].posy
            seta[].sectnum sprite[temp2].sectnum
            set move_v 16
            state move_actor
            add move_xv sprite[].x
            add move_yv sprite[].y
            geta .sectnum temp9
            updatesector move_xv move_yv temp9
            set temp3 gtfo[sprite.sectnum]
            ifand temp3 2
                set temp -1
            ifn temp9 -1
            {
                set temp3 gtfo[temp4]
                ifand temp3 2
                    set temp -1
            }
            ife temp -1
                set temp4 -1
            setsprite THISACTOR temp5 temp6 temp7
            seta[].sectnum temp8
        }
        ifn temp sprite[temp2].sectnum
        {
            seta[].x player[].posx
            seta[].y player[].posy
            seta[].sectnum sprite[temp2].sectnum
            geta[].ang temp
            add temp 512
            and temp 2047
            seta[].ang temp
            set move_v 32
            ife temp4 -1
                shiftr move_v 1
            state move_actor
            add move_xv sprite[].x
            add move_yv sprite[].y
            seta[].x move_xv
            seta[].y move_yv
            geta[].ang temp
            sub temp 512
            and temp 2047
            seta[].ang temp
        }

        getav[player[].i].bb_x bb_x
        sub bb_x sprite[].x

        getav[player[].i].bb_y bb_y
        sub bb_y sprite[].y

        getangle temp bb_x bb_y
        seta[].ang player[].ang
        ife temp4 -1
        {
            geta .ang temp4
            add temp4 1024
            and temp4 2047
            seta .ang temp4
        }
        action AC_BOWLINGBOMB_ROLL
        set bbomb_move_v 160
        ifl player[].horiz 0
        {
            set bbomb_fast_next bbomb_move_v
            set temp player[].horiz
            abs temp
            sub bbomb_move_v temp
            sub bbomb_fast_next bbomb_move_v
        }
        geta[].z temp
        add temp 5120
        seta[].z temp
        cstat 32768
        // hack to apply the player velocity for a few frames
        // keep this block in case we need it again later
        getp[].i temp
        geta[temp].xvel bbomb_pv
        add bbomb_move_v bbomb_pv
        ife sprite[].owner player[].i // if the player fired this off we should add the "hold count"
        {
            ife pup_bomb_safety 1
                set bbomb_gold 1
            getplayervar[].bbomb_hold_count temp
            ifge temp BBOMB_HOLD_COUNT ife bbomb_alt_mode 0
                set bbomb_fulllock 0
            add bbomb_move_v temp
            ifg bbomb_alt_mode 1
            {
                shiftr bbomb_move_v 1
                set temp bbomb_move_v
                shiftr temp 1
                add bbomb_move_v temp
            }
        }
        getp[].i temp
        ifg sprite[].z sprite[temp].z
        {
            geta[temp].z temp
            sub temp 1024
            seta[].z temp
            set temp sprite[].sectnum
            updatesectorz sprite[].x sprite[].y sprite[].z temp
            ifn temp -1
                seta[].sectnum temp
        }
        resetcount
        geta[].zvel temp
        ifg bbomb_alt_mode 1
        {
            geta .zvel temp
            sub temp 512
            seta .zvel temp
        }
        ifl temp -2560
        {
            seta[].zvel -2560 // cap zvel to prevent glitchy looking position update
            ifg bbomb_move_v 170
            {
                sub temp bbomb_move_v
                seta[].zvel temp
            }
        }
        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
        set temp3 0
        ifn sprite.sectnum -1
        {
            set temp3 gtfo[sprite.sectnum]
            ifand temp3 2
                set temp -1
            ifn temp -1
            {
                set temp3 gtfo[sprite.sectnum]
                ifand temp3 2
                    set temp -1
            }
        }
        ife temp -1
        {
            seta[].x player[].posx
            seta[].y player[].posy
            getp[].i temp
            ifg sprite[].z sprite[temp].z
            {
                seta[].z sprite[temp].z
            }
            seta[].sectnum player[].cursectnum
        }

        ife player[].spritebridge 1 ifn player[].sbs -1
        {
            geta[player[].sbs].z temp
            ifge sprite[].z temp
            {
                sub temp 256
                seta[].z temp
            }
        }
        else ife sector[].lotag 1
        {
            getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
            ifge sprite[].z temp
            {
                sub temp 1024
                seta[].z temp
            }
        }
        seta .htbposx sprite.x
        seta .htbposy sprite.y
        seta .htbposz sprite.z
        break
    }
    else ifg counter 1
    {
        ifn bbomb_fast_next 0
        {
            add bbomb_move_v bbomb_fast_next
            set bbomb_fast_next 0
        }
    }
    ifl counter 2
    {
        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
        set temp3 0
        set temp4 0
        ifn sprite.sectnum -1
        {
            set temp3 gtfo[sprite.sectnum]
            ifand temp3 2
                set temp -1
            ifn temp -1
            {
                geta[].x temp5
                geta[].y temp6
                geta[].z temp7
                geta[].sectnum temp8
                seta[].x player[].posx
                seta[].y player[].posy
                seta[].sectnum sprite[player.i].sectnum
                set move_v 8
                for itervar range 4
                {
                    state move_actor
                    set move_v 24
                    add move_xv sprite[].x
                    add move_yv sprite[].y
                    updatesector move_xv move_yv temp4
                    ifn temp4 -1
                    {
                        set temp3 gtfo[temp4]
                        ifand temp3 2
                            set temp -1
                    }
                    seta[].x temp5
                    seta[].y temp6
                }
                ife temp -1
                    set temp4 -1
                seta[].x temp5
                seta[].y temp6
                seta[].z temp7
                seta[].sectnum temp8
				seta .htbposx sprite.x
				seta .htbposy sprite.y
				seta .htbposz sprite.z
            }

        }
        ife temp -1
        {
            seta[].x player[].posx
            seta[].y player[].posy
            getp[].i temp
            ifg sprite[].z sprite[temp].z
            {
                seta[].z sprite[temp].z
            }
            ife player[].spritebridge 1 ifn player[].sbs -1
            {
                geta[player[].sbs].z temp
                ifge sprite[].z temp
                {
                    sub temp 1024
                    seta[].z temp
                }
            }
            else ife sector[].lotag 1
            {
                getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
                ifge sprite[].z temp
                {
                    sub temp 256
                    seta[].z temp
                }
            }
            seta[].sectnum player[].cursectnum
            seta[].ang player[].ang
            ife temp4 -1
            {
                geta .ang temp4
                add temp4 1024
                and temp4 2047
                seta .ang temp4
                shiftr bbomb_move_v 1
            }
			seta .htbposx sprite.x
			seta .htbposy sprite.y
			seta .htbposz sprite.z
        }
        else
        {
            geta[].x bbomb_lastx
            geta[].y bbomb_lasty
            geta[].z bbomb_lastz
            geta[].sectnum bbomb_lastsect
        }
        ifl counter 5
        {
            ifcansee
                nullop
            else
            {
                seta[].x player[].posx
                seta[].y player[].posy
                getp[].i temp
                ifg sprite[].z sprite[temp].z
                {
                    seta[].z sprite[temp].z
                }
                seta[].sectnum player[].cursectnum
                seta[].ang player[].ang
				seta .htbposx sprite.x
                seta .htbposy sprite.y
                seta .htbposz sprite.z
            }
        }
    }
    else
    {
        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
        /* for temp2 sprofstat STAT_GTFO
        {
            getav[temp2].se_lotag temp3
            ifle temp3 0
            {
                ifn sprite[temp2].sectnum bbomb_lastsect
                {
                    ife sprite[temp2].sectnum sprite[].sectnum
                    {
                        getav[temp2].se_hitag temp3
                        ifand temp3 2
                            set temp -2
                    }
                }
            }
        } */
        set temp3 0
        ifn sprite.sectnum -1
        {
            set temp3 gtfo[sprite.sectnum]
            ifand temp3 2
                set temp -2
            ifg temp -1
            {
                set temp3 gtfo[temp]
                ifand temp3 2
                    set temp -2
            }
        }
        ifle temp -1
        {
            ife temp -1
            {
                set temp2 sprite[].z
                sub temp2 256
                set temp sprite[].sectnum
                updatesectorz sprite[].x sprite[].y temp2 temp
            }
            ifle temp -1
            {
                ife temp -2
                    ifg bbomb_move_v 80
                        sub bbomb_move_v 2
                setsprite THISACTOR bbomb_lastx bbomb_lasty bbomb_lastz
                seta[].sectnum bbomb_lastsect // saved sectnum
                geta[].ang temp
                add temp 1024
                and temp 2047
                seta[].ang temp
            }
        }
        else
        {
            geta[].x bbomb_lastx
            geta[].y bbomb_lasty
            geta[].z bbomb_lastz
            geta[].sectnum bbomb_lastsect
        }
    }

    ifactioncount 14
    {
        ifl bbomb_move_v 20
        {
            action AC_BOWLINGBOMB_ROLL5
            ifle bbomb_move_v 5
                ifg counter 10
                    ifg bbomb_alt_mode 1
                    {
                        action AC_BOWLINGBOMB_IDLE
                        break
                    }
        }
        else ifl bbomb_move_v 40
            action AC_BOWLINGBOMB_ROLL4
        else ifl bbomb_move_v 80
            action AC_BOWLINGBOMB_ROLL3
        else ifl bbomb_move_v 120
            action AC_BOWLINGBOMB_ROLL2
        resetactioncount
    }
    else ifactioncount 8
    {
        ifle bbomb_move_v 5
            ifg counter 10
                ifg bbomb_alt_mode 1
                {
                    action AC_BOWLINGBOMB_IDLE
                    break
                }
    }
    
    ifg bbomb_alt_mode 1
        set bbomb_target -1
    ifn bbomb_target -1
    {
        ife sprite[bbomb_target].picnum A_PSEUDO_ENEMY
        {
            ife actorvar[bbomb_target].se_xvel 0
            {
                ife bbomb_fulllock -1
                {
                    set bbomb_fulllock 1
                    ldist temp2 THISACTOR bbomb_target
                    ifl temp2 4096
                    {
                        ifl bbomb_move_v 10
                            set bbomb_move_v 10
                        dist temp2 THISACTOR bbomb_target
                        ifl temp2 1536
                            set bbomb_interrupt bbomb_target
                    }
                }
            }
        }
        ife bbomb_fulllock 0
            set bbomb_fulllock 1
        ife bbomb_fulllock 1
        {
            set att_target bbomb_target
            set att_noclamp 1
            state angle_to_target
            geta[].ang temp
            ife bbomb_delayslow 0
                shiftr att_return 3
            else ifl bbomb_delayslow 5
                shiftr att_return 2
            sub temp att_return
            and temp 2047
            seta[].ang temp
        }
        ifn sprite[bbomb_target].statnum STAT_ZOMBIEACTOR
            ifg actorvar[bbomb_target].need_spot_sound -1
                setav[bbomb_target].need_spot_sound -30
        ifl sprite[bbomb_target].extra 1
            set bbomb_target -1
    }
    else iffloordistl 1 ifg counter 5
    {
        ifn player_target -1
        {
            switch sprite[player_target].picnum
                case A_BARREL_1
                case A_BARREL_2
                case A_SHOCKCANISTER
                case A_SHOCKCANISTER_DMG
                case A_FIREEXT
                case A_CANISTER_1
                case A_CANISTER_2
                case P_BOWLINGBOMB
                    set temp3 -1
                    set temp player_target
                    ldist temp2 THISACTOR temp

                    geta[].z temp5
                    sub temp5 4096
                    seta[].z temp5
                    canseespr THISACTOR temp temp4
                    ife temp4 1
                    {
                        set cansee_target temp
                        set cansee_height 1536
                        ldist cansee_temp3 THISACTOR cansee_target
                        geta[].z cansee_temp
                        sub cansee_temp cansee_height
                        seta[].z cansee_temp

                        geta[cansee_target].z cansee_temp2
                        sub cansee_temp2 cansee_height

                        sub cansee_temp2 cansee_temp
                        shiftl cansee_temp2 14
                        ifn cansee_temp3 0 ifn cansee_temp2 0
                            div cansee_temp2 cansee_temp3
                        set h_zvel cansee_temp2


                        geta[cansee_target].x face_x
                        sub face_x sprite[].x

                        geta[cansee_target].y face_y
                        sub face_y sprite[].y

                        getangle cansee_temp3 face_x face_y

                        set h_ang cansee_temp3
                        cos h_cos h_ang
                        sin h_sin h_ang
                        set cansee_return_o cansee_return
                        set cansee_return_a 0
                        hitscan sprite[].x sprite[].y sprite[].z sprite[].sectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_HITSCAN
                        ifn hitwall -1
                            set temp4 0
                        else ifn hitsprite cansee_target
                        {
                            getav[temp].actor_moveable cansee_temp
                            ifn cansee_temp 1
                                set temp4 0
                        }
                    }
                    add temp5 4096
                    seta[].z temp5

                    ifl temp2 6144 ife temp4 1
                    {
                        ife temp3 -1
                        {
                            set temp3 temp2
                            set bbomb_target temp
                        }
                        else ifl temp2 temp3
                        {
                            set temp3 temp2
                            set bbomb_target temp
                        }
                        ifg bbomb_alt_mode 1
                            set bbomb_target -1
                    }
                    break
            endswitch
        }
        ife bbomb_target -1
        {
            set temp3 -1
            for temp sprofstat STAT_ACTOR
            {
                ifand tiledata[sprite[temp].picnum].gameflags 32 ifg sprite[temp].extra 0
                {
                    ldist temp2 THISACTOR temp

                    geta[].z temp5
                    sub temp5 4096
                    seta[].z temp5
                    canseespr THISACTOR temp temp4
                    ife temp4 1
                    {
                        set cansee_target temp
                        set cansee_height 1536
                        ldist cansee_temp3 THISACTOR cansee_target
                        geta[].z cansee_temp
                        sub cansee_temp cansee_height
                        seta[].z cansee_temp

                        geta[cansee_target].z cansee_temp2
                        sub cansee_temp2 cansee_height

                        sub cansee_temp2 cansee_temp
                        shiftl cansee_temp2 14
                        ifn cansee_temp3 0 ifn cansee_temp2 0
                            div cansee_temp2 cansee_temp3
                        set h_zvel cansee_temp2


                        geta[cansee_target].x face_x
                        sub face_x sprite[].x

                        geta[cansee_target].y face_y
                        sub face_y sprite[].y

                        getangle cansee_temp3 face_x face_y

                        set h_ang cansee_temp3
                        cos h_cos h_ang
                        sin h_sin h_ang
                        set cansee_return_o cansee_return
                        set cansee_return_a 0
                        hitscan sprite[].x sprite[].y sprite[].z sprite[].sectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_HITSCAN
                        ifn hitwall -1
                            set temp4 0
                        else ifn hitsprite cansee_target
                        {
                            getav[temp].actor_moveable cansee_temp
                            ifn cansee_temp 1
                                set temp4 0
                        }
                    }
                    add temp5 4096
                    seta[].z temp5

                    ifl temp2 6144 ife temp4 1
                    {
                        ife temp3 -1
                        {
                            set temp3 temp2
                            set bbomb_target temp
                        }
                        else ifl temp2 temp3
                        {
                            set temp3 temp2
                            set bbomb_target temp
                        }
                        ifg bbomb_alt_mode 1
                            set bbomb_target -1
                    }
                }
            }
            ife bbomb_target -1
            {
                for temp sprofstat STAT_ZOMBIEACTOR
                {
                    ifand tiledata[sprite[temp].picnum].gameflags 32 ifg sprite[temp].extra 0
                    {
                        ldist temp2 THISACTOR temp

                        geta[].z temp5
                        sub temp5 4096
                        seta[].z temp5
                        canseespr THISACTOR temp temp4
                        ife temp4 1
                        {
                            set cansee_target temp
                            set cansee_height 1536
                            ldist cansee_temp3 THISACTOR cansee_target
                            geta[].z cansee_temp
                            sub cansee_temp cansee_height
                            seta[].z cansee_temp

                            geta[cansee_target].z cansee_temp2
                            sub cansee_temp2 cansee_height

                            sub cansee_temp2 cansee_temp
                            shiftl cansee_temp2 14
                            ifn cansee_temp3 0 ifn cansee_temp2 0
                                div cansee_temp2 cansee_temp3
                            set h_zvel cansee_temp2


                            geta[cansee_target].x face_x
                            sub face_x sprite[].x

                            geta[cansee_target].y face_y
                            sub face_y sprite[].y

                            getangle cansee_temp3 face_x face_y

                            set h_ang cansee_temp3
                            cos h_cos h_ang
                            sin h_sin h_ang
                            set cansee_return_o cansee_return
                            set cansee_return_a 0
                            hitscan sprite[].x sprite[].y sprite[].z sprite[].sectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_HITSCAN
                            ifn hitwall -1
                                set temp4 0
                            else ifn hitsprite cansee_target
                            {
                                getav[temp].actor_moveable cansee_temp
                                ifn cansee_temp 1
                                    set temp4 0
                            }
                        }
                        add temp5 4096
                        seta[].z temp5

                        ifl temp2 6144 ife temp4 1
                        {
                            ife temp3 -1
                            {
                                set temp3 temp2
                                set bbomb_target temp
                            }
                            else ifl temp2 temp3
                            {
                                set temp3 temp2
                                set bbomb_target temp
                            }
                            ifg bbomb_alt_mode 1
                                set bbomb_target -1
                        }
                    }
                }
                ife bbomb_target -1
                {
                    for temp sprofstat STAT_ACTOR
                    {
                        set temp2 0
                        ife sprite[temp].picnum P_BOWLINGBOMB // dumb hack because actions aren't vars
                        {
                            switch sprite[temp].htg_t 4
                                case AC_BOWLINGBOMB_IDLE
                                    break
                                default
                                    set temp2 1
                                    break
                            endswitch
                        }
                        switch sprite[temp].picnum
                            case A_BARREL_1
                            case A_BARREL_2
                            case A_SHOCKCANISTER
                            case A_SHOCKCANISTER_DMG
                            case A_FIREEXT
                            case A_CANISTER_1
                            case A_CANISTER_2
                            case P_BOWLINGBOMB
                                ife temp2 0 ifg sprite[temp].extra 0
                                {
                                    ldist temp2 THISACTOR temp

                                    geta[].z temp5
                                    sub temp5 4096
                                    seta[].z temp5
                                    canseespr THISACTOR temp temp4
                                    ife temp4 1
                                    {
                                        set cansee_target temp
                                        set cansee_height 1536
                                        ldist cansee_temp3 THISACTOR cansee_target
                                        geta[].z cansee_temp
                                        sub cansee_temp cansee_height
                                        seta[].z cansee_temp

                                        geta[cansee_target].z cansee_temp2
                                        sub cansee_temp2 cansee_height

                                        sub cansee_temp2 cansee_temp
                                        shiftl cansee_temp2 14
                                        ifn cansee_temp3 0 ifn cansee_temp2 0
                                            div cansee_temp2 cansee_temp3
                                        set h_zvel cansee_temp2


                                        geta[cansee_target].x face_x
                                        sub face_x sprite[].x

                                        geta[cansee_target].y face_y
                                        sub face_y sprite[].y

                                        getangle cansee_temp3 face_x face_y

                                        set h_ang cansee_temp3
                                        cos h_cos h_ang
                                        sin h_sin h_ang
                                        set cansee_return_o cansee_return
                                        set cansee_return_a 0
                                        hitscan sprite[].x sprite[].y sprite[].z sprite[].sectnum h_cos h_sin h_zvel hitsect hitwall hitsprite hitx hity hitz CLIPMASK_HITSCAN
                                        ifn hitwall -1
                                            set temp4 0
                                        else ifn hitsprite cansee_target
                                        {
                                            getav[temp].actor_moveable cansee_temp
                                            ifn cansee_temp 1
                                                set temp4 0
                                        }
                                    }
                                    add temp5 4096
                                    seta[].z temp5

                                    ifl temp2 6144 ife temp4 1
                                    {
                                        ife temp3 -1
                                        {
                                            set temp3 temp2
                                            set bbomb_target temp
                                        }
                                        else ifl temp2 temp3
                                        {
                                            set temp3 temp2
                                            set bbomb_target temp
                                        }
                                        ifg bbomb_alt_mode 1
                                            set bbomb_target -1
                                    }
                                }
                                break
                        endswitch
                    }
                }

            }
        }
        ifn bbomb_target -1
            ifn bbomb_fulllock -1
                sound S_BBOMB_LOCK
    }
    set move_v bbomb_move_v
    state move_actor
    iffloordistl 1
    {
        set temp bbomb_bounce_v
        seta[].zvel temp
    }
    else
        set temp 0

    set temp2 sprite[].sectnum
    updatesector sprite[].x sprite[].y temp2
        ifn temp2 -1
            seta[].sectnum temp2

    ifl counter 2
    {
        shiftl move_xv 1
        shiftl move_yv 1
    }

    ife grenade_tumble 14
    {
        shiftl move_xv 1
        shiftl move_yv 1
    }
    geta[].x temp2
    geta[].y temp3
    geta[].z temp4
    geta[].sectnum temp5
    geta[].clipdist temp7
    clipdist 0
    movesprite THISACTOR move_xv move_yv temp CLIPMASK1 temp6
    ifg temp6 49151
    {
        sub temp6 49152
        ife actorvar[temp6].actor_crack 1
        {
            add temp6 49152
            set temp temp6
            set bbomb_interrupt temp
        }
        else
            set temp6 -1
    }
    else
        set temp6 -1
    seta[].clipdist temp7
    ife temp6 -1
    {
        setsprite THISACTOR temp2 temp3 temp4
        seta[].sectnum temp5 // saved
        movesprite THISACTOR move_xv move_yv temp CLIPMASK0 temp
        ifl temp 32768
            ifn bbomb_interrupt -1
                set temp bbomb_interrupt
    }
    ife sector[].lotag 1
    {
        set temp3 0
        getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp2
        set temp5 temp2
        ifg sprite[].zvel 0
        {
            sub temp2 sprite[].zvel
            sub temp2 sprite[].zvel
            sub temp2 GRAVITATIONALCONSTANT
        }
        for temp4 spritesofsector sprite[].sectnum
        {
            ife sprite[temp4].picnum SECTOREFFECTOR
            {
                ife sprite[temp4].lotag 7
                {
                    set temp3 2
                }
            }
        }
        ifge sprite[].z temp2
        {
            ife temp3 2
                set temp3 1
            else
            {
                geta[].zvel temp2
                shiftr temp2 1
                inv temp2
                seta[].zvel temp2
                ifge sprite[].z temp5
                    shiftr bbomb_move_v 1
                set temp3 3
            }
        }
        else iffloordistl 4
            set temp3 1
        else ifn temp3 0
            set temp3 0
        ife temp3 1
        {
            ife sprite[].zvel 0
                set temp3 0
        }

        ifn temp3 0
        {
            ifg bbomb_move_v 0
            {
                rand temp3 2
                add temp3 S_STEP_WATER_LAND1
                soundvar temp3
                espawn A_GENERIC_PARTICLE
                seta[RETURN].xrepeat 126
                getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp2
                sub temp2 256
                seta[RETURN].z temp2
            }
        }
    }

    add counter 1

    ifg counter 20
        ifn bbomb_pv 0
    {
        shiftr bbomb_pv 1
        sub bbomb_move_v bbomb_pv
    }

    ifn bbomb_target -1
    {
        ldist temp2 bbomb_target THISACTOR
        geta[].z temp5
        sub temp5 4096
        seta[].z temp5
        canseespr THISACTOR bbomb_target temp4
        ifle temp2 1024 ife temp4 1
        {
            ifle bbomb_move_v 50
                ife bbomb_delayslow 0
                    set bbomb_delayslow 10
        }
        add temp5 4096
        seta[].z temp5
        set temp3 bbomb_move_v
        abs temp3
        sub temp2 temp3

        geta[bbomb_target].picnum temp5
        set temp5 tilesizy[temp5]
        shiftl temp5 2
        mul temp5 sprite[bbomb_target].yrepeat
        set temp6 sprite[bbomb_target].z
        sub temp5 128
        sub temp6 temp5
        set temp5 0
        ifge sprite[].z temp6
        {
            ifle sprite[].z sprite[bbomb_target].z
                set temp5 1
            else
            {
                switch sprite[bbomb_target].picnum
                    case A_TURRET
                    case A_DRONE
                    case A_DEACON
                        ifge sprite[].z sprite[bbomb_target].z
                        {
                            set temp7 sprite.z
                            sub temp7 8192
                            ifle temp7 sprite[bbomb_target].z
                                ifle temp2 256
                                {
                                    ifl bbomb_move_v 40
                                    {
                                        ife sprite[bbomb_target].picnum A_DEACON
                                        {
                                            ifl temp2 48
                                                set temp5 1
                                        }
                                        else
                                            set temp5 1
                                    }
                                    else
                                    {
                                        set temp7 sprite[].z
                                        sub temp7 sprite[bbomb_target].z
                                        abs temp7
                                        ifl temp7 1536
                                            set temp5 1
                                        else ife sprite[bbomb_target].picnum A_DRONE
                                        {
                                            ifl temp7 5120
                                                set temp5 1
                                        }
                                    }
                                }
                        }
                        break
                endswitch
            }
        }
        ifl temp2 256 ife temp4 1 ife temp5 1
        {
            set temp bbomb_target
            add temp 49152
        }
    }
    ifn temp 0
    {
        ifg temp 49151
        {
            sub temp 49152
            set temp2 0
            ifand sprite[temp].cstat 256
                nullop
            else
            {
                getav[temp].bbomb_reflect temp3
                ife temp3 0
                    set temp2 1
                else
                    set temp2 0
            }

            ifg bbomb_move_v 50
            {
                ifn sprite[temp].picnum A_GLASS_PANEL
                {
                    findnearactor3d A_GLASS_PANEL 256 temp3
                    ifn temp3 -1
                    {
                        seta[temp3].htextra 1
                        rand temp3 2
                        add temp3 S_BULLET_GLASS1
                        soundvar temp3

                        set temp2 0
                    }
                }
                else
                {
                    ife sprite[temp].picnum A_GLASS_PANEL
                    {
                        seta[temp].htextra 1
                        rand temp3 2
                        add temp3 S_BULLET_GLASS1
                        soundvar temp3
                    }
                }
            }
            ife sprite[temp].picnum T_GRATE
            {
                geta[temp].pal temp3
                ifn temp3 76
                {
                    ifn temp3 77
                    {
                        getav[temp].counter temp3
                        ife temp3 0
                        {
                            set bbomb_target temp
                            setav[temp].st_do_once 2
                        }
                    }
                }
            }
            else ife sprite[temp].picnum T_FAN
            {
                geta[temp].pal temp3
                ifn temp3 76
                {
                    ifn temp3 77
                    {
                        getav[temp].counter temp3
                        ife temp3 0
                        {
                            set bbomb_target temp
                            setav[temp].st_do_once 2
                        }
                    }
                }
            }
            switch sprite[temp].picnum
                case A_BARREL_1
                case A_BARREL_2
                case A_SHOCKCANISTER
                case A_SHOCKCANISTER_DMG
                case A_FIREEXT
                case A_CANISTER_1
                case A_CANISTER_2
                case P_BOWLINGBOMB
                    ife bbomb_alt_mode 0
                        set bbomb_target temp
                    else ifn bbomb_interrupt -1
                        set bbomb_target temp
                    setav[temp].st_do_once 2
                    break
                default
                    ife actorvar[temp].actor_crack 1
                    {
                        ife bbomb_alt_mode 0
                            set bbomb_target temp
                        else ifn bbomb_interrupt -1
                            set bbomb_target temp
                        setav[temp].st_do_once 2
                    }
                    break
            endswitch
            ife temp2 0
            {
                ifpdistl 14336
                {
                    geta[temp].picnum surface_type
                    state player_footstep
                }
                getav[temp].actor_moveable temp2
                ife temp2 1
                {
                    getav[temp].actor_gib temp4
                    getav[temp].actor_moveable_xv temp2
                    set temp3 move_xv
                    shiftr temp3 1
                    ifl temp3 2 ifg temp3 -2
                        set temp3 0
                    add temp2 temp3
                    ife temp4 1
                        shiftr temp2 2
                    setav[temp].actor_moveable_xv temp2

                    getav[temp].actor_moveable_yv temp2
                    set temp3 move_yv
                    shiftr temp3 1
                    ifl temp3 2 ifg temp3 -2
                        set temp3 0
                    add temp2 temp3
                    ife temp4 1
                        shiftr temp2 2
                    setav[temp].actor_moveable_yv temp2
                }

                ifand tiledata[sprite[temp].picnum].gameflags 32
                {

                    stopactorsound THISACTOR S_BBOMB_ROLL
                    setp[].sound_pitch -1024
                    sound S_TRIFIRE4
                    setp[].sound_pitch 0
                    espawn A_EXPLOSION
                    rand temp4 8
                    add temp4 40
                    seta[RETURN].cstat 32768
                    seta[RETURN].xrepeat temp4
                    seta[RETURN].yrepeat temp4

                    geta[temp].picnum temp5
                    set temp5 tilesizy[temp5]
                    shiftl temp5 2
                    mul temp5 sprite[temp].yrepeat
                    set temp6 temp5
                    shiftr temp6 3
                    ife sprite[temp].picnum A_GREATER
                        add temp6 1024
                    sub temp5 temp6
                    set temp6 sprite[temp].z
                    sub temp6 temp5
                    set temp5 0
                    ifge sprite[].z temp6 ifn bbomb_target -1
                    {
                        ifle sprite[].z sprite[bbomb_target].z
                            set temp5 1
                        else
                            set temp5 2
                    }
                    ife temp5 0
                        seta[].z temp6
                    else ife temp5 2
                        seta[].z sprite[temp].z

                    for itervar range num_flag32
                    {
                        set temp gameflag32[itervar]
                        ifg sprite[temp].extra 0
                        {
                            ldist temp2 THISACTOR temp
                            ifl temp2 1024
                            {
                                setav[temp].enemy_init 1
                                changespritestat temp STAT_ACTOR
                                ifn bbomb_target -1
                                    ife temp bbomb_target
                                        ifg actorvar[bbomb_target].need_spot_sound -1
                                            setav[bbomb_target].need_spot_sound -30
                            }
                        }
                    }

                    state bomb_blow
                    killit
                }
                else ife temp bbomb_target
                {
                    stopactorsound THISACTOR S_BBOMB_ROLL
                    setp[].sound_pitch -1024
                    sound S_TRIFIRE4
                    setp[].sound_pitch 0
                    espawn A_EXPLOSION
                    rand temp4 8
                    add temp4 40
                    seta[RETURN].cstat 32768
                    seta[RETURN].xrepeat temp4
                    seta[RETURN].yrepeat temp4

                    geta[temp].picnum temp5
                    set temp5 tilesizy[temp5]
                    shiftl temp5 2
                    mul temp5 sprite[temp].yrepeat
                    set temp6 temp5
                    shiftr temp6 3
                    sub temp5 temp6
                    set temp6 sprite[temp].z
                    sub temp6 temp5
                    set temp5 0
                    ifge sprite[].z temp6 ifn bbomb_target -1
                    {
                        ifle sprite[].z sprite[bbomb_target].z
                            set temp5 1
                        else
                            set temp5 2
                    }
                    ife temp5 0
                        seta[].z temp6
                    else ife temp5 2
                        seta[].z sprite[temp].z

                    for itervar range num_flag32
                    {
                        set temp gameflag32[itervar]
                        ifg sprite[temp].extra 0
                        {
                            ldist temp2 THISACTOR temp
                            ifl temp2 1024
                            {
                                setav[temp].enemy_init 1
                                changespritestat temp STAT_ACTOR
                            }
                        }
                    }

                    state bomb_blow
                    killit
                }
                ifn bbomb_alt_mode 0
                    set bbomb_target -1
                set att_target temp
                set att_noclamp 1
                state angle_to_target
                add att_return sprite[].ang
                add att_return 1024
                and att_return 2047
                seta[].ang att_return
                ifn temp bbomb_target
                {
                    set temp bbomb_move_v
                    shiftr temp 3
                    ifg bbomb_move_v 0
                        sub bbomb_move_v temp
                    else
                        set bbomb_move_v 0
                }
                ifpdistl 14336
                    soundonce S_BBOMB_LAND
                espawn A_SOUND_EMITTER
                seta[RETURN].extra SE_DIST_BOMB_BOUNCE // read distance
                seta[RETURN].xrepeat 64
                seta[RETURN].yrepeat 64
                seta[RETURN].cstat 32768
            }
            else
            {
                set move_v 2
                state move_actor
                geta[].x temp
                add temp move_xv
                seta[].x temp
                geta[].y temp
                add temp move_yv
                seta[].y temp
            }
        }
        else ifg temp 32767
            ifg counter 5
        {
            sub temp 32768
            set temp4 0
            getw[temp].nextwall temp2
            ifn temp2 -1
            {
                getw[temp].nextsector temp2
                ifn temp2 -1
                {
                    getflorzofslope temp2 sprite[].x sprite[].y temp5
                    getceilzofslope temp2 sprite[].x sprite[].y temp6
                    set temp7 temp5
                    add temp7 1025
                    add temp5 256
                    sub temp6 256

                    ifl sprite[].z temp5 ifg sprite[].z temp6
                    {
                        ifand wall[temp].cstat 64
                            nullop
                        else
                        {
                            ifand wall[temp].cstat 1
                            {
                                set temp3 0
                                ifand wall[temp].cstat 16
                                    set temp3 1
                                else ifand wall[temp].cstat 32
                                    set temp3 1
                                ife temp3 1
                                {
                                    switch wall[temp].overpicnum
                                        default
                                            set temp4 0
                                            break
                                    endswitch
                                }
                            }
                            else
                                set temp4 1
                        }
                    }
                    else ifl sprite[].z temp7 ifg sprite[].z temp6
                    {
                        ifand wall[temp].cstat 64
                            nullop
                        else
                        {
                            ifand wall[temp].cstat 1
                            {
                                set temp3 0
                                ifand wall[temp].cstat 16
                                    set temp3 1
                                else ifand wall[temp].cstat 32
                                    set temp3 1
                                ife temp3 1
                                {
                                    switch wall[temp].overpicnum
                                        default
                                            set temp4 0
                                            break
                                    endswitch
                                }
                            }
                            else
                                set temp4 2
                        }
                    }
                }
            }
            ife temp4 0
            {
                ifpdistl 14336
                {
                    getw[temp].picnum surface_type
                    state player_footstep
                }
                // get the angle of a wall, rotated by 90 degrees to be the proper surface
                getw[temp].x temp2
                getw[temp].y temp3
                getw[temp].point2 temp4
                getw[temp4].x temp5
                getw[temp4].y temp6
                sub temp2 temp5
                sub temp3 temp6
                getangle temp temp2 temp3
                add temp 512
                and temp 2047

                // get the difference in angle between this actor and the wall it hit
                geta[].ang att_return
                sub att_return temp
                ifg att_return 1023
                    sub att_return 2048
                ifl att_return -1023
                    add att_return 2048

                // add and reverse
                geta[].ang temp
                add temp att_return
                abs att_return
                add att_return 512
                mod att_return 1024
                ifl att_return 640 // make sure we preserve direction when off axis
                    add temp 1024
                and temp 2047
                seta[].ang temp
                set temp bbomb_move_v
                shiftr temp 3
                ifg bbomb_move_v 0
                    sub bbomb_move_v temp
                else
                    set bbomb_move_v 0
                ifpdistl 14336
                    soundonce S_BBOMB_LAND
                espawn A_SOUND_EMITTER
                seta[RETURN].extra SE_DIST_BOMB_BOUNCE_WALL // read distance
                seta[RETURN].xrepeat 64
                seta[RETURN].yrepeat 64
                seta[RETURN].cstat 32768
            }
            else ife temp4 1
            {
                sub temp5 256
                add temp6 256
                    ifg sprite[].z temp5
                        seta[].z temp5
                    else ifl sprite[].z temp6
                        seta[].z temp6
                set temp bbomb_move_v
                shiftr temp 2
                sub temp bbomb_move_v
                abs temp
                clamp temp 2 160
                set move_v temp
                state move_actor
                geta[].x temp
                add temp move_xv
                seta[].x temp
                geta[].y temp
                add temp move_yv
                seta[].y temp
            }
            else iffloordistl 4
            {
               seta[].zvel -512
               seta[].xvel 0
               ssp THISACTOR CLIPMASK0
            }
        }
    }
    else
    {
        set temp sprite[].sectnum
        updatesector sprite[].x sprite[].y temp
        ifn temp -1
            seta[].sectnum temp
        ifg counter 5
        {
            getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp
            sub temp 512
            ifand sector[].floorstat 2 ifg sprite[].z temp
            {
                gets[].wallptr temp
                getw[temp].x temp2
                getw[temp].y temp3
                getw[temp].point2 temp4
                getw[temp4].x temp5
                getw[temp4].y temp6
                sub temp2 temp5
                sub temp3 temp6
                getangle temp temp2 temp3
                add temp 1536
                ifl sector[].floorslope 0
                    add temp 1024
                and temp 2047

                // get the difference in angle between this actor and the wall it hit
                geta[].ang att_return

                sub att_return temp
                ifg att_return 1023
                    sub att_return 2048
                ifl att_return -1023
                    add att_return 2048

                // add and reverse
                geta[].ang temp
                gets[].floorslope temp2
                abs temp2
                shiftr temp2 8
                 ife temp2 0
                   set temp2 1

                set temp4 att_return
                abs temp4
                ifl temp4 768
                {
                    gets[].floorslope temp4
                    abs temp4
                    shiftr temp4 9
                    mul temp4 15
                    clamp temp4 0 119
                    ifl bbomb_move_v temp4
                    {
                        add bbomb_move_v 2
                        ifle bbomb_move_v 17
                        {
                            ife bbomb_alt_mode 0 ife bbomb_gold 0 ifpdistl RETRIEVEDISTANCE
                                ifp palive
                                    ifcount 6
                                        ifcanseetarget
                                        {
                                            ife player[].curr_weapon 0
                                            {
                                                getp[].weaponswitch temp6
                                                ife player[].gotweapon WEAPON_BOWLINGBOMB 1
                                                    setp[].weaponswitch 0
                                                addweapon WEAPON_BOWLINGBOMB 1
                                                setp[].weaponswitch temp6
                                            }
                                            else
                                                addweapon WEAPON_BOWLINGBOMB 1
                                            quote 69
                                            palfrom 15 5 32 5
                                            globalsound S_BBOMB_THROW
                                            globalsound S_BBOMB_LAND
                                            killit
                                        }
                        }
                    }
                }
                else
                {
                    gets[].floorslope temp4
                    abs temp4
                    ifl bbomb_move_v 2 ifg temp4 512
                        add bbomb_move_v 1
                }
                set temp3 bbomb_move_v
                clamp temp3 1 120
                div temp3 8
                clamp temp3 1 120
                div att_return temp3
                clamp att_return -temp2 temp2
                sub temp att_return
                and temp 2047
                seta[].ang temp
            }
        }
    }
    // slow over time
    ifg bbomb_move_v 0
    {
        ifn bbomb_delayslow 0
            sub bbomb_move_v 1
        else
        {
            sub bbomb_delayslow 1
            ife bbomb_delayslow 1
                sub bbomb_move_v 1
        }
    }
    else
        set bbomb_move_v 0

    // this code block prevents glitches on ceilings
    getceilzofslope sprite[].sectnum sprite[].x sprite[].y temp
    add temp 4096
    ifand sector.ceilingstat 1024
    {
        ifand temp 2048
            nullop
        else
            set temp sprite.z
    }
    ifl sprite[].z temp
    {
        set temp2 0
        getsector[].ceilingstat temp3
        ifand temp3 2
        {
            getsector[].ceilingslope temp3
            ifl temp3 2048 ifg temp3 -2048
                set temp2 1
        }
        else
            set temp2 1
        ifn temp2 0
        {
            seta[].z temp
            geta[].zvel temp
            set temp2 bbomb_move_v
            add temp temp2
            seta[].zvel temp
            set temp sprite[].sectnum
            updatesectorz sprite[].x sprite[].y sprite[].z temp
            ifn bbomb_lastsect temp
            {
                geta[].ang temp
                add temp 1024
                and temp 2047
                seta[].ang temp
            }
        }
    }

    fall

    ifn exp_aftershock 0
        state ashock_goldbbomb_check
    else
        state fury_goldbbomb_check

    ifpdistl 1024
    {
        ifl counter 30
            cstat 256
        else ifcount 30
            cstat 256
    }
    else ifcount 1
        cstat 257

    ifle bbomb_move_v 0
        ifactioncount 8
            action AC_BOWLINGBOMB_IDLE


    ifg sprite[].zvel 0 ife bbomb_bounce_v 0 iffloordistl 2 ifcount 10
    {
        geta[].zvel bbomb_bounce_v
        inv bbomb_bounce_v
    }
    iffloordistl 1
    {
        ifg bbomb_bounce_snd 3
        {
            ifpdistl 14336
            {
                sound S_BBOMB_LAND
                gets[].floorpicnum surface_type
                state player_footstep
                espawn A_SOUND_EMITTER
                seta[RETURN].extra SE_DIST_BOMB_BOUNCE // read distance
                seta[RETURN].xrepeat 64
                seta[RETURN].yrepeat 64
                seta[RETURN].cstat 32768
            }
        }
        else ifg bbomb_move_v 20
        {
            ifpdistl 14336
            {
                soundonce S_BBOMB_ROLL
                ife sprite.htg_t 3 1
                {
                    espawn A_SOUND_EMITTER
                    seta[RETURN].extra SE_DIST_BOMB_BOUNCE // read distance
                    seta[RETURN].xrepeat 64
                    seta[RETURN].yrepeat 64
                    seta[RETURN].cstat 32768
                }
            }
            else
                stopactorsound THISACTOR S_BBOMB_ROLL
        }
        else ifl bbomb_move_v 10
                stopactorsound THISACTOR S_BBOMB_ROLL
        set bbomb_bounce_snd 0
    }
    else
        add bbomb_bounce_snd 1

    ifn bbomb_bounce_v 0 iffloordistl 1
    {
        mul bbomb_bounce_v 7
        div bbomb_bounce_v 13
    }


    ifge bbomb_move_v 4 ifg counter 1
    {
        ife bbomb_fulllock 1
        {
            ife bbomb_gold 1
                ifspritepal 103
                    spritepal 0
            ifspritepal 0
                spritepal 64
            else ifspritepal 64
                spritepal 73
            else spritepal 0
            ife bbomb_gold 1
                ifspritepal 0
                    spritepal 103
        }
        else
        {
            ife bbomb_gold 1
                ifspritepal 103
                    spritepal 0
            ifspritepal 0
            {
                ifn bbomb_fulllock -1
                {
                    ifn bbomb_target -1
                        spritepal 73
					else ife bbomb_fulllock 0 
						ifg bbomb_move_v 6
                        {
                            ifg sector.floorshade 15
                                spritepal 63
                            else
                            {
                                ifoutside
                                {
                                    ifg sector.ceilingshade 15
                                        spritepal 63
                                    else
                                        spritepal 64
                                }
                                else
                                    spritepal 64
                            }
                        }
                }
            }
            else spritepal 0
            ife bbomb_gold 1
                ifspritepal 0
                    spritepal 103
        }
        ifg bbomb_alt_mode 1
        {
            ifrnd 16
            {
                espawn A_SMOKE2
                seta[RETURN].xrepeat 16
                seta[RETURN].yrepeat 16
            }
            else
            {
                espawn A_GENERIC_PARTICLE
                seta[RETURN].xrepeat 129
                seta[RETURN].yrepeat 16
                ifrnd 16
                {
                    espawn A_SMOKE2
                    seta[RETURN].xrepeat 16
                    seta[RETURN].yrepeat 16
                }
            }
            state bomb_alt_blink
        }
        else
        {
            espawn A_GENERIC_PARTICLE
            seta[RETURN].xrepeat 127
            seta[RETURN].yrepeat 16
        }
        seta[RETURN].owner THISACTOR
        set temp bbomb_move_v
        shiftr temp 2
        seta[RETURN].xvel temp
        geta[].zvel temp
        div temp 3
        abs temp
        inv temp
        seta[RETURN].zvel temp
        ssp RETURN 0
        geta[].ang temp
        add temp 512
        and temp 2047
        seta[RETURN].ang temp
        geta[].z temp
        sub temp 1280
        seta[RETURN].z temp
		
		ifn exp_aftershock 0
			state ashock_goldbbomb_zposupdate
    }
    else ifg counter 5
        set bbomb_move_v 0
enda

// commented out this entire cyclone block for the demo

spritenoshade A_FIRECYCLONE
spritenopal A_FIRECYCLONE
action AC_FIRECYCLONE_SPIN 0 26 1 1 1
appendevent EVENT_SPAWN
    ifactor A_FIRECYCLONE
    {
        seta[].cstat 2
        seta[].blend 129
        seta[].shade 32
        sizeat 16 16
        spritepal 62 // temporary?
    }
endevent

spritenoshade A_FIRE_SPARK
spritenopal A_FIRE_SPARK
action AC_FLAMECYCLONEBURST 0 13 1 1 1
appendevent EVENT_EGS
    ifactor A_FIRE_SPARK
        geta .owner tp_owner
endevent

var burstemp

appendevent EVENT_SPAWN
    ifactor 6186
    {
        espawn A_FIRE_SPARK
        seta .xrepeat 1
        seta .yrepeat 1
        cstat 32768
        seta .blend 129
        seta .shade 15
    }
endevent

eventloadactor A_FIRE_SPARK
    cstat 32768
enda
useractor notenemy A_FIRE_SPARK 0 AC_FLAMECYCLONEBURST
    ifl st_do_once -1
    {
        cstat 32768
        rand temp 2047
        seta .ang temp
        rand temp 32
        seta .xvel 32
        rand temp 511
        sub temp 255
        seta .zvel temp
        ssp THISACTOR 0
        add st_do_once 1
        sizeat 1 1
        resetactioncount
        break
    }

    ife st_do_once 0
    {
        getu[].vm_distance temp

        set temp2 tilesizx[sprite.picnum]
        mul temp2 sprite.xrepeat
        shiftl temp2 7
        set temp3 temp2
        shiftr temp3 1
        add temp2 temp3

        ifg temp temp2
            killit
        cstat 32768
        set st_do_once 1
        ifle tp_owner -1
            set tp_owner THISACTOR
        rand temp 2047
        seta .ang temp
        set temp tilesizx[sprite[tp_owner].picnum]
        mul temp sprite[tp_owner].xrepeat
        shiftr temp 2
        shiftr temp 2

        rand move_v temp
        shiftr temp 1
        add move_v temp
        state move_actor
        add move_xv sprite[tp_owner].x
        add move_yv sprite[tp_owner].y

        set temp tilesizy[sprite[tp_owner].picnum]
        shiftl temp 2
        mul temp sprite[tp_owner].yrepeat
        rand temp2 temp
        geta[tp_owner].z temp
        sub temp temp2
		
		setsprite THISACTOR move_xv move_yv temp

        geta .ang temp4
        geta[tp_owner].x face_x
        sub face_x sprite .x

        geta[tp_owner].y face_y
        sub face_y sprite .y

        getangle face_return face_x face_y

        sub face_return 256
        and face_return 2047
        seta .ang face_return
        rand temp 15
        add temp 50
        seta .xvel temp
        set counter2 -temp
        rand counter3 1
        add counter3 3
        shiftl temp 4
        inv temp
        seta .zvel temp
    }
    else
    {
        getu[].vm_distance temp

        set temp2 tilesizx[sprite.picnum]
        mul temp2 sprite.xrepeat
        shiftl temp2 6
        ifg temp temp2
        {
            geta .htg_t 2 temp
            add temp 1
            seta .htg_t 2 temp
            seta .htg_t 3 temp
        }
    }
    ifactioncount 3
        cstat 130
    ifactioncount 13
        killit
    ifl sprite[].shade -72
    {
        geta[].shade temp
        sub temp 2
        seta[].shade temp
    }
    ssp THISACTOR 0
    geta .zvel temp
    ifg temp 0
        sub temp 1
    ifl st_do_once 0
        ifg temp -1024
            sub temp 256
    seta .zvel temp
    geta .xvel temp
    ifactioncount 2
        ifg temp counter2
        {
            set temp2 counter2
            shiftr temp2 counter3
            add temp temp2
            ifle temp counter2
                inv counter2
        }
    seta .xvel temp
enda

spritenoshade 6705
spritenopal 6705
action AC_FLAMECYCLONESMOKE 0 1 1 1 1
useractor notenemy 6705 0 AC_FLAMECYCLONESMOKE
    ife counter 21
        killit

    geta[].shade temp
    ifle counter 10
        sub temp 1
    else
        add temp 1
    seta[].shade temp
    geta[].xrepeat temp
    add temp 4
    seta[].xrepeat temp
    seta[].yrepeat temp
    ssp THISACTOR 0
    add counter 1
enda


useractor notenemy 7103
    ifl sprite[].xrepeat 32 killit
enda

var flame_child 0 2
useractor notenemy A_FIRECYCLONE 0 AC_FIRECYCLONE_SPIN
    ife counter 0
    {
        espawn 7103
        set flame_child RETURN
    }
    seta[flame_child].cstat sprite[].cstat
    seta[flame_child].blend sprite[].blend
    seta[flame_child].shade sprite[].shade
    seta[flame_child].xrepeat sprite[].xrepeat
    seta[flame_child].yrepeat sprite[].yrepeat
    seta[flame_child].x sprite[].x
    seta[flame_child].y sprite[].y
    rand temp 2047
    ifrnd 127
        inv temp // mul temp -1
    add temp sprite[].z
    seta[flame_child].z temp
    seta[flame_child].sectnum sprite[].sectnum
	
	ifand counter 1 {
		ifrnd 64
		{
			espawn A_FIRE_SPARK
			seta[RETURN].xrepeat 1
			seta[RETURN].yrepeat 1
			seta[RETURN].cstat 130
			seta[RETURN].blend 129
			seta[RETURN].shade 15

			rand temp 2047
			seta[RETURN].ang temp
			set move_override RETURN
			rand move_v 512

			geta[].xrepeat temp
			shiftl temp 3
			add move_v temp
			state move_actor
			add move_xv sprite[].x
			add move_yv sprite[].y
			seta[RETURN].x move_xv
			seta[RETURN].y move_yv

			geta[].yrepeat temp
			shiftl temp 9
			rand temp2 temp
			geta[].z temp
			sub temp temp2
			seta[RETURN].z temp


			geta[RETURN].ang temp4
			geta[].x face_x
			sub face_x sprite[RETURN].x

			geta[].y face_y
			sub face_y sprite[RETURN].y

			getangle face_return face_x face_y

			sub face_return 256
			and face_return 2047
			seta[RETURN].ang face_return
			rand temp 15
			add temp 50
			seta[RETURN].xvel temp

		}

		ifrnd 32
		{
			espawn 6705
			seta[RETURN].xrepeat 32
			seta[RETURN].yrepeat 32
			seta[RETURN].cstat 130
			seta[RETURN].blend 129
			seta[RETURN].shade 30

			rand temp 2047
			seta[RETURN].ang temp
			set move_override RETURN
			rand move_v 512

			geta[].xrepeat temp
			shiftl temp 3
			add move_v temp
			state move_actor
			add move_xv sprite[].x
			add move_yv sprite[].y
			seta[RETURN].x move_xv
			seta[RETURN].y move_yv

			geta[].yrepeat temp
			shiftl temp 9
			rand temp2 temp
			geta[].z temp
			sub temp temp2
			sub temp 2048
			seta[RETURN].z temp


			geta[RETURN].ang temp4
			geta[].x face_x
			sub face_x sprite[RETURN].x

			geta[].y face_y
			sub face_y sprite[RETURN].y

			getangle face_return face_x face_y

			sub face_return 128
			and face_return 2047
			seta[RETURN].ang face_return
			rand temp 15
			add temp 50
			seta[RETURN].xvel temp
		}
	}
	
    iffloordistl 1
    {
        getflorzofslope sprite[].sectnum sprite[].x sprite[].y temp

        geta[].z temp2
        ifl temp2 temp
        {
            set temp4 GRAVITATIONALCONSTANT
            shiftl temp4 2
            add temp2 temp4
            ifg temp2 temp
                set temp2 temp
            seta[].z temp2
        }
        else
            seta[].z temp
    }
    else
    {
        fall
        seta[].zvel 512
    }

    ifle counter 90
    {
        espawn A_SOUND_EMITTER
        seta[RETURN].extra 8192 // read distance
        seta[RETURN].xrepeat 64
        seta[RETURN].yrepeat 64
        seta[RETURN].yrepeat 32768
        ifl counter 32
        {
            ifl sprite[].yrepeat 80
            {
                geta[].yrepeat temp
                add temp 2
                ifle temp 72
                    seta[].xrepeat temp
                seta[].yrepeat temp
            }
            geta[].shade temp
            sub temp 2
            ifl temp 0
                set temp -127
            seta[].shade temp
        }

        ifpdistl AM_FIRECYCLONE_PULLDIST
        {
            getplayer[].i temp
            geta[].ang temp4

            set face_target player[].i
            state face_actor
            seta[].ang face_return
			sub face_return 1024
			and face_return 2047

            ldist temp2 temp THISACTOR
            sub temp2 AM_FIRECYCLONE_PULLDIST
            inv temp2
            shiftr temp2 3
			ifrnd 127
				shiftr temp2 1
			
            set move_v temp2
            cos move_xv face_return
            sin move_yv face_return
            mul move_xv move_v
            mul move_yv move_v
			shiftr move_xv 4
			shiftr move_yv 4
			ifn playervar.cyclone_mod_xv 0
			{
				add move_xv playervar.cyclone_mod_xv
				setpv .cyclone_mod_xv 0
			}
			ifn playervar.cyclone_mod_yv 0
			{
				add move_yv playervar.cyclone_mod_yv
				setpv .cyclone_mod_yv 0
			}
			add move_xv player.posxv
            add move_yv player.posyv
            setp .posxv move_xv
            setp .posyv move_yv

            getpv .cyclone_mod_xv temp2
            sub temp2 move_xv
            clamp temp2 -50 50
            setpv .cyclone_mod_xv temp2

            getpv .cyclone_mod_yv temp2
            sub temp2 move_yv
            clamp temp2 -50 50
            setpv .cyclone_mod_yv temp2

            add face_return -512
            and face_return 2047

            seta[].ang face_return

            shiftr move_v 1
            cos move_xv face_return
            sin move_yv face_return
            mul move_xv move_v
            mul move_yv move_v
			shiftr move_xv 4
			shiftr move_yv 4
			ifn playervar.cyclone_mod_xv 0
			{
				add move_xv playervar.cyclone_mod_xv
				setpv .cyclone_mod_xv 0
			}
			ifn playervar.cyclone_mod_yv 0
			{
				add move_yv playervar.cyclone_mod_yv
				setpv .cyclone_mod_yv 0
			}
			add move_xv player.posxv
            add move_yv player.posyv
			setp .posxv move_xv
            setp .posyv move_yv

            getpv .cyclone_mod_xv temp2
            sub temp2 move_xv
            clamp temp2 -50 50
            setpv .cyclone_mod_xv temp2

            getpv .cyclone_mod_yv temp2
            sub temp2 move_yv
            clamp temp2 -50 50
            setpv .cyclone_mod_yv temp2

            seta[].ang temp4
        }
    }
    else ifg counter 90
    {
        ifg sprite[].yrepeat 8
        {
            geta[].yrepeat temp
            sub temp 2
            seta[].xrepeat temp
            seta[].yrepeat temp
        }
        ifl sprite[].shade 24
        {
            geta[].shade temp
            add temp 5
            seta[].shade temp
        }
    }
	ifand counter 1
		hitradius 1444 2 3 4 5
    add counter 1
    ifg counter 120
        killit
enda
// J.S NOTE: I just went ahead and used this as the base for everything and offset
define LOVERBOY_X 220
define LOVERBOY_Y 265

var get_aaa_temp
appendevent EVENT_GETAUTOAIMANGLE
    ifn player_target -1
        set AUTOAIMANGLE 0
    else
    {
        ife player[].curr_weapon WEAPON_SHOTGUN ife w2alt 30
        {
            ife player[].aim_mode 1
                set AUTOAIMANGLE 0
            else
                set AUTOAIMANGLE 12
        }
        else ife player[].curr_weapon WEAPON_GRENADE
        {
            ife player[].aim_mode 1
                set AUTOAIMANGLE 0
            else
                set AUTOAIMANGLE 12
        }
        else ife player[].curr_weapon WEAPON_LAM
        {
            ife player[].aim_mode 1
                set AUTOAIMANGLE 0
            else
                set AUTOAIMANGLE 12
        }
        else ife player[].curr_weapon WEAPON_CROSSBOW
        {
			geti .avel get_aaa_temp
            abs get_aaa_temp
            ife player[].aim_mode 1
                set AUTOAIMANGLE 36
            else
                set AUTOAIMANGLE 72
			ifl get_aaa_temp 32
                ifl sprite.xvel 32
                {
                    ife player[].aim_mode 1
                        set AUTOAIMANGLE 24
                    else
                        set AUTOAIMANGLE 48
                }
        }
        else
        {
            ife player[].aim_mode 1
                set AUTOAIMANGLE 24
            else
                set AUTOAIMANGLE 48
        }
    }

    ife player[].curr_weapon WEAPON_LOVERBOY
    {
        rand WEAPON1_FIRESOUND AM_S_TRI_RAND
        add WEAPON1_FIRESOUND AM_S_TRIFIRE_1
        ifn fuckup_aim 0
            set AUTOAIMANGLE 0
    }
    else ife player[].curr_weapon WEAPON_SHOTGUN
    {
		rand WEAPON2_FIRESOUND AM_S_SHOTGUN_RAND
		add WEAPON2_FIRESOUND AM_S_SHOTGUNFIRE_1
		
		// needs its own var as it messes with other things -- player randomly looked a certain angle for ex
		set am_p_aa 0
		// running out of ammo shouldn't play cocking sound
        ife p_usedammotype AM_AMMOTYPE_NORMALSHELL {
			ife weapon2_realclip SHOTGUN_CLIP
				set am_p_aa 1
			else ife player.ammo_amount WEAPON_SHOTGUN 0
				set am_p_aa 1
		}
        else ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL {
			ife p_explosiveshell_clip SHOTGUN_CLIP
				set am_p_aa 1
			else ife p_explosiveshells 0
				set am_p_aa 1
		}
		else ife p_usedammotype AM_AMMOTYPE_GRENADE {
			ife p_grenade_clip SHOTGUN_CLIP
				set am_p_aa 1
			else ife p_grenades 0
				set am_p_aa 1
		}
		
		ife am_p_aa 1
			set WEAPON2_SOUND2SOUND 0
		else
            set WEAPON2_SOUND2SOUND S_SHOTGUN_RELOAD1
    }
    else ife player[].curr_weapon WEAPON_GRENADE
    {
        ife weapon6_realclip SHOTGUN_CLIP
            set WEAPON6_SOUND2SOUND 0
        else ife player.ammo_amount WEAPON_GRENADE 0
			 set WEAPON6_SOUND2SOUND 0
		else
            set WEAPON6_SOUND2SOUND S_SHOTGUN_RELOAD1

    }
endevent


appendevent EVENT_RESETWEAPONS
    setp[].ammo_amount WEAPON_LOVERBOY 60
    setp[].ammo_amount 0 0
    /* setp[].ammo_amount 9 1 */ // old force for our internal weapon presentation hacks
    /* setp[].gotweapon 9 1 */ // weapon frame tester doesn't belong in demo
endevent

appendevent EVENT_GETSHOTRANGE
    ife player[].curr_weapon WEAPON_LOVERBOY
    {
        set ANGRANGE 8
        set ZRANGE 64
    }
    else ife player[].curr_weapon WEAPON_SHOTGUN
    {
        set ANGRANGE 24
        set ZRANGE 200
    }
    else ife player[].curr_weapon WEAPON_GRENADE
    {
        set ANGRANGE 24
        set ZRANGE 200
    }
    else ife player[].curr_weapon WEAPON_MINIGUN
    {
        set ANGRANGE player[].kickback_pic
        set ZRANGE player[].kickback_pic
        shiftl ANGRANGE 3
        div ANGRANGE 9
        mul ZRANGE 7
    }
    else ife player[].curr_weapon WEAPON_SMG
    {
        ifl fuckup_aim2 3
        {
            set ANGRANGE 8
            set ZRANGE 64
        }
        else
        {
            set ANGRANGE 6
            set ZRANGE 48
        }
    }
endevent

appendevent EVENT_WEAPKEY1
    state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY2
	set temp WEAPON_LOVERBOY
    state noweapon
    state clear_weapon_charges
endevent
appendevent EVENT_WEAPKEY3
    ifn exp_aftershock 0
        state ashock_event_weapkey3
    else
        state fury_event_weapkey3
endevent

appendevent EVENT_WEAPKEY4
   set temp WEAPON_SMG
   ife player[].curr_weapon WEAPON_SMG ife show_debug_menu 0 ife p_laddermounted 0
   {
        set temp2 player[].weapon_pos
        abs temp2
        ifg temp2 5
            set press_alt 20
        else
            set press_alt 3
   }
   state noweapon
   state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY5
    set temp WEAPON_MINIGUN
    state noweapon
    state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY6
    set temp WEAPON_BOWLINGBOMB
    state noweapon
	state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY7
	set RETURN -1
	/*
    set temp WEAPON_GRENADE
    ife player[].curr_weapon WEAPON_SHOTGUN ife show_debug_menu 0
    {
        ifg player.ammo_amount WEAPON_GRENADE 0
        {
            ife p_have_dart 0
                set press_alt 20
            set RETURN -1
        }
    }
    else ife show_debug_menu 0
        set w2alt 30
    state noweapon
    ife player[].curr_weapon 5
        setp[].kickback_pic 0*/
endevent

appendevent EVENT_WEAPKEY8
	set temp WEAPON_CROSSBOW
	state noweapon
	state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY9
	set temp WEAPON_LAM
	state noweapon
	state clear_weapon_charges
endevent

appendevent EVENT_WEAPKEY10
    ifn exp_aftershock 0
        state ashock_event_weapkey10
    else
        state fury_event_weapkey10
endevent

appendevent EVENT_CHANGEWEAPON
    set p_roll_fast 1
    ife minigun 1
        set RETURN -1
    else ifg p_pup_bomb_time 0
        set RETURN -1
    else ife p_laddermounted 1
        set RETURN -1
	
	// disable it
	ife RETURN WEAPON_GRENADE
		set RETURN -1
    ife RETURN 11
    {
        set RETURN -1
        setplayer[].curr_weapon 6
        setp[].curr_weapon 6
        setp[].wantweaponfire 6
    }

endevent

var weaponcycle -1 0
var weaponlast -1 0
var weapon_fire 0 1
var weapon_dnu 0 1
appendevent EVENT_PROCESSINPUT
    geti .bits temp
    ifand temp INPUT_FIRE
        set weapon_fire 2
    ifg p_pup_reset_fire 0
    {
        geti .bits temp2
        ifand temp2 INPUT_FIRE
        {
            xor temp2 INPUT_FIRE
            seti .bits temp2
        }
    }
    geti .bits temp
    shiftr temp 8
    and temp 0xF
    switch temp
        case 1
        case 2
        case 3
        case 4
        case 5
        case 6
        case 7
        case 8
        case 9
        case 10
        case 11
        case 12
            geti .bits temp2
            ifand temp2 INPUT_FIRE ife player.curr_weapon 5
            {
                xor temp2 INPUT_FIRE
                seti .bits temp2
            }
            break
    endswitch
    getinput[].bits temp2
    ifn player.weapon_pos 0 // cancel fire when weapon is lowering
    {
        set temp player.weapon_pos
        abs temp
        ife player.curr_weapon WEAPON_SHOCKER
        {
            
            ifn p_have_dart 0
                set weapon_dnu -1
            else ife minigun 1
                set weapon_dnu -1
            else ifg p_pup_bomb_time 0
                set weapon_dnu -1
            else ife p_laddermounted 1
                set weapon_dnu -1
            ifn player.last_weapon -1
                set weapon_dnu -1
            ifl temp weapon_dnu
            {
                ifg temp 2
                {
                    ifand temp2 INPUT_FIRE
                    {
                        xor temp2 INPUT_FIRE
                        seti .bits temp2
                    }
                }
                else
                {
                    ifand temp2 INPUT_FIRE
                    {
                        setp .weapon_pos 0
                        setp .kickback_pic 1
                    }
                }
            }
            else ifand temp2 INPUT_FIRE
            {
                xor temp2 INPUT_FIRE
                seti .bits temp2
            }
            set weapon_dnu temp
        }
        else ifand temp2 INPUT_FIRE
        {
            xor temp2 INPUT_FIRE
            seti .bits temp2
        }
    }
    
    
endevent
appendevent EVENT_SELECTWEAPON
    ifn p_have_dart 0
    {
        set RETURN -1
        break
    }
    ifl flash_weapons 3
        set flash_weapons 30
    else ifl flash_weapons 27
        set flash_weapons 27
    ife minigun 1
        set RETURN -1
    else ifg p_pup_bomb_time 0
        set RETURN -1
    else ife p_laddermounted 1
        set RETURN -1
    getp[].weapon_pos temp
    abs temp
    ifg fade_amount 32
        set temp -1
    else ifn need_eol 0
        set temp -1
    else ifn p_eol 0
        set temp -1
    set p_quickbaton 0
    set press_kick 0
    /*ife player.curr_weapon WEAPON_GRENADE
    {
        ife RETURN WEAPON_SHOTGUN
        {
            set press_alt 20
            set temp -1
        }
    }
    else ife player.curr_weapon WEAPON_SHOTGUN
    {
        ife RETURN WEAPON_GRENADE
        {
            set press_alt 20
            set temp -1
        }
    }*/
	
	/*ifn exp_aftershock 0
        state ashock_swap_shot_gren
    else
        state fury_swap_shot_gren*/

    ifl temp 0
    {
        set weaponcycle 0
        set weaponlast -1
        set RETURN -1
        break
    }
    
    ifn weaponlast 0
    {
        ife weaponcycle 1
        {
            ife RETURN WEAPON_GRENADE
                set w2alt 30
            else ife RETURN WEAPON_SHOTGUN
                set w2alt 0
            ifg RETURN player[].curr_weapon
                set RETURN 0
            else ife RETURN player[].curr_weapon
                set RETURN 0
            set weaponcycle 0
            set weaponlast -1
        }
        else ife weaponcycle 2
        {
            ife RETURN WEAPON_GRENADE
                set w2alt 30
            else ife RETURN WEAPON_SHOTGUN
                set w2alt 0
            ifl RETURN player[].curr_weapon
                set RETURN 0
            else ife RETURN player[].curr_weapon
                set RETURN 0
            set weaponcycle 0
            set weaponlast -1
        }
    }
    else
    {
        set weaponcycle 0
        set weaponlast -1
    }
endevent

defstate confirm_weapon_swap
	ife p_weaponcycle WEAPON_SHOCKER
		set p_weaponcycle_result 1
	else ifg player[].ammo_amount p_weaponcycle 0 
		set p_weaponcycle_result 1

	ife p_weaponcycle_result 1 {
		set RETURN p_weaponcycle
		set p_weaponcycle -1
	}
ends

appendevent EVENT_PREVIOUSWEAPON
    ife minigun 1
        set RETURN -1
    else ifg p_pup_bomb_time 0
        set RETURN -1
    else ife p_laddermounted 1
        set RETURN -1
	// skip weapon slot 7 for now
	set p_weaponcycle player[].curr_weapon
	set p_weaponcycle_result 0
	whilevarn p_weaponcycle -1 {
		sub p_weaponcycle 1
		ifl p_weaponcycle 0
			set p_weaponcycle WEAPON_LAM
		ife player[].gotweapon p_weaponcycle 1 ifn p_weaponcycle WEAPON_GRENADE ifn p_weaponcycle player[].curr_weapon
			state confirm_weapon_swap
	}
    set weaponlast player[].curr_weapon
    set weaponcycle 1
    state clear_weapon_charges
endevent

appendevent EVENT_NEXTWEAPON
    ife minigun 1
        set RETURN -1
    else ifg p_pup_bomb_time 0
        set RETURN -1
    else ife p_laddermounted 1
        set RETURN -1
	// skip weapon slot 7 for now
	set p_weaponcycle player[].curr_weapon
	set p_weaponcycle_result 0
	whilevarn p_weaponcycle -1 {
		add p_weaponcycle 1
		ifg p_weaponcycle WEAPON_LAM
			set p_weaponcycle WEAPON_SHOCKER
		ife player[].gotweapon p_weaponcycle 1 ifn p_weaponcycle WEAPON_GRENADE ifn p_weaponcycle player[].curr_weapon
			state confirm_weapon_swap
	}
    set weaponlast player[].curr_weapon
    set weaponcycle 2
    state clear_weapon_charges
endevent

var gtest // enable guntest
appendevent EVENT_WEAPKEY9
    // set RETURN -1
    ife gtest 1
        setp[].curr_weapon 9
endevent

appendevent EVENT_WEAPKEY10
   //  set RETURN -1
endevent

// fast reload skipping during weapon change

defstate do_fast_reload
    ifg RETURN -1
        state skip_reload
ends

appendevent EVENT_PREVIOUSWEAPON state do_fast_reload endevent
appendevent EVENT_NEXTWEAPON state do_fast_reload endevent
appendevent EVENT_QUICKKICK state do_fast_reload endevent
/*
moved 3 weapon keys from here because they are used for the special ammo menu
the fast reload gimmick messes it up
*/
appendevent EVENT_WEAPKEY4 state do_fast_reload endevent
appendevent EVENT_WEAPKEY5 state do_fast_reload endevent
appendevent EVENT_WEAPKEY6 state do_fast_reload endevent
appendevent EVENT_WEAPKEY7 state do_fast_reload endevent
appendevent EVENT_WEAPKEY8 state do_fast_reload endevent
appendevent EVENT_WEAPKEY9 state do_fast_reload endevent
appendevent EVENT_WEAPKEY10 state do_fast_reload endevent

// weapon code
onevent EVENT_DOFIRE
    ife player[].curr_weapon WEAPON_LOVERBOY
    {
        ifn fuckup_aim 0
        {
            getp[].q16horiz temp
            set temp2 fuckup_aim
            shiftl temp2 15
            sub temp temp2
            setp[].q16horiz temp
            getp[].q16ang temp
            sub temp temp2
            setp[].q16ang temp
            setprojectile[P_LOVERBOY].extra_rand 0
        }
        set pistol_interrupt 1
    }
    else ife player[].curr_weapon WEAPON_SMG
    {
        /* redefinequote 11 %ld
        qsprintf 11 11 weaponcount
            setp[myconnectindex].ftq 11
            setp[myconnectindex].fta 99 */
        ifn fuckup_aim2 0
        {
            getprojectile[P_SMG2].extra smg_extra
            getprojectile[P_SMG2].extra_rand smg_extra_rand
            set fuckup_aim2_r 1
            /*getp[].horiz temp
            set temp2 fuckup_aim2
            set temp3 temp2
            shiftr temp3 3
            add temp2 temp3
			inv temp2
            shiftl temp2 16
            add temp temp2
            setp[].horiz temp*/
			
            ifn other_smg_toggle 0
            {
                set temp3 smg_extra
                shiftr temp3 2
                sub temp3 smg_extra
                inv temp3
                setprojectile[P_SMG2].extra temp3
                set temp3 smg_extra_rand
                shiftr temp3 2
                sub temp3 smg_extra_rand
                inv temp3
                setprojectile[P_SMG2].extra_rand temp3
                set fuckup_aim2_r 2
                /*inv temp2
                add temp 524288*/
                //and temp 2047
                //shiftl temp 16
            }
			// range -fuckup_aim2 to fuckup_aim2, can be half if only 1 smg is used
			getp[].q16ang temp
			set temp2 fuckup_aim2
			shiftl temp2 19
			rand p_smg_randang1 temp2
			set temp2 fuckup_aim2
			shiftl temp2 18
			sub p_smg_randang1 temp2
			ifn other_smg_toggle 0
				shiftl p_smg_randang1 1
			shiftr p_smg_randang1 2
			add temp p_smg_randang1
            //sub temp temp2
            setp[].q16ang temp
			
			getp .horiz temp
			set temp2 fuckup_aim2
			rand p_smg_randhoriz1 temp2
			set temp2 fuckup_aim2
			shiftr temp2 1
			sub p_smg_randhoriz1 temp2 
			ifn other_smg_toggle 0
				shiftl p_smg_randhoriz1 1
			mul p_smg_randhoriz1 3
			div p_smg_randhoriz1 7
			sub temp p_smg_randhoriz1
			setp .horiz temp
        }
    }
    else ifn exp_aftershock 0
        state ashock_fire_disperser_altammo
endevent

appendevent EVENT_PROCESSINPUT
    ife player[].curr_weapon WEAPON_LOVERBOY
    {
        ifand input[].bits INPUT_FIRE
        {
            ifle player[].kickback_pic WEAPON1_TOTALTIME
                set pistol_interrupt 3
        }
        else ife pistol_interrupt 1
            set pistol_interrupt 2
    }
endevent

defstate reload_shotgun
	ifg weapon2_realclip 0 {
		set temp3 0
		set temp2 SHOTGUN_CLIP
		sub temp2 weapon2_realclip
		
		// fixes allowing reload when at 6 / 6, firing once to become 5 / 5.
		ife temp temp2 ifge temp SHOTGUN_CLIP
			set temp3 1
			
		sub temp temp2
		ifg temp 0
			set temp3 1
			
		ife temp3 1
		{
			set WEAPON2_CLIP 1
			setp[].kickback_pic WEAPON2_TOTALTIME
			set weapon2_realclip 0
		}
		else
			set flash_ammo -5
	}
ends

defstate do_reload
    ife p_laddermounted 1
        break
    else ifn player[].weapon_pos 0
        break

    set temp 0
    ife player[].kickback_pic 0
        set temp 1
    else
    {
        set temp2 0
        switch player[].curr_weapon
            case WEAPON_LOVERBOY
                set temp2 WEAPON1_TOTALTIME
                break
            case WEAPON_SHOTGUN
                set temp2 WEAPON2_TOTALTIME
                break
            case WEAPON_GRENADE
                set temp2 WEAPON6_TOTALTIME
                break
            case WEAPON_SMG
                set temp2 WEAPON3_TOTALTIME
                break
            case WEAPON_CROSSBOW
                set temp2 WEAPON7_TOTALTIME
                break
        endswitch
        ifl player[].kickback_pic temp2
        {
            switch player[].curr_weapon
                case WEAPON_LOVERBOY
                    set temp2 7
                    break
                case WEAPON_SHOTGUN
                    set temp2 6
                    break
                case WEAPON_GRENADE
                    set temp2 6
                    break
                case WEAPON_SMG
                    set temp2 WEAPON3_TOTALTIME
                    sub temp2 3
                    break
                case WEAPON_CROSSBOW
                    set temp2 WEAPON7_TOTALTIME
                    sub temp2 6
                    break
            endswitch
            ifge player[].kickback_pic temp2
                set temp 1
        }
    }
    ife temp 1
    {
        getp[].ammo_amount player[].curr_weapon temp
        switch player[].curr_weapon
            case WEAPON_LOVERBOY
                ifg weapon1_realclip 0
                {
                    set temp2 weapon1_realclip
                    sub temp2 PISTOL_CLIP
                    abs temp2
                    sub temp temp2
                    ifge temp 0
                    {
                        set WEAPON1_CLIP 1
                        set WEAPON1_TOTALTIME 8
                        setp[].kickback_pic WEAPON1_TOTALTIME
                        set weapon1_realclip 0
                    }
                    else
                        set flash_ammo -5
                }
                break
            case WEAPON_SHOTGUN
				ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL {
					// make sure the correct ammo is used
					set temp p_explosiveshells
					// hacky swap
					set am_tmp weapon2_realclip						// backup
					set weapon2_realclip p_explosiveshell_clip		// overwrite
					state reload_shotgun
					set p_explosiveshell_clip weapon2_realclip		// update
					set weapon2_realclip am_tmp						// restore
				}
				else ife p_usedammotype AM_AMMOTYPE_GRENADE {
					// make sure the correct ammo is used
					set temp p_grenades
					// hacky swap
					set am_tmp weapon2_realclip						// backup
					set weapon2_realclip p_grenade_clip				// overwrite
					state reload_shotgun
					set p_grenade_clip weapon2_realclip				// update
					set weapon2_realclip am_tmp						// restore
				}
				else // normal reload routine
					state reload_shotgun
                break
            /*case WEAPON_GRENADE
                ifg weapon6_realclip 0
                {
                    set temp2 weapon6_realclip
                    sub temp2 SHOTGUN_CLIP
                    abs temp2
                    sub temp temp2
                    ifge temp 0
                    {
                        set WEAPON6_CLIP 1
                        setp[].kickback_pic WEAPON6_TOTALTIME
                        set weapon6_realclip 0
                    }
                    else
                        set flash_ammo -5
                }
                break*/
            case WEAPON_SMG
                ifg weapon3_realclip 0
                {
                    set temp2 weapon3_realclip
                    sub temp2 SMG_CLIP
                    abs temp2
                    sub temp temp2
                    ifge temp 0
                    {
                        set WEAPON3_CLIP 1
                        setp[].kickback_pic WEAPON3_TOTALTIME
                        set weapon3_realclip 0
                    }
                    else
                        set flash_ammo -5
                }
                break
            case WEAPON_CROSSBOW
                ifg weapon7_realclip 0
                {
                    set temp2 weapon7_realclip
                    sub temp2 CROSSBOW_CLIP
                    abs temp2
                    sub temp temp2
                    ifge temp 0
                    {
                        set WEAPON7_CLIP 1
                        setp[].kickback_pic WEAPON7_TOTALTIME
                        set weapon7_realclip 0
                    }
                    else
                        set flash_ammo -5
                }
                break
        endswitch
        set press_reload 0
    }
ends

defstate shoot_first_bolt
    getprojectile[P_PLASMA_BOLT].workslike old_boltlike
    set old_boltlike2 old_boltlike

    ifn exp_aftershock 0
        state ashock_gold_plasmabolt
    ifn player.auto_aim 1
    {
        or old_boltlike 4096
        setprojectile[P_PLASMA_BOLT].workslike old_boltlike
    }
    eshoot P_PLASMA_BOLT
    setprojectile[P_PLASMA_BOLT].workslike old_boltlike2

    setprojectile[P_PLASMA_BOLT].bounces 0
ends

defstate shoot_other_bolt
    getprojectile[P_PLASMA_BOLT].workslike old_boltlike
    set old_boltlike2 old_boltlike
    or old_boltlike 4096

    ifn exp_aftershock 0
        state ashock_gold_plasmabolt
    setprojectile[P_PLASMA_BOLT].workslike old_boltlike

    and temp 2047
    eshoot P_PLASMA_BOLT
    seta[RETURN].ang temp
    seta[RETURN].zvel temp2
    getthisprojectile[RETURN].workslike temp3

    setprojectile[P_PLASMA_BOLT].workslike old_boltlike2
    setprojectile[P_PLASMA_BOLT].bounces 0
ends

appendevent EVENT_USESTEROIDS
    set RETURN -1
    set press_reload 1
    state do_reload
endevent

defstate handle_shotgun_special_reload
	ife p_usedammotype AM_AMMOTYPE_NORMALSHELL {
		ife p_ammohack 1 ife player.ammo_amount WEAPON_SHOTGUN AM_AMMOHACK_VAL
			set RETURN -1
	}
	else ife p_usedammotype AM_AMMOTYPE_GRENADE {
		ife p_grenades 0
			set RETURN -1
		else ife p_grenade_clip SHOTGUN_CLIP { 
			set press_reload 1
			state do_reload
			set RETURN -1
		}
	}
	else ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL {
		ife p_explosiveshells 0
			set RETURN -1
		else ife p_explosiveshell_clip SHOTGUN_CLIP { 
			set press_reload 1
			state do_reload
			set RETURN -1
		}
	}
ends

// weapon fire check for ammo types / new weapons
appendevent EVENT_FIRE
	// do reload forcing in event_fire
	ife player.curr_weapon WEAPON_SHOTGUN
		state handle_shotgun_special_reload
endevent

// player might be holding this button
appendevent EVENT_PRESSEDFIRE
	ife player.curr_weapon WEAPON_SHOTGUN
		state handle_shotgun_special_reload
endevent

// USE THIS STATE FOR ANY PLAYER-SIDE WEAPON ADJUSTMENTS
appendevent EVENT_WORLD
    ife interpolate_weapons 1
    {
        set smooth_world_totalclock totalclock

        set last_weaponcount weaponcount
        set last_weapon_pos player[myconnectindex].weapon_pos
    }

    ifg press_reload 0
    {
        setu[].vm_player myconnectindex
        set press_reload 1
        state do_reload
    }
endevent

defstate player_weapon_mods
    ifn exp_aftershock 0
        state ashock_gold_weapon_mods

    ife player[].last_weapon currentweapon
        set do_flash_ammo 1
    set temp 0
    ifg player[].kickback_pic 0
    {
        switch player[].curr_weapon
            case WEAPON_SHOCKER
                ifg player[].kickback_pic 45 
                    add temp 5 
                break
            case WEAPON_LOVERBOY
                ife player[].kickback_pic 1
                    add temp 45
                break
            case WEAPON_SMG
                ifle player[].kickback_pic 3
                    set temp 10
                break
            case WEAPON_SHOTGUN
            case WEAPON_GRENADE
                ifle player[].kickback_pic 3
                    set temp 20
                break
            case WEAPON_MINIGUN
                ifge player[].kickback_pic 20
                    ifand input[].bits INPUT_FIRE
                        set temp 10
                break
            case WEAPON_BOWLINGBOMB
                ife player[].kickback_pic WEAPON5_HOLDDELAY
                    set temp 90
                else ife bbomb_hold_count 120
                    set temp 10
                ifg w5alt 0
                    add temp 5
                break
            case WEAPON_CROSSBOW
                ife player[].kickback_pic 40
                    set temp 35
                ifg w3alt 0
                    add temp 3
                break
        endswitch
    }
    else
        set bbomb_hold_count 0
    ifn temp 0
        add p_want_angry temp
    else ifn p_want_angry 0
        sub p_want_angry 1
    clamp p_want_angry 0 150
    ife p_want_angry 150
        set p_face_grin 30
    /*
    qputs 11 %ld
    qsprintf 11 11 p_want_angry
    quote 11 */
    ife do_flash_ammo 1
    {
        ifn player[].last_weapon currentweapon
        {
            set do_flash_ammo 0
            set flash_ammo 3
        }
        set do_flash_ammo 0
        ifl flash_ammo 4
            add flash_ammo 3
        else
            add flash_ammo 1
        clamp flash_ammo 0 8
    }

    setp[].runspeed RUNNINGSPEED
    ifg sprite.extra player.max_player_health
    {
        set temp sprite.extra
        sub temp player.max_player_health
        shiftl temp 4
        add temp RUNNINGSPEED
        setp .runspeed temp
    }
    ifg footloose 0
    {
        ifg footloose 5
        {
            set footloose 5
            redefinequote 11 footloose clamped to 5
            echo 11
        }
        getp .runspeed temp
        set temp2 footloose
        shiftl temp2 11
        add temp temp2
        setp .runspeed temp
    }
    ifg p_dragobj -1 ifand input[].extbits INPUT_MOVE_BACKWARD
    {
        getp[].runspeed temp
        set temp2 temp
        shiftr temp2 1

        getav[p_dragobj].prop_adjustmass temp3
        ifg temp3 1
        {
            shiftr temp3 1
            div temp2 temp3
        }
        else
        {
            getav[p_dragobj].actor_moveable_xv temp4
            set temp5 player[].posxv
            shiftr temp5 15
            ifg actorvar[p_dragobj].prop_heavy 0
                div temp3 actorvar[p_dragobj].prop_heavy
            ifl temp5 3 ifg temp5 -2
                set temp5 0
            add temp4 temp5
            setav[p_dragobj].actor_moveable_xv temp4

            getav[p_dragobj].actor_moveable_yv temp4
            set temp5 player[].posyv
            shiftr temp5 15
            ifg actorvar[p_dragobj].prop_heavy 0
                div temp3 actorvar[p_dragobj].prop_heavy
            ifl temp5 2 ifg temp5 -2
                set temp5 0
            add temp4 temp5
            setav[p_dragobj].actor_moveable_yv temp4
        }
        sub temp temp2
        setp[].runspeed temp
        
    }
    ifn player[].kickback_pic 0
    {
        rand muzzle_flash_ang 1023
        ifn player[].weaponswitch 0
        {
            getp[].weaponswitch delay_weapon_switch
            // Switch weapon when empty -- always restore this bit no matter what.
            or delay_weapon_switch 2
            setp[].weaponswitch 0
        }
    }
    else ife player[].kickback_pic 0
    {
		ife p_usedammotype AM_AMMOTYPE_NORMALSHELL ife player.ammo_amount WEAPON_SHOTGUN 0
			state check_and_do_disperser_reload
		else ife p_usedammotype AM_AMMOTYPE_GRENADE ife p_grenades 0
			state check_and_do_disperser_reload
		else ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL ife p_explosiveshells 0
			state check_and_do_disperser_reload
        ifn delay_weapon_switch 0
        {
            setp[].weaponswitch delay_weapon_switch
            ifn player[].wantweaponfire -1
            {
                ifn player[].wantweaponfire 0
                    checkavailweapon THISACTOR
            }
            else ifn player[].curr_weapon 0
            {
                getplayer[].ammo_amount player[].curr_weapon temp2
                ifl temp2 1 {
					ife player.curr_weapon WEAPON_SHOTGUN {
						// if we truly have nothing else on this weapon
						ifl p_explosiveshells 1 ifl p_grenades 1 {
							ife p_ammohack 1 {
								setp .ammo_amount WEAPON_SHOTGUN 0
								set p_ammohack 0
							}
							checkavailweapon THISACTOR
						}
					}
                    else
						checkavailweapon THISACTOR
				}
				else ife p_ammohack 1 
					 ife temp2 2 
					 ifl p_explosiveshells 1 
					 ifl p_grenades 1
				{
						checkavailweapon THISACTOR
				}
            }
        }
    }
    ifn p_have_dart 0
    {
        set press_alt 0
        ifl p_have_dart 15
        {
            ifhitspace
                ifg p_have_dart 12
                    sub p_have_dart 1
            add p_have_dart 1
        }
        /* set temp2 p_have_dart
        clamp temp2 0 9
        setp .weapon_pos temp2 */
        ife p_have_dart 15
        {
            ifn p_laddermounted 0
                set p_have_dart 16
        }
        else ifge p_have_dart 16
        {
            add p_have_dart 1
            ifn p_laddermounted 0
            {
                ifl p_have_dart 20
                    set p_have_dart 20
                else
                    add p_have_dart 2
            }
            ife p_have_dart 20
            {
                eshoot P_DART
                seta[RETURN].pal p_dart_pal
                set p_dart_pal 0
            }
            ifg p_have_dart 30
                set p_have_dart 0
        }
    }
    ife player[].curr_weapon WEAPON_SHOCKER
    {
        getp[].kickback_pic temp
		
        // if fire held, jump into swing animation again
        // truth to be told, I have no idea what I'm doing here -bdino
        ifg weapon_fire 0 ifg temp 63
        {
            set temp 8
            setp[].kickback_pic 8
            set release_fire 0
            set baton_strikes 0
            set baton_early 0
        }
		
        ife temp 0
        {
            ifg baton_next 0
                sub baton_next 1
            ifg press_alt 0
            {
                setp .kickback_pic 1
                set w0alt 1
            }
        }
        ifg temp 0
        {
            ifl temp 50
            {
                ifinwater
                    set baton_fizzer 0
                else
                {
                    set baton_fizzer temp
                    and baton_fizzer 3
                    ifn baton_fizzer 0
                    {
                        rand baton_fizzer 2
                        add baton_fizzer 1
                    }
                }
            }
            else
            {
                ifg input_stall 0
                {
                    sub input_stall 1
                    setp[].kickback_pic 54
                }
            }
            ifp pducking
                nullop
            else
            {
                ifg temp 10
                {
                    getp[].runspeed temp2
                    add temp2 8192
                    setp[].runspeed temp2
                }
            }
            geti[].bits temp2
            ifand temp2 INPUT_FIRE
            {
                ifn release_fire 1
                {
                    ifg baton_next 0 ifg player.kickback_pic 54
                    {
                        set baton_next -1
                        setp .kickback_pic 1
                    }
                }
                ife release_fire 0
                    set release_fire 1
                else ife release_fire 2
                {
                    ifl baton_strikes 2
                        add baton_strikes 1
                    else
                    {
                        ifg player.kickback_pic 55
                            set baton_next 15
                        ifg player.kickback_pic 60
                            setp .kickback_pic 1
                    }
                    set release_fire 1
                }
            }
            else
            {
                ife release_fire 1
                    set release_fire 2
            }
            
            
            ifg w0alt 0
            {
                ifinwater
                    nullop
                else
                    rand p_sizzled_count 2
                set baton_strikes 2
                ifl temp 20 ifge temp 15
                {
                    set temp 29
                    setp .kickback_pic temp
                    add temp 5
                    set temp2 temp
                    shiftl temp2 2
                    set smooth_weaponcount temp2
                }
                else ifg temp 43
                {
                    set temp6 temp
                    ifand w0alt 1
                    {
                        set temp 44
                        rand temp2 1
                        add temp2 2
                        setprojectile[P_SHOCKER].extra temp2
                    }
                }
            }
            switch temp
                case 19
                case 27
                    rand temp2 1
                    add temp2 S_MELEE_SWING01
                    soundvar temp2
                    break
                case 43
                    sound S_MELEE_SWING03
                    break
                case 21
                case 28
                case 44
                    getp[].posz temp3
                    getp[].horiz temp4
                    sub temp4 100
                    ifl temp4 0
                        mul temp4 11
                    abs temp4
                    add temp4 256
                    ifp pducking
                        add temp4 512
                    sub temp3 temp4 // offset based on horiz
                    setp[].posz temp3
                    ifinwater
                    {
                        ifg w0alt 2
                            nullop
                        else
                            shoot P_SHOCKER
                    }
                    else
                    {
                        shoot P_SHOCKER
                        set p_sizzled_count 1
                    }
                    add temp3 temp4
                    setp[].posz temp3
                    break
            endswitch

            ifg player.kickback_pic 43
            {
                ife baton_strikes 0 ife baton_next 0 ifg weapon_fire 0
                {
                    set baton_next 15
                    set baton_strikes 1
                    setp .kickback_pic 25
                }

                ifg w0alt 0
                {
                    setprojectile[P_SHOCKER].extra WEAPON0_DMG
                    set temp temp6
                    clamp temp 0 50
                    ifg temp 48
                    {
                        set temp2 w0alt

                        ifand temp2 1
                            set temp 48
                         else
                            set temp 49
                    }
                    ifinwater
                        set baton_fizzer 0
                    else
                    {
                        set baton_fizzer w0alt
                        and baton_fizzer 3
                        ifn baton_fizzer 0
                        {
                            rand baton_fizzer 2
                            add baton_fizzer 1
                        }
                    }
                    add w0alt 1
                    ifle press_alt 0
                        add w0alt 2
                    ifg w0alt 30
                    {
                        ifg press_alt 0
                            set w0alt 1
                        else set w0alt -1
                    }
                    setp .kickback_pic temp
                    
                    ifinwater
                    {
                        set baton_strikes 2
                        set w0alt -1
                        set p_sizzled_count 0
                    }
                }
            }
                
            ifl temp 16
            {
                ifn baton_next 0
                    set baton_next -1
                ife baton_next -1
                {
                    ifl temp 8
                        add temp 1
                    add temp 2
                    setp[].kickback_pic temp
                }
            }
            else
                set baton_next 0
            ife temp 26 ife baton_strikes 0
            {
                set baton_early 1
                ifand input[].bits INPUT_FIRE
                {
                    set temp 54
                    set input_stall 5
                }
                else
                    set temp 55
                setp[].kickback_pic temp
            }
            else ife temp 34 ife baton_strikes 1
            {
                set temp 55
                setp[].kickback_pic temp
            }
            ifge baton_strikes 2
                set baton_next 15
            else ifn baton_early 1
                set baton_next 8
            ifl temp 16
            {
                add temp 1
                setp[].kickback_pic temp
            }
            else ifl temp 40
            {
                ifg temp 28
                    ifge baton_strikes 2
                        add temp 1
                setp[].kickback_pic temp
            }
            else ifg temp 55
            {
                ifl w0alt 0
                {
                    set temp 56
                    add w0alt 1
                }
                else ifn baton_early 1
                {
                    ifl temp 65
                        add temp 1
                    ifge baton_strikes 2
                    {
                        add temp 1
                        ifg baton_strikes 2
                            add temp 1
                    }
                }
                setp[].kickback_pic temp
            }
            set baton_idle 0
            set baton_idle_delay 0
            ifinwater
                nullop
            else
                soundonce S_AMB_SPARKLOOP
        }
        else
        {
            set release_fire 0
            set baton_strikes 0
            set baton_early 0

            ifge baton_idle_delay baton_idle_2
            {
                ifge baton_idle 0
                {
                    set temp5 player[].weapon_pos
                    abs temp5
                    ifinwater
                        nullop
                    else ifg temp5 4
                        nullop
                    else ifn p_eol 0
                        nullop
                    else ifrnd 64
                    {
                        rand baton_idle 14
                        clamp baton_idle 2 11
                        soundonce S_AMB_SPARKLOOP
                        set p_sizzled_count 2
                    }
                }
                else
                    sub baton_idle 1

                set baton_idle_delay 0
                set baton_idle_2 baton_idle

                ifrnd 64
                    mul baton_idle_2 3
                else
                    shiftl baton_idle_2 2
            }
            else
            {
                add baton_idle_delay 1

                ifn baton_idle 0
                    sub baton_idle 1
            }
            ife baton_idle 0
                stopactorsound THISACTOR S_AMB_SPARKLOOP
        }
    }
    else
    {
        set release_fire 0
        set baton_strikes 0
        set baton_early 0
        set baton_idle 0
        set baton_idle_delay 0
		setprojectile[P_SHOCKER].extra WEAPON0_DMG
        stopactorsound THISACTOR S_AMB_SPARKLOOP
    }

    ife player[].curr_weapon 1
    {
        ifge weapon1_alt 11
        {
            add w1_sparkle 1
            and w1_sparkle 2047
        }
        else
            set w1_sparkle 0
        ifn fuckup_aim 0
        {
            ife player[].kickback_pic WEAPON1_FIREDELAY
            {
                setprojectile[P_LOVERBOY].extra_rand WEAPON1_DMG
                getp[].q16horiz temp
                set temp2 fuckup_aim
                shiftr temp2 2
                add temp temp2
                setp[].q16horiz temp
                getp[].q16ang temp
                add temp temp2
                setp[].q16ang temp
            }

            ifl fuckup_aim 0
                add fuckup_aim 1

            ifl fuckup_aim 0
                add fuckup_aim 1

        }

        getp[].ammo_amount player[].curr_weapon temp

        ife temp 0
        {
            set weapon1_realclip 0
            ifl weapon1_cleared PISTOL_NUMSHELLS
            {
                ifg sprite[].xvel 10
                    rand temp 7
                else
                    rand temp 3
                add temp 1
                set temp2 pistol_num_shells
                add temp2 temp
                ifg temp2 PISTOL_NUMSHELLS
                {
                    sub temp2 PISTOL_NUMSHELLS
                    sub temp temp2
                }
                add weapon1_cleared temp
                ifg weapon1_cleared PISTOL_NUMSHELLS
                {
                    sub weapon1_cleared PISTOL_NUMSHELLS
                    sub temp weapon1_cleared
                    set weapon1_cleared PISTOL_NUMSHELLS
                }
                ifg temp 0 for itervar range temp
                {
                    eshoot A_SHELL1
                    geta[RETURN].ang temp2
                    rand temp3 512
                    ifrnd 127
                        inv temp3
                    add temp2 temp3

                    add temp2 320
                    and temp2 2047
                    seta[RETURN].ang temp2
                    geta[RETURN].zvel temp2
                    rand temp3 512
                    sub temp2 temp3
                    seta[RETURN].zvel temp2
                }
                set fuckup_aim 0
            }
            set WEAPON1_TOTALTIME 8
            setp .reloading 0
            ifg player[].kickback_pic 7
                    setp[].kickback_pic 0
        }
        else
            set weapon1_cleared 0
        ife player[].reloading 0
        {
            geti[].bits temp2
            ifand temp2 INPUT_FIRE
                nullop
            else
            {
                ifg player[].kickback_pic 7
                    setp[].kickback_pic 0
            }
            set temp6 0
            ifand input_obits INPUT_FIRE
                set WEAPON1_TOTALTIME 20
            else
            {               
                set WEAPON1_TOTALTIME 8
                set temp6 1
            }
            ifn weapon1_alt 0
                set WEAPON1_TOTALTIME 6
            set input_obits temp2

            getp[].ammo_amount player[].curr_weapon temp

            ifg temp 0
                set temp weapon1_realclip

            ifge temp 0
            {
                ife player[].kickback_pic WEAPON1_FIREDELAY
                {
                    set temp3 player[].kickback_pic
                    sub temp3 WEAPON1_FIREDELAY
                    set temp WEAPON1_TOTALTIME
                    shiftr temp 2
                    add temp3 temp
                    sub temp3 WEAPON1_TOTALTIME
                    inv temp3
                    sub fuckup_aim temp3

                    espawn A_SOUND_EMITTER
                    seta[RETURN].extra SE_DIST_LOVERBOY // read distance
                    seta[RETURN].xrepeat 64
                    seta[RETURN].yrepeat 64
                    seta[RETURN].cstat 32768
                    add weapon1_realclip 1
                }
            }

            ife player[].kickback_pic 7
                set temp6 1
            ife pistol_interrupt 3
                set temp6 1
            ife temp6 1
            {
                ife weapon1_realclip PISTOL_CLIP
                {
                    set WEAPON1_CLIP 1
                    set WEAPON1_TOTALTIME 8
                    ife player.kickback_pic 7
                        setp .kickback_pic 8
                }
                else
                {
                    set temp WEAPON1_TOTALTIME
                    sub temp 1
                    ifge player[].kickback_pic temp
                        setplayer[].kickback_pic 0
                    else ifg player[].ammo_amount player[].curr_weapon 0
                    {
                        ife pistol_interrupt 3
                        {
                            sub temp 2
                            ifge player[].kickback_pic temp
                            {
                                ifand input[].bits INPUT_FIRE
                                {
                                    setp[].kickback_pic 0
                                    set pistol_interrupt 0
                                }
                            }
                        }
                    }
                }
            }

        }
        else
        {
            ifg player[].kickback_pic WEAPON1_TOTALTIME
            {
                ifle player[].kickback_pic 44
                {
                    getp[].kickback_pic temp
                    and temp 1
                    set weapon1_realclip 0
                    ife temp 0
                    {
                        ifl pistol_num_shells PISTOL_NUMSHELLS
                        {
                            ifg sprite[].xvel 10
                                rand temp 7
                            else
                                rand temp 3
                            add temp 1
                            set temp2 pistol_num_shells
                            add temp2 temp
                            ifg temp2 PISTOL_NUMSHELLS
                            {
                                sub temp2 PISTOL_NUMSHELLS
                                sub temp temp2
                            }
                            add pistol_num_shells temp
                            ifg pistol_num_shells PISTOL_NUMSHELLS
                            {
                                sub pistol_num_shells PISTOL_NUMSHELLS
                                sub temp pistol_num_shells
                                set pistol_num_shells PISTOL_NUMSHELLS
                            }
                            ifg temp 0 for itervar range temp
                            {
                                eshoot A_SHELL1
                                geta[RETURN].ang temp2
                                ifg sprite[].xvel 10
                                {
                                    rand temp3 512
                                    ifrnd 127
                                        inv temp3
                                    add temp2 temp3
                                }
                                add temp2 320
                                and temp2 2047
                                seta[RETURN].ang temp2
                                geta[RETURN].z temp2
                                rand temp3 256
                                sub temp2 temp3
                                seta[RETURN].z temp2
                                // sub temp 1
                            }
                        }
                    }
                    else
                    {
                        getp[].kickback_pic temp
                        ifand temp 2
                        {
                            add temp 1
                            setp[].kickback_pic temp
                        }
                    }
                }
                else
                {
                    set WEAPON1_CLIP 0
                    set pistol_num_shells 0
                    getp[].kickback_pic temp
                    ifand temp 2
                    {
                        add temp 1
                        setp[].kickback_pic temp
                    }
                }
            }
        }
        ifn weapon1_alt 0
        {
            iffloordistl 2
            {
                getp[].posxv temp
                shiftr temp 1
                setp[].posxv temp
                getp[].posyv temp
                shiftr temp 1
                setp[].posyv temp
            }
        }
    }

    ife player[].curr_weapon WEAPON_SHOTGUN
    {
        set WEAPON2_CLIP 0
        getp[].ammo_amount player[].curr_weapon temp
        ife temp 0
            set weapon2_realclip 0
        ife player[].kickback_pic 1
        {
            espawn A_SOUND_EMITTER
            seta[RETURN].extra SE_DIST_SHOTGUN // read distance
            seta[RETURN].xrepeat 64
            seta[RETURN].yrepeat 64
            seta[RETURN].cstat 32768
			// don't modify this otherwise
			ife p_usedammotype AM_AMMOTYPE_NORMALSHELL
				add weapon2_realclip 1
        }
        else ife player[].kickback_pic 12
        {
			ife p_usedammotype AM_AMMOTYPE_NORMALSHELL {
				ife player.ammo_amount WEAPON_SHOTGUN 0 {
					setp[].kickback_pic 0
					set weapon2_realclip 0
				}
				else ife weapon2_realclip SHOTGUN_CLIP {
					setp[].kickback_pic 37
					set weapon2_realclip 0
					set WEAPON2_CLIP 1
				}
			}
			else ife p_usedammotype AM_AMMOTYPE_GRENADE {
				// I handled reload check for special ammo types elsewhere
				ife p_grenades 0 {
					setp[].kickback_pic 0
					set p_grenade_clip 0
				}
				else ife p_grenade_clip SHOTGUN_CLIP {
					setp[].kickback_pic 37
					set p_grenade_clip 0
					set WEAPON2_CLIP 1
				}
			}
			else ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL {
				// I handled reload check for special ammo types elsewhere
				ife p_explosiveshells 0 {
					setp[].kickback_pic 0
					set p_explosiveshell_clip 0
				}
				else ife p_explosiveshell_clip SHOTGUN_CLIP {
					setp[].kickback_pic 37
					set p_explosiveshell_clip 0
					set WEAPON2_CLIP 1
				}
			}
        }
        else
        {
            getp[].kickback_pic temp

            ifg temp 33
            {
                // reload speed
                ifand temp 1
                {
                    ifl temp 50
                        add temp 1
                    else ifg temp 64 ifl temp 95
                        add temp 1
                }
                setp[].kickback_pic temp
            }

            ifn exp_aftershock 0
                state ashock_shotgun_fire_modifier
            ifg temp 58
            {
                ifn exp_aftershock 0
                    state ashock_pistol_num_shells
                else
                    state fury_pistol_num_shells
                ifl pistol_num_shells SHOTGUN_NUMSHELLS  ife player.reloading 1
                {
                    ifg sprite[].xvel 10
                        rand temp3 4
                    else
                        rand temp3 2
                    add temp3 1
                    set temp4 pistol_num_shells
                    add temp4 temp3
                    ifg temp4 SHOTGUN_NUMSHELLS
                    {
                        sub temp4 SHOTGUN_NUMSHELLS
                        sub temp3 temp4
                    }
                    add pistol_num_shells temp3
                    ifg pistol_num_shells SHOTGUN_NUMSHELLS
                    {
                        sub pistol_num_shells SHOTGUN_NUMSHELLS
                        sub temp3 pistol_num_shells
                        set pistol_num_shells SHOTGUN_NUMSHELLS
                    }
					set temp4 0
					ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL
						set temp4 62
                    ifg temp3 0 for itervar range temp3
                    {
                        eshoot A_SHELL1
                        geta[RETURN].ang temp4
                        setav[RETURN].shell_shot 1
                        ifg sprite[].xvel 10
                        {
                            rand temp5 512
                            ifrnd 127
                                inv temp5
                            sub temp4 temp5
                        }
                        sub temp4 256
                        and temp4 2047
                        seta[RETURN].ang temp4
                        geta[RETURN].z temp4
                        rand temp5 512
                        sub temp4 temp5
                        add temp4 3072
                        seta[RETURN].z temp4
                        // sub temp3 1
                    }
                }
            }
            else ifg temp 40
                set pistol_num_shells 0
            ife temp 40
                sound S_SHOTGUN_OPENCLOSE
            else ife temp 52
                sound S_SHOTGUN_CLIPOUT
            else ife temp 54
                sound S_SHOTGUN_CLIPIN
            else ife temp 84
                sound S_SHOTGUN_OPENCLOSE
        }
    }
    /*else ife player[].curr_weapon WEAPON_GRENADE
    {
        set WEAPON6_CLIP 0
        getp[].ammo_amount player[].curr_weapon temp
        ife temp 0
            set weapon6_realclip 0
        ife player[].kickback_pic 1
        {
            espawn A_SOUND_EMITTER
            seta[RETURN].extra SE_DIST_GRENADE // read distance
            seta[RETURN].xrepeat 64
            seta[RETURN].yrepeat 64
            seta[RETURN].cstat 32768
            add weapon6_realclip 1
        }
        else ife player[].kickback_pic 12
        {
            getp[].ammo_amount player[].curr_weapon temp
            ife temp 0
            {
                setp[].kickback_pic 0
                set weapon6_realclip 0
            }
            else

            {
                ife weapon6_realclip SHOTGUN_CLIP
                {
                    setp[].kickback_pic 37
                    set weapon6_realclip 0
                    set WEAPON6_CLIP 1
                }
            }
        }
        else
        {
            getp[].kickback_pic temp

            ifg temp 33
            {
                // reload speed
                ifand temp 1
                {
                    ifl temp 50
                        add temp 1
                    else ifg temp 64 ifl temp 95
                        add temp 1
                }
                setp[].kickback_pic temp
            }

            ifg temp 58
            {
                ifn exp_aftershock 0
                    state ashock_pistol_num_shells
                else
                    state fury_pistol_num_shells
                ifl pistol_num_shells SHOTGUN_NUMSHELLS
                {
                    ifg sprite[].xvel 10
                        rand temp3 4
                    else
                        rand temp3 2
                    add temp3 1
                    set temp4 pistol_num_shells
                    add temp4 temp3
                    ifg temp4 SHOTGUN_NUMSHELLS
                    {
                        sub temp4 SHOTGUN_NUMSHELLS
                        sub temp3 temp4
                    }
                    add pistol_num_shells temp3
                    ifg pistol_num_shells SHOTGUN_NUMSHELLS
                    {
                        sub pistol_num_shells SHOTGUN_NUMSHELLS
                        sub temp3 pistol_num_shells
                        set pistol_num_shells SHOTGUN_NUMSHELLS
                    }
                    ifg temp3 0 for itervar range temp3
                    {
                        eshoot A_SHELL1
                        geta[RETURN].ang temp4
                        setav[RETURN].shell_shot 1
                        ifg sprite[].xvel 10
                        {
                            rand temp5 512
                            ifrnd 127
                                inv temp5
                            sub temp4 temp5
                        }
                        sub temp4 256
                        and temp4 2047
                        seta[RETURN].ang temp4
                        geta[RETURN].z temp4
                        rand temp5 512
                        sub temp4 temp5
                        add temp4 3072
                        seta[RETURN].z temp4
                    }
                }
            }
            else ifg temp 40
                set pistol_num_shells 0
            ife temp 40
                sound S_SHOTGUN_OPENCLOSE
            else ife temp 52
                sound S_SHOTGUN_CLIPOUT
            else ife temp 54
                sound S_SHOTGUN_CLIPIN
            else ife temp 84
                sound S_SHOTGUN_OPENCLOSE
        }
    }*/

    ifg weapon_fire 0
        sub weapon_fire 1
    ife player[].curr_weapon WEAPON_BOWLINGBOMB // lets add velocity if the FIRE button is held
    {
        
        add w5_sparkle 1
        and w5_sparkle 2047
       ifn player.kickback_pic 0 ifl player.kickback_pic 13
        {
            ifn w5alt 0
                ifn weapon_fire 0
                    set press_alt 2
        }
        ifinwater
        {
            ifn w5alt 0
            {
                ifg player.kickback_pic 5
                    setp .weapon_pos 9
                ifge player.kickback_pic 1
                {
                    ifl w5alt 18
                        set w5alt 28
                    ifl w5alt 25
                        set w5alt 25
                    add w5alt 2
                    ifg w5alt 28
                    {
                        set w5alt 0
                        setp .kickback_pic 0
                    }
                }
                else
                {
                    set w5alt 0
                    setp .kickback_pic 0
                }
                    
            }

            
            
            set w5alt_delay2 0
        }
        ifg w5alt 0
        {
            sub w5alt 1
            ife w5alt 23
            {
                ife w5alt_delay2 0
                    set w5alt_delay2 6
                else ife w5alt_delay2 1
                    set w5alt_delay2 0
            }
            ifg w5alt_delay2 0
            {
                set w5alt 24
                sub w5alt_delay2 1
            }
            ifg w5alt 13
                setp .kickback_pic 1
            else ifl player.kickback_pic 11 ifn player.kickback_pic 0
            {
                getp .kickback_pic temp
                add temp 1
                setp .kickback_pic temp
            }
            ifg player.kickback_pic 13
            {
                set bbomb_fuse_snd 0
                stopactorsound THISACTOR S_BBOMB_FUSE
            }
            else ifge player.kickback_pic 1
            {
                ife bbomb_fuse_snd 0
                {
                    sound S_BBOMB_FUSE
                    set bbomb_fuse_snd 1
                }
                else
                {
                    add bbomb_fuse_snd 1
                    mod bbomb_fuse_snd 20
                }
            }
            else
            {
                set bbomb_fuse_snd 0
                stopactorsound THISACTOR S_BBOMB_FUSE
            }
            
        }
        else
        {
            set bbomb_fuse_snd 0
            stopactorsound THISACTOR S_BBOMB_FUSE
        }
        ife w5alt 0
        {
            geti .bits temp
            ifand temp INPUT_FIRE
                set w5alt_delay 2
        }
        ife w5alt_delay 2
            set press_alt 0
        ifn press_alt 0
        {
            ife player.weapon_pos 0 ife player.kickback_pic 0 ife w5alt_delay 0
            {
                geti .bits temp
                ifand temp INPUT_FIRE
                    nullop
                else ifinwater
                    nullop
                else
                {
                    set w5alt 28
                    sound S_BBOMB_LIGHTER
                    setp .kickback_pic 1
                    set w5alt_delay 1
                }
            }

            ifl w5alt 14 ifle player.kickback_pic WEAPON5_FIREDELAY
            {
                set w5alt 14
                set temp WEAPON5_FIREDELAY
                sub temp 1
                ifg player.kickback_pic temp
                    ifl bbomb_hold_count 120
                        setp .kickback_pic temp
            }
            ife w5alt 4
            {
                ifn player.kickback_pic 0
                    set w5alt 5
            }
            set temp w5_sparkle
            mod temp 20
            ifl w5alt 15 ifg w5alt 5 ife temp 0 ifg player.kickback_pic 3
            {
                getprojectile[P_SMOKE2].vel temp
                getprojectile[P_SMOKE2].range temp2
                getprojectile[P_SMOKE2].drop temp3
                getprojectile[P_SMOKE2].txrepeat temp4
                getprojectile[P_SMOKE2].tyrepeat temp5
                setprojectile[P_SMOKE2].vel 512
                setprojectile[P_SMOKE2].range 1
                setprojectile[P_SMOKE2].drop -6144
                setprojectile[P_SMOKE2].txrepeat 2
                setprojectile[P_SMOKE2].tyrepeat 2
                getp .q16ang temp6
                set temp7 temp6
                add temp7 8388608 // 128 * 65536
                setp .q16ang temp7
                eshoot P_SMOKE2
                setp .q16ang temp6
                setprojectile[P_SMOKE2].vel temp
                setprojectile[P_SMOKE2].range temp2
                setprojectile[P_SMOKE2].drop temp3
                setprojectile[P_SMOKE2].txrepeat temp4
                setprojectile[P_SMOKE2].tyrepeat temp5
            }

            ifg w5alt 0
                set bbomb_alt_mode 1
        }
        else
        {
            ifg player.kickback_pic WEAPON5_FIREDELAY
                set w5alt_delay 0
            else ife player.kickback_pic 0
            {
                geti .bits temp
                ifand temp INPUT_FIRE
                    nullop
                else
                    set w5alt_delay 0
            }
            ifg w5alt 0
            {
                ife w5alt 4
                {
                    ifn player.kickback_pic 0
                        set w5alt 5
                }
                set bbomb_alt_mode 1
            }
            else
                set bbomb_alt_mode 0
        }
        ifdead
            set bbomb_hold_count 0
        else ife player.kickback_pic 0
            set bbomb_hold_count 0
        else
        {
            ifg w5alt 0
            {
                ife w5alt 14 ifl bbomb_hold_count 120
                {
                    add bbomb_hold_count 2
                    ifand bbomb_hold_count 2
                        add bbomb_hold_count 1
                    clamp bbomb_hold_count 0 120
                }
            }
            else ife player[].kickback_pic WEAPON5_FIREDELAY ifl bbomb_hold_count 120
            {
                set temp BBOMB_HOLD_COUNT
                add temp 6
                ifl bbomb_hold_count temp
                {
                    ifge bbomb_hold_count BBOMB_HOLD_COUNT
                    {
                        setp[].sound_pitch 512
                        sound S_BBOMB_LAND_ALT
                        setp[].sound_pitch 512
                        sound S_SWITCH_LARGE02
                        setp[].sound_pitch 0
                        sound S_BBOMB_LOCK2
                    }
                }
                add bbomb_hold_count 3
                ifl bbomb_hold_count 9
                    add bbomb_hold_count 3
                clamp bbomb_hold_count 0 120
            }
            
            ife player[].kickback_pic WEAPON5_TOTALTIME
                set bbomb_hold_count 0
        }
    }
    else
        set bbomb_hold_count 0

    getp[].sound_pitch temp6
    setp[].sound_pitch 0
    
    getp[].ammo_amount WEAPON_CROSSBOW temp
    ife temp 0
        set weapon7_realclip 0
    ife player[].curr_weapon WEAPON_CROSSBOW
    {
        add w6_sparkle 1
        mod w6_sparkle 120
        ife player[].kickback_pic 0
        {
            add crossbow_idle_count 1
            ifge crossbow_idle_count 60
                set crossbow_idle_count 0
        }
        else ifl player[].kickback_pic 40
        {
            ifle player[].kickback_pic 3
            {
                set crossbow_idle_count 42
                rand temp 3
                add crossbow_idle_count temp
            }
            set temp WEAPON7_SHOTSPERBURST
            ifl player[].kickback_pic 4
                set temp 1
            ifl temp 3
                shiftr temp 1
            clamp temp 1 5
            add crossbow_idle_count temp
            clamp crossbow_idle_count 0 65536
        }
        else ifl player[].kickback_pic 59
        {
            add crossbow_idle_count 5
            clamp crossbow_idle_count 0 65536
        }
        else ife player[].kickback_pic 59
            set crossbow_idle_count 0
        
        ifg player[].kickback_pic 60
        {
            ife player[].kickback_pic 61
            {
                setp[].sound_pitch 512
                sound S_SHOTGUN_CLIPIN
                setp[].sound_pitch 0
            }
            ife player[].kickback_pic 80
            {
                setp[].sound_pitch -512
                sound S_CROSSBOW_RESET
                setp[].sound_pitch 0
            }
            ife player[].kickback_pic 89
            {
                sound S_CROSSBOW_RESET
            }
        }
        ifl player[].kickback_pic 30 ife player[].weapon_pos 0
        {
            ifn press_alt 0
            {
                add w3alt 2
                ifl w3alt 5
                    add w3alt 1
                clamp w3alt 0 38
                ifge w3alt 38
                {
                    ife WEAPON7_SHOTSPERBURST 4
                        set WEAPON7_SHOTSPERBURST 5
                    set weaponcount 28
                    setp[].kickback_pic 28
                    add w3alt_count 1
                    ifl w3alt_count 20
                        add w3alt_count 1
                }
                else
                {
                    set w3alt_count 0
                    set w3alt_lastinv 0
                    set temp w3alt
                    shiftr temp 3
                    set temp2 temp
                    clamp temp 1 5
                    set WEAPON7_SHOTSPERBURST temp
                    set temp w3alt
                    clamp temp 0 28
                    set weaponcount temp
                    setp[].kickback_pic temp
                }
                ifg w3alt_count 90
                {
                    set weaponcount 38
                    setp[].kickback_pic 38
                    set w3alt_count 180
                    set w3alt_ammo 0
                    set WEAPON7_SHOTSPERBURST 1
                }
            }
            else ifg w3alt 0
            {
                    ifge w3alt 38
                    {
                        ife WEAPON7_SHOTSPERBURST 4
                            set WEAPON7_SHOTSPERBURST 5
                        set weaponcount 38
                        setp[].kickback_pic 38
                        set w3alt_count 0
                    }
                    else
                    {
                        set temp w3alt
                        shiftr temp 3
                        ifl temp 1 set temp 1
                        set WEAPON7_SHOTSPERBURST temp
                        set weaponcount 38
                        setp[].kickback_pic 38
                        set w3alt_count 0
                    }


            }
            else
            {
                geti[].bits temp
                ifand temp INPUT_FIRE ife p_have_dart 0
                {
                    setp[].kickback_pic 39
                    set WEAPON7_SHOTSPERBURST 1
                    set weaponcount player[].kickback_pic
                }
            }
        }
        ifg WEAPON7_SHOTSPERBURST 0
        {
            
            ife player[].kickback_pic 38
            {
                setp[].kickback_pic 39
                set weaponcount 39
            }
            getp[].ammo_amount WEAPON_CROSSBOW temp
            ifn press_alt 0
                ifg WEAPON7_SHOTSPERBURST temp ifn temp 0
                    set WEAPON7_SHOTSPERBURST temp

            soundonce S_CROSSBOW_CHARGE
            ifg w3alt_count 30
            {
                set temp2 w3alt_count
                ifg temp2 75
                    add temp2 30
                shiftl temp2 2
                clamp temp2 0 360
                setp .sound_pitch temp2
                soundonce S_CROSSBOW_SQUARE
                setp .sound_pitch 0
            }
            ifn WEAPON7_SHOTSPERBURST last_crossbow_spb
                sound S_CROSSBOW_READY
            set last_crossbow_spb WEAPON7_SHOTSPERBURST
            getp[].q16ang p_pl_ang
            ife player[].kickback_pic 40
            {
                set w3alt 0
                set crossbow_fire_amt WEAPON7_SHOTSPERBURST
                espawn A_SOUND_EMITTER
                seta[RETURN].extra SE_DIST_BOW // read distance
                seta[RETURN].xrepeat 64
                seta[RETURN].yrepeat 64
                seta[RETURN].cstat 32768
                stopsound S_CROSSBOW_CHARGE
                randvar temp 3
                add temp S_CROSSBOW_FIRE1
                soundvar temp
                rand temp 1
                add temp S_CROSSBOW_SLAM1
                soundvar temp
                sound S_CROSSBOW_LOAD
                // getp[].ang p_pl_ang
              //  addlogvar p_pl_ang
                ifn player_target -1
                {
                    set face_target player_target
                    state face_actor
					shiftl face_return 16
                    setp[].q16ang face_return
                }
                getprojectile[P_PLASMA_BOLT].velmult temp7
                setprojectile[P_PLASMA_BOLT].velmult 3

                ifg w3alt_count 90 ifl w3alt_ammo 15
                {
                    set temp4 3
                    set temp8 temp4
                    for itervar range temp8
                    {
                        set WEAPON7_SHOTSPERBURST 1
                        rand temp 16
                        ifl temp4 3
                        {
                            rand temp3 8
                            add temp3 16
                            ife temp4 1
                                inv temp3
                            add temp temp3
                        }
                        ifand w3alt_lastinv 1
                            inv temp
                        add temp player[].ang
                        and temp 2047
                        state shoot_first_bolt
                        setav[RETURN].was_plasma_alt 1
                        seta[RETURN].ang temp
                        rand temp2 512
                        ifl temp4 3
                        {
                            rand temp3 512
                            add temp3 256
                            ifand w3alt_lastinv 2
                            {
                                ifrnd 32 ife temp4 2
                                    inv temp3
                            }
                            else ife temp4 2
                                inv temp3
                            add temp2 temp3
                        }
                        ifand w3alt_lastinv 2
                            inv temp2
                        add temp2 sprite[RETURN].zvel
                        seta[RETURN].zvel temp2
                        getthisprojectile[RETURN].workslike temp3
                        orvar temp3 4096
                        setthisprojectile[RETURN].workslike temp3
                        ifand w3alt_lastinv 1
                            xor w3alt_lastinv 1
                        else
                            or w3alt_lastinv 1
                        
                        ifand w3alt_lastinv 2
                            xor w3alt_lastinv 2
                        else
                            or w3alt_lastinv 2
                        sub temp4 1
                    }
                    add w3alt_ammo 1
                    set weapon7_realclip w3alt_ammo
                    ifge weapon7_realclip CROSSBOW_CLIP
                    {
                        set WEAPON7_CLIP 1
                        set weapon7_realclip 0
                    }
                    else
                        set WEAPON7_CLIP 0
                }
                else
                {
                    add weapon7_realclip WEAPON7_SHOTSPERBURST
                    ifge weapon7_realclip CROSSBOW_CLIP
                    {
                        set WEAPON7_CLIP 1
                        set weapon7_realclip 0
                    }
                    else
                        set WEAPON7_CLIP 0
                    switch WEAPON7_SHOTSPERBURST
                        case 1
                            state shoot_first_bolt
                            break
                        case 2
                            state shoot_first_bolt
                            geta[RETURN].ang temp
                            geta[RETURN].zvel temp2
                            seta[RETURN].xrepeat 0
                            seta[RETURN].yrepeat 0
                            seta[RETURN].extra 0
                            seta[RETURN].statnum 1

                            add temp 6
                            state shoot_other_bolt

                            sub temp 12
                            state shoot_other_bolt
                            break
                        case 3
                            state shoot_first_bolt
                            geta[RETURN].ang temp
                            geta[RETURN].zvel temp2

                            add temp 16
                            state shoot_other_bolt

                            sub temp 32
                            state shoot_other_bolt
                            break
                        case 4
                            state shoot_first_bolt
                            geta[RETURN].ang temp
                            geta[RETURN].zvel temp2
                            seta[RETURN].xrepeat 0
                            seta[RETURN].yrepeat 0
                            seta[RETURN].extra 0
                            seta[RETURN].statnum 1


                            add temp 32
                            state shoot_other_bolt

                            sub temp 16
                            state shoot_other_bolt

                            sub temp 32
                            state shoot_other_bolt

                            add temp 16
                            state shoot_other_bolt
                            break
                        case 5
                            state shoot_first_bolt
                            geta[RETURN].ang temp
                            geta[RETURN].zvel temp2

                            add temp 32
                            state shoot_other_bolt

                            sub temp 16
                            state shoot_other_bolt

                            sub temp 48
                            state shoot_other_bolt

                            add temp 16
                            state shoot_other_bolt
                            break
                    endswitch
                    set WEAPON7_SHOTSPERBURST 0
                    set last_crossbow_spb 0
                }
            }
            else ifg w3alt_count 90
            {
                sub w3alt_count 1
                ifge w3alt_ammo 15
                    set w3alt_count 90
                getp[].ammo_amount WEAPON_CROSSBOW temp
                ife temp 0
                    set w3alt_count 90
                ife w3alt_count 90
                {
                    set WEAPON7_SHOTSPERBURST 0
                    set last_crossbow_spb 0
                }
                else
                {
                    ifg player[].kickback_pic 43
                    {
                        setp[].kickback_pic 38
                        set weaponcount 38
                    }
                }
            }
            setprojectile[P_PLASMA_BOLT].velmult temp7
            setp[].q16ang p_pl_ang
        }
        else
        {
            ife player[].kickback_pic 42
                sound S_CROSSBOW_SLIDE
            set WEAPON7_SHOTSPERBURST 0
            set last_crossbow_spb 0
        }
    }
    else
    {
        stopsound S_CROSSBOW_CHARGE
        set w3alt 0
    }
    ife player[].curr_weapon WEAPON_CROSSBOW ife player[].kickback_pic 49
    {
        stopsound S_CROSSBOW_CHARGE
        soundonce S_CROSSBOW_RESET
    }
    setp[].sound_pitch temp6

    // remove minigun for demo

    ife player[].curr_weapon WEAPON_MINIGUN
    {
        ifl player.kickback_pic 13
            set w4alt_zing 0
        ife press_alt 0
            set w4alt_zing 0
        getp[].ammo_amount WEAPON_MINIGUN temp
        ifg temp 0
        {
            set temp3 player[].kickback_pic
            geti[].bits temp2
            ifp pdead
                ifand temp2 INPUT_FIRE
                    xor temp2 INPUT_FIRE
            ifand temp2 INPUT_FIRE
                div temp3 6
            else
                div temp3 10
            set temp4 0
            ifg player[].kickback_pic 27
                set temp4 1
            else ife player[].kickback_pic 20
                set temp4 1
            ifand temp2 INPUT_FIRE
                nullop
            else
                set temp4 0
            ife temp4 1
            {
                getp[].kickback_pic temp4
                ifp ponground
                {
                    ifn press_forward 0
                        div temp4 3
                    else
                    {
                        ifn press_backward 0
                        {
                            shiftr temp4 1
                            add temp4 15
                        }
                        else
                            shiftr temp4 2
                    }
                }
				else ifn press_backward 0
					add temp4 15
				
                geta[].ang temp5
                add temp5 1024
                and temp5 2047
                cos move_xv temp5
                sin move_yv temp5
                mul move_xv temp4
                mul move_yv temp4

                // shiftr move_xv 14
                // shiftr move_yv 14
                add move_xv player[].posxv
                add move_yv player[].posyv
                setp[].posxv move_xv
                setp[].posyv move_yv
            }
            set temp2 RUNNINGSPEED
            shiftl temp3 10
            sub temp2 temp3
            ifg temp2 RUNNINGSPEED
                set temp2 RUNNINGSPEED
            setp[].runspeed temp2
            geti[].bits temp2
            ifp pdead
                ifand temp2 INPUT_FIRE
                    xor temp2 INPUT_FIRE
            ifn p_have_dart 0
                ifand temp2 INPUT_FIRE
                    xor temp2 INPUT_FIRE
            ifand temp2 INPUT_FIRE 
            {
                ifn press_alt 0 ife w4alt_zing 1
                {
                    getp[].kickback_pic temp2
                    ifle temp2 19
                    {
                        ifge temp2 13
                        {
                            mod temp2 3
                            add temp2 26
                            switch temp2
                                case 27
                                    set temp2 28
                                    break
                                case 29
                                    set temp2 30
                                    break
                            endswitch
                                    
                        }
                        setp[].kickback_pic temp2
                    }
                }
                ifg weapon_mini_fire 1
                    sub weapon_mini_fire 1
                else
                    set weapon_mini_fire 1
                getp[].sound_pitch temp3
                setp[].sound_pitch -1024
                ifg player[].kickback_pic 29
                {
                    setp[].kickback_pic 27
                    rand temp2 3
                    add temp2 S_TRIFIRE1
                    soundvar temp2
                }
                setp[].sound_pitch temp3
                ife minigun_need_spinup 0
                {
                    sound S_MINIGUN_WIND_UP
                    set minigun_need_spinup 1
                }
                else
                {
                    ifg minigun_need_spinup 60
                    {
                        stopactorsound THISACTOR S_MINIGUN_SPIN
                        set minigun_need_spinup 1
                    }
                    ifactorsound THISACTOR S_MINIGUN_SPIN
                        nullop
                    else
                        sound S_MINIGUN_SPIN
                    add minigun_need_spinup 1
                }
                ifg temp 0
                {

                    espawn A_SOUND_EMITTER
                    seta[RETURN].extra SE_DIST_MINIGUN_SPIN // read distance
                    seta[RETURN].xrepeat 64
                    seta[RETURN].yrepeat 64
                    seta[RETURN].cstat 32768
                    setp[].sound_pitch -1024
                    switch player[].kickback_pic
                        case 20
                            seta[RETURN].extra SE_DIST_MINIGUN
                            set weapon_mini_fire 4
                            rand temp2 3
                            add temp2 S_TRIFIRE1
                            soundvar temp2
                            ifn exp_aftershock 0
                                state ashock_minigun_shoot
                            else
                                state fury_minigun_shoot
                            sub temp 1
                            break
                        case 26
                            seta[RETURN].extra SE_DIST_MINIGUN
                            set weapon_mini_fire 4
                            rand temp2 3
                            add temp2 S_TRIFIRE1
                            soundvar temp2
                            ifn exp_aftershock 0
                                state ashock_minigun_shoot
                            else
                                state fury_minigun_shoot
                            sub temp 1
                            break
                        case 28
                            seta[RETURN].extra SE_DIST_MINIGUN
                            set weapon_mini_fire 4
                            rand temp2 3
                            add temp2 S_TRIFIRE1
                            soundvar temp2
                            ifn exp_aftershock 0
                                state ashock_minigun_shoot
                            else
                                state fury_minigun_shoot
                            sub temp 1
                            break
                        case 30
                            seta[RETURN].extra SE_DIST_MINIGUN
                            set weapon_mini_fire 4
                            rand temp2 3
                            add temp2 S_TRIFIRE1
                            soundvar temp2
                            ifn exp_aftershock 0
                                state ashock_minigun_shottype
                            else
                                state fury_minigun_shottype
                            break
                        default
                            break
                    endswitch

                }
                setp[].ammo_amount WEAPON_MINIGUN temp
                setp[].sound_pitch temp3
            }
            else ifn player[].kickback_pic 0
            {
                    ifge weapon_mini_fire 1
                    {
                        ifle player[].kickback_pic 11
                            set weapon_mini_fire -1
                        else
                            set weapon_mini_fire 0
                    }
                    ifn press_alt 0
                    {
                        add weaponcount 1
                        ifg weaponcount 19
                        {
                            set weaponcount 13
                            set w4alt_zing 1
                        }
                        setp[].kickback_pic weaponcount
                        set weapon_mini_fire 1
                        getp[].sound_pitch temp3
                        setp[].sound_pitch -1024
                        ifg player[].kickback_pic 29
                        {
                            setp[].kickback_pic 27
                            rand temp2 3
                                    add temp2 S_TRIFIRE1
                                    soundvar temp2

                        }
                        setp[].sound_pitch temp3
                        ife minigun_need_spinup 0
                        {
                            sound S_MINIGUN_WIND_UP
                            set minigun_need_spinup 1
                        }
                        else
                        {
                            ifg minigun_need_spinup 60
                            {
                                stopactorsound THISACTOR S_MINIGUN_SPIN
                                set minigun_need_spinup 1
                            }
                            ifactorsound THISACTOR S_MINIGUN_SPIN
                                nullop
                            else
                                sound S_MINIGUN_SPIN
                            add minigun_need_spinup 1
                        }
                        setp[].sound_pitch temp3
                    }
                    else
                    {
                        ifg player.kickback_pic 24
                            sub weaponcount 2
                        else
                            sub weaponcount 1
                        ife weaponcount 0
                            set weapon_mini_fire 0
                        setp[].kickback_pic weaponcount
                        ifn minigun_need_spinup 0
                        {
                            stopsound S_MINIGUN_SPIN
                            stopsound S_MINIGUN_WIND_UP
                            sound S_MINIGUN_WIND_DOWN
                            set minigun_need_spinup 0
                        }
                    }
            }
            else ifn press_alt 0
            {
                add weaponcount 1
                set weapon_mini_fire 1
                ifg weaponcount 19
                    set weaponcount 13
                setp[].kickback_pic weaponcount
                
                getp[].sound_pitch temp3
                setp[].sound_pitch -1024
                ifg player[].kickback_pic 29
                {
                    setp[].kickback_pic 27
                    rand temp2 3
                            add temp2 S_TRIFIRE1
                            soundvar temp2

                }
                setp[].sound_pitch temp3
                ife minigun_need_spinup 0
                {
                    sound S_MINIGUN_WIND_UP
                    set minigun_need_spinup 1
                }
                else
                {
                    ifg minigun_need_spinup 60
                    {
                        stopactorsound THISACTOR S_MINIGUN_SPIN
                        set minigun_need_spinup 1
                    }
                    ifactorsound THISACTOR S_MINIGUN_SPIN
                        nullop
                    else
                        sound S_MINIGUN_SPIN
                    add minigun_need_spinup 1
                }
                setp[].sound_pitch temp3
           } 
        }
        else ifn player[].kickback_pic 0
        {
                ifg player.kickback_pic 26
                    sub weaponcount 2
                else
                    sub weaponcount 1
                setp[].kickback_pic weaponcount
                ifn minigun_need_spinup 0
                {
                    stopsound S_MINIGUN_SPIN
                    stopsound S_MINIGUN_WIND_UP
                    sound S_MINIGUN_WIND_DOWN
                    set minigun_need_spinup 0
                }
        }
    }
    else ifn minigun_need_spinup 0
    {
        stopsound S_MINIGUN_SPIN
        stopsound S_MINIGUN_WIND_UP
        sound S_MINIGUN_WIND_DOWN
        set minigun_need_spinup 0
    }

    ife player[].curr_weapon 5
    {
        ife player[].kickback_pic 14
            sound S_BBOMB_THROW
        ife player[].kickback_pic 15
            sound S_BBOMB_THROW_ALT
    }

    ifg other_smg_toggle 1
        sub other_smg_toggle 1
    else ifl other_smg_toggle 0
        add other_smg_toggle 1
    ifp pdead
        nullop
    else ife player[].curr_weapon WEAPON_SMG
    {
        ifl other_smg_toggle -5
            ifn player[].weapon_pos 0
                    set other_smg_toggle -5
        ifge other_smg 1
        {
            ife press_alt 1 ifl kickback_other 7 ifl player.kickback_pic 7
            {
                ife other_smg_toggle 0
                    set other_smg_toggle 12
                else
                {
                    ifg other_smg_toggle 0
                        set other_smg_toggle -11
                    else
                        add other_smg_toggle 12
                }
            }
        }
        else ifn other_smg_toggle 0
            set other_smg_toggle -11
        set WEAPON3_CLIP 0
        ifn fuckup_aim2 0
        {
            setprojectile[P_SMG2].extra smg_extra
            setprojectile[P_SMG2].extra_rand smg_extra_rand
            ifg fuckup_aim2_r 0
            {
                /*getp[].horiz temp
                set temp2 fuckup_aim2
                set temp3 temp2
                shiftr temp3 3
                add temp2 temp3
				ife p_smg_fuckdir1 1
					inv temp2
                shiftl temp2 16
                add temp temp2
                setp[].horiz temp*/
                getp[].q16ang temp
				set temp3 p_smg_randang1
                /*ife fuckup_aim2_r 2
                {
                    inv temp2
                    add temp 133693440
                    // and temp 2047
                }*/
				sub temp temp3 // the opposite must happen here to revert changes from DOFIRE event
                //add temp temp2
                setp[].q16ang temp
				
				getp .q16horiz temp
				add temp p_smg_randhoriz1
				setp .q16horiz temp
				
                set fuckup_aim2_r 0
            }

            ifge fuckup_aim2_count 3
            {
                ifg fuckup_aim2 0
                    sub fuckup_aim2 1
                else ifl fuckup_aim2 0
                    add fuckup_aim2 1
                set fuckup_aim2_count 0
            }
            else
            {
                add fuckup_aim2_count 1
                ife other_smg_toggle 0
                    add fuckup_aim2_count 1
                ife player[].kickback_pic 0
                {
                    ifg fuckup_aim2 8
                        shiftr fuckup_aim2 2
                    add fuckup_aim2_count 2
                }
            }
            ife fuckup_aim2 -1
                set fuckup_aim2 0
            ifg player[].kickback_pic WEAPON3_TOTALTIME
            {
                set fuckup_aim2 0
                set fuckup_aim2_count 0
            }
        }

            getp[].sound_pitch temp3
            setp[].sound_pitch 386
            ife player[].kickback_pic 1
            {
                espawn A_SOUND_EMITTER
                seta[RETURN].extra SE_DIST_SMG // read distance
                seta[RETURN].xrepeat 64
                seta[RETURN].yrepeat 64
                seta[RETURN].cstat 32768
                setp[].kickback_pic 2
                ifl fuckup_aim2 1
                    add fuckup_aim2 2
                else
                    add fuckup_aim2 1
                sound S_SMG_SINGLE
                eshoot A_SHELL1
                    geta[RETURN].xvel temp2
                    shiftl temp2 2
                    add temp2 48
                    seta[RETURN].xvel temp2
                    geta[RETURN].ang temp2
                    rand temp4 63
                    clamp temp4 16 63
                    add temp2 temp4
                    add temp2 1408
                    add temp2 1024
                    and temp2 2047
                    seta[RETURN].ang temp2
                    geta[RETURN].zvel temp2
                    rand temp4 256
                    sub temp2 temp4
                    sub temp2 256
                    seta[RETURN].zvel temp2
                    geta[RETURN].z temp2
                    set temp5 player[].horiz
                    sub temp5 100
                    shiftl temp5 5
                    sub temp2 temp5
                    add temp2 1280
                    seta[RETURN].z temp2
                    set move_v 256
                    state move_actor
                    geta[RETURN].x temp
                    add temp move_xv
                    seta[RETURN].x temp
                    geta[RETURN].y temp
                    add temp move_yv
                    seta[RETURN].y temp
                    
                    
                    geta[].ang temp2
                    seta[].ang sprite[RETURN].ang
                    set move_v 256
                    state move_actor
                    geta[RETURN].x temp
                    set temp4 temp
                    add temp move_xv
                    seta[RETURN].x temp
                    geta[RETURN].y temp
                    set temp5 temp
                    add temp move_yv
                    seta[RETURN].y temp
                    seta[].ang temp2
                    set temp2 sprite[].sectnum
                    updatesector sprite[RETURN].x sprite[RETURN].y temp2
                    ife temp2 -1
                    {
                        seta[RETURN].x temp4
                        seta[RETURN].y temp5
                        geta[RETURN].zvel temp2
                        sub temp2 1024
                        seta[RETURN].zvel temp2
                    }
                    setav[RETURN].shell_smg 1 // removes clipmove with regular sprites
                    ifl sprite[].xvel 10
                        setav[RETURN].shell_invisible 1
                    ifand input[].extbits INPUT_MOVE_FORWARD
                    {
                        ifand input[].bits INPUT_STRAFE_RIGHT
                            setav[RETURN].shell_invisible 1
                    }
                    else ifand input[].extbits INPUT_MOVE_BACKWARD
                        setav[RETURN].shell_invisible 1
                    else ifand input[].bits INPUT_STRAFE_RIGHT
                            setav[RETURN].shell_invisible 1

            }
            else ife player[].kickback_pic 3
            {
				sound S_SMG_SINGLE
                setp[].kickback_pic 4
                add fuckup_aim2 1
            }
            else ife player[].kickback_pic 6
            {
                ife player[].ammo_amount player[].curr_weapon 0
                {
                    setp[].kickback_pic 0
                    set weapon3_realclip 0
					sound S_LAVANAIL_FLESH
                }
                else
                {
                    ifl weapon3_realclip SMG_CLIP
                        add weapon3_realclip 2
                    ifge weapon3_realclip SMG_CLIP
                    {
                        set temp WEAPON3_TOTALTIME
                        setp[].kickback_pic temp
                        set weapon3_realclip 0
                        set WEAPON3_CLIP 1
						sound S_LAVANAIL_FLESH
                    }
                    else
                    {
                        ifand input[].bits INPUT_FIRE
                            setp[].kickback_pic 7
						else sound S_LAVANAIL_FLESH
                    }
                }
            }
            setp[].sound_pitch 1024
            ife player[].kickback_pic 10
                sound S_SMG_CLIPOUT
            setp[].sound_pitch temp3
            ife player[].kickback_pic 17
                sound S_SMG_CLIPIN
            else ife player[].kickback_pic 30
                sound S_SMG_BOLT
				
            ifg main_smg_fired 0
                sub main_smg_fired 1
            getp .kickback_pic temp7
            ife temp7 30
                set weapon3_delay 3
            else ife temp7 45
            {
                ifn other_smg_toggle 0
                    set weapon3_delay 2
            }
            else ife kickback_other 30
                set weapon3_delay 3
            else
            {
                ifg weapon3_delay 0
                {
                    sub weapon3_delay 1
                    ifl player.kickback_pic 33
                    {
                        setp .kickback_pic 31
                        set temp7 31
                    }
                    else ifl kickback_other 10
                    {
                        set kickback_other 8
                    }
                    else ifl kickback_other 33
                    {
                        set kickback_other 31
                    }
                }
            }
            ifn other_smg_toggle 0
            {
                getp .kickback_pic temp7
                /* qputs 11 %ld
                qsprintf 11 11 kickback_other
                quote 11 */
                set temp6 WEAPON3_RELOAD
                sub temp6 2
                ifg temp7 temp6 ife main_smg_fired 0
                {
                    setp .kickback_pic temp6
                    ifl kickback_other 7
                        set kickback_other 7
                }
                getp[].q16ang temp7
                getp[].q16horiz temp6
                
                /*getp[].horiz temp
                set temp2 fuckup_aim2
                set temp3 temp2
                shiftr temp3 3
                add temp2 temp3
				inv temp2
                shiftl temp2 16
                sub temp temp2
                setp[].horiz temp*/
                getp[].q16ang temp
                /*inv temp2
                add temp 133955584
                // and temp 2047
                add temp temp2*/
				set temp3 fuckup_aim2
				shiftl temp3 19
				rand temp2 temp3
				set temp3 fuckup_aim2
				shiftl temp3 18
				sub temp2 temp3
				// range -fuckup_aim2 to fuckup_aim2
				// shiftl temp2 1 // x2 inaccurate
				shiftr temp2 1
				add temp temp2
                setp[].q16ang temp
				
				getp .q16horiz temp
				rand temp2 fuckup_aim2
				set temp3 fuckup_aim2
				shiftr temp3 1
				sub temp2 temp3
				mul temp2 6 // x2 inaccurate
				div temp2 7
				sub temp temp2
				setp .q16horiz temp
                
                ife kickback_other 1
                {
                    espawn A_SOUND_EMITTER
                    seta[RETURN].extra SE_DIST_SMG // read distance
                    seta[RETURN].xrepeat 64
                    seta[RETURN].yrepeat 64
                    seta[RETURN].cstat 32768
                    set kickback_other 2
                    getprojectile[P_SMG2].offset temp
                    getprojectile[P_SMG2].extra temp2
                    getprojectile[P_SMG2].extra_rand temp3
                    set temp4 temp2
                    shiftr temp4 2
                    sub temp4 temp2
                    inv temp4
                    setprojectile[P_SMG2].extra temp4
                    set temp4 temp3
                    shiftr temp4 2
                    sub temp4 temp3
                    inv temp4
                    setprojectile[P_SMG2].extra_rand temp4
                    setprojectile[P_SMG2].offset -448
                    ifn exp_aftershock 0
                        state ashock_smg_shoot
                    else
                        state fury_smg_shoot
                    setprojectile[P_SMG2].offset temp
                    setprojectile[P_SMG2].extra temp2
                    setprojectile[P_SMG2].extra_rand temp3
                    sound S_SMG_SINGLE
                    setp[].q16ang temp7
                    setp[].q16horiz temp6
                    eshoot A_SHELL1
                        geta[].ang temp2
                        set temp4 sprite[].ang
                        sub temp4 512
                        and temp4 2047
                        seta[].ang temp4
                        set move_v 240
                        state move_actor
                        geta[RETURN].x temp
                        set temp4 temp
                        add temp move_xv
                        seta[RETURN].x temp
                        geta[RETURN].y temp
                        set temp5 temp
                        add temp move_yv
                        seta[RETURN].y temp
                        seta[].ang temp2
                        set temp2 sprite[].sectnum
                        updatesector sprite[RETURN].x sprite[RETURN].y temp2
                        ife temp2 -1
                        {
                            seta[RETURN].x temp4
                            seta[RETURN].y temp5
                        }
                        
                        geta[RETURN].xvel temp2
                        shiftl temp2 2
                        add temp2 48
                        seta[RETURN].xvel temp2
                        geta[RETURN].ang temp2
                        rand temp4 63
                        clamp temp4 16 63
                        add temp2 temp4
                        add temp2 1552
                        and temp2 2047
                        seta[RETURN].ang temp2
                        geta[RETURN].zvel temp2
                        rand temp4 256
                        sub temp2 temp4
                        sub temp2 320
                        seta[RETURN].zvel temp2
                        geta[RETURN].z temp2
                        set temp5 player[].horiz
                        sub temp5 100
                        shiftl temp5 5
                        sub temp2 temp5
                        shiftr temp5 2
                        ifl player.horiz 100
                            sub temp2 temp5
                        add temp2 temp5
                        add temp2 768
                        seta[RETURN].z temp2
                        
                        geta[].ang temp2
                        set move_v 256
                        state move_actor
                        geta[RETURN].x temp
                        set temp4 temp
                        add temp move_xv
                        seta[RETURN].x temp
                        geta[RETURN].y temp
                        set temp5 temp
                        add temp move_yv
                        seta[RETURN].y temp
                        seta[].ang temp2
                        
                        set temp2 sprite[].sectnum
                        updatesector sprite[RETURN].x sprite[RETURN].y temp2
                        ife temp2 -1
                        {
                            seta[RETURN].x temp4
                            seta[RETURN].y temp5
                            geta[RETURN].zvel temp2
                            sub temp2 1024
                            seta[RETURN].zvel temp2
                        }
                        setav[RETURN].shell_smg 1 // removes clipmove with regular sprites
                        ifl sprite[].xvel 10
                            setav[RETURN].shell_invisible 1
                        ifand input[].extbits INPUT_MOVE_FORWARD
                        {
                            ifand input[].bits INPUT_STRAFE_RIGHT
                                setav[RETURN].shell_invisible 1
                        }
                        else ifand input[].extbits INPUT_MOVE_BACKWARD
                            setav[RETURN].shell_invisible 1
                        else ifand input[].bits INPUT_STRAFE_RIGHT
                                setav[RETURN].shell_invisible 1

                }
                else ife kickback_other 3
                {
                    set kickback_other 4
                    sound S_SMG_SINGLE
                    getprojectile[P_SMG2].offset temp
                    getprojectile[P_SMG2].extra temp2
                    getprojectile[P_SMG2].extra_rand temp3
                    set temp4 temp2
                    shiftr temp4 1
                    setprojectile[P_SMG2].extra temp4
                    set temp4 temp3
                    shiftr temp4 1
                    setprojectile[P_SMG2].extra_rand temp4
                    setprojectile[P_SMG2].offset -448
                    ifn exp_aftershock 0
                        state ashock_smg_shoot
                    else
                        state fury_smg_shoot
                    setprojectile[P_SMG2].offset temp
                    setprojectile[P_SMG2].extra temp2
                    setprojectile[P_SMG2].extra_rand temp3
                    getp[].ammo_amount WEAPON_SMG temp
                    sub temp 2
                    clamp temp 0 WEAPON3_MAXAMMO
                    setp[].ammo_amount WEAPON_SMG temp
                    ife temp 0
                    {
                            set WEAPON3_CLIP 0
                            setp[].kickback_pic 0
                            set weapon3_realclip 0
                    }
                }
                else ife kickback_other 6
                {
                    ife player[].ammo_amount player[].curr_weapon 0
                    {
                        set kickback_other 0
						sound S_LAVANAIL_FLESH
                    }
                    else
                    {
                        ifge weapon3_realclip SMG_CLIP
                        {
                            set temp WEAPON3_TOTALTIME
                            set kickback_other temp
							sound S_LAVANAIL_FLESH
                        }
                        else
                        {
                            ifand input[].bits INPUT_FIRE
                                set kickback_other 7
							else
								sound S_LAVANAIL_FLESH
                        }
                    }
                }
                setp[].sound_pitch 1024
                ife kickback_other 10
                    sound S_SMG_CLIPOUT                    
                setp[].sound_pitch temp3
                ife kickback_other 17
                    sound S_SMG_CLIPIN
                else ife kickback_other 30
                    sound S_SMG_BOLT
                
                ifn kickback_other 0
                    add kickback_other 1
                ifge kickback_other WEAPON3_TOTALTIME
                {
                    set temp4 WEAPON3_RELOAD
                    sub temp4 2
                    ifl player[].kickback_pic temp4
                        set kickback_other 0
                    else ifg kickback_other temp4
                    {
                        set kickback_other 0
                        setp .kickback_pic 46
                    }
                }
                ife other_smg_toggle 1
                    ifg player[].kickback_pic 3
                        ifl player[].kickback_pic WEAPON3_TOTALTIME
                            ife kickback_other 0
                                ifge player[].ammo_amount player[].curr_weapon 2
                                    set kickback_other 1
                ifn main_smg_fired 0
                {
                    set kickback_other 0
                    ifg player.kickback_pic 2 ifl player.kickback_pic 45
                        set main_smg_fired 3
                    else ifl player.kickback_pic 45
                        set main_smg_fired 0
                }
                setp[].q16ang temp7
                setp[].q16horiz temp6
        }
        else ifn player.kickback_pic 0
            set main_smg_fired 3
    }
    else
        set kickback_other 0
    ife player[].curr_weapon WEAPON_LAM
    {
        ife player.kickback_pic 0
        {
            ife w9_tween 1
                set w9_tween 0
            ifn lam_hit -1
            {
                set temp4 lam_hitx
                sub temp4 player.posx
                mul temp4 temp4
                
                set temp5 lam_hity
                sub temp5 player.posy
                mul temp5 temp5
                
                add temp4 temp5
                sqrt temp4 temp4
                abs temp4
                set temp3 player.clipdist
                shiftl temp3 2
                
                set temp2 lam_hit
                ifg temp2 32767 ifl temp2 49152
                {
                    sub temp2 32768
                    ife wall[temp2].overpicnum T_FORCEFIELD
                        inv temp3
                }
                ifle temp4 temp3
                {
                    ifand w9_state 1
                        nullop
                    else
                        set w9_tween 1
                    or w9_state 1
                }
                else
                {
                    ifand w9_state 1
                    {
                        xor w9_state 1
                        set w9_tween 1
                    }
                }
            }
            else
            {
                ifand w9_state 1
                {
                    xor w9_state 1
                    set w9_tween 1
                }
            }
            ife press_alt 1
            {
                ife w9_lock_button 0
                    set w9_lock_button 1
            }
        }
        else
        {
            set temp WEAPON8_TOTALTIME
            sub temp 1
            ife player.kickback_pic 1
            {
                
                ifand w9_state 1
                    lockplayer 8
                else
                    lockplayer 2
                sound S_BBOMB_THROW_ALT
                rand temp2 2
                add temp2 S_MELEE_SWING01
                soundvar temp2
            }
            else ife player.kickback_pic temp
            {
                set w9_state 0
                lockplayer 0
            }
        }
        ifg w9_lock_button 0
        {
            add w9_lock_button 2
            ife w9_lock_button 15
                sound S_SWITCH_BUTTON02
            ife w9_lock_button 17
            {
                ifand w9_state 2
                    xor w9_state 2
                else
                    or w9_state 2
                setp .sound_pitch -128
                sound S_PUCK_BEEP
                setp .sound_pitch 0
            }
            ife w9_lock_button 21
                setp .kickback_pic 0
            else ifl w9_lock_button 21
                setp .kickback_pic 1
            else
                ife player.kickback_pic 1
                    shiftl w9_lock_button 1
            ifg w9_lock_button 31
            {
                
                set w9_lock_button 0
            }
        }
    }
    // weapon frame tester... doesn't belong in demo!
    // #exclude from demo
    ife player[].curr_weapon 9
    {
            geti[].bits temp2
            ifand temp2 INPUT_FIRE
            {
                ife T_GUNTESTER 6035
                {
                    add guntester_counter 1
                    clamp guntester_counter 0 30
                    ifg guntester_counter 29
                        set guntester_counter 27

                    ifge guntester_counter 27
                    {
                        switch guntester_counter
                            case 27
                                set temp 0
                                break
                            case 28
                                set temp 2
                                break
                            case 29
                                set temp 4
                                break
                        endswitch
                    }
                    else
                    {
                        set temp guntester_counter
                        mod temp 6
                    }
                    set guntester_tileadd temp
                }
                else
                {
                    add guntester_counter 1

                    ife guntester_counter 15
                    {
                        set guntester_counter 0
                        add guntester_tileadd 1
                    }
                    ifg guntester_tileadd 6
                        set guntester_tileadd 1
                }
            }
            else
            {
                ife T_GUNTESTER 6035
                {
                    ife guntester_counter 8
                        set guntester_counter 0
                    else ifl guntester_counter 8 ifn guntester_counter 0
                    {
                        sub guntester_counter 1
                        ifle guntester_counter 2
                            set guntester_counter 0
                    }
                    ifg guntester_counter 0
                    {
                        sub guntester_counter 1
                        set temp guntester_counter
                        mod temp 6
                        sub temp 13
                        abs temp
                        mod temp 6
                        set guntester_tileadd temp
                    }
                    else
                        set guntester_tileadd 0
                }
                else
                {
                    set guntester_counter 0
                    set guntester_tileadd 0
                }
            }
    }
    else
    {
        set guntester_counter 0
        set guntester_tileadd 0
    }
    // #endexclude
    ifn exp_aftershock 0
        state ashock_weapon_bike_wrecker
ends

// var p_mouse_clock -1 0 // track the difference compared to totalclock
var p_input_joymag -1 1
var p_input_joymag_off -1 1
var p_input_baton 0 1
var p_input_w1alt 0 1

appendevent EVENT_PREUPDATEANGLES
    getp .q16ang p_oq16ang
    getp .q16horiz p_oq16horiz
    
    ifl weapon1_alt 0
    {
        seti .avel 0
        seti .horz 0
    }
endevent

appendevent EVENT_POSTUPDATEANGLES
    ife p_oq16ang -1 // init
    {
        getp .q16ang p_oq16ang
        getp .q16horiz p_oq16horiz
    }

    ife p_input_joymag 1 // joystick magnetism
    {
        state get_q16ang_diff

        getp .q16horiz temp3
        sub temp3 p_oq16horiz

        set temp4 temp2
        set temp5 temp3

        div temp2 p_input_joymag_off

        set temp6 p_input_joymag_off
        shiftr temp6 1
        clamp temp6 1 256
        div temp3 temp6
        ife temp2 0
        {
            ifn temp4 0
            {
                set temp2 temp4
                clamp temp2 -1 1
                shiftl temp2 16
            }
        }
        ife temp3 0
        {
            ifn temp5 0
            {
                set temp3 temp5
                clamp temp3 -1 1
                shiftl temp3 16
            }
        }
        set temp6 p_oq16ang
        add temp6 temp2
        setp .q16ang temp6

        set temp6 p_oq16horiz
        add temp6 temp3
        setp .q16horiz temp6
    }

    ife p_input_baton 1
    {
        state get_q16ang_diff // clobbers temp2
        ifn temp2 0
        {
            set temp4 temp2
            mul temp2 5
            shiftr temp2 3
            ife temp2 0
            {
                set temp2 1
                ifl temp4 0
                    inv temp2
            }
        }
        state set_q16ang_diff // clobbers temp3, reads temp2

        state get_q16horiz_diff // clobbers temp2
        ifn temp2 0
        {
            set temp4 temp2
            mul temp2 5
            shiftr temp2 3
            ife temp2 0
            {
                set temp2 1
                ifl temp4 0
                    inv temp2
            }
        }
        state set_q16horiz_diff // clobbers temp3, reads temp2
    }

    ife p_input_w1alt 1 // loverboy alt fire targeting
    {
        state get_q16ang_diff
        ifn temp2 0
        {
            set temp4 temp2
            mul temp2 3
            shiftr temp2 2
            ife temp2 0
            {
                set temp2 65536
                ifl temp4 0
                    inv temp2
            }
        }
        state set_q16ang_diff

        state get_q16horiz_diff
        ifn temp2 0
        {
            set temp4 temp2
            mul temp2 3
            shiftr temp2 2
            ife temp2 0
            {
                set temp2 65536
                ifl temp4 0
                    inv temp2
            }
        }
        state set_q16horiz_diff
    }
    ifn exp_aftershock 0
        state ashock_processunsyncedinput_bike
endevent

// regularly polled input
appendevent EVENT_PROCESSINPUT
    set p_input_w1alt 0
    set p_input_joymag 0
    set p_input_baton 0
    // joystick magnetism
    ife userdef.gamepadactive 1 ifn player_target -1
    {
        set att_target player_target
        state angle_to_target
        set p_input_joymag_off att_return
        clamp p_input_joymag_off 0 256


        sub p_input_joymag_off 256
        abs p_input_joymag_off
        ifl p_input_joymag_off 64
            shiftr p_input_joymag_off 1
        div p_input_joymag_off 112
        clamp p_input_joymag_off 1 256


        set p_input_joymag 1
    }
    // end magnetism
    ife player[].curr_weapon 0
    {
        ifn player_target -1
        {
            ifn player[].kickback_pic 0 ifl player[].kickback_pic 50
            {
                ldist temp2 player_target player[].i
                ifl temp2 1280
                {
                    set att_target player_target
                    state angle_to_target
                    ifl att_return 24
                        set p_input_baton 1
                }
            }
        }
    }
    ife player[].curr_weapon 1 ifn weapon1_alt 0
    {
        ife player[].kickback_pic 0
            set p_input_w1alt 1

        geti[].bits temp2
        ifand temp2 INPUT_FIRE
            xor temp2 INPUT_FIRE
        seti[].bits temp2
    }
// remove for demo
    ife player[].curr_weapon WEAPON_MINIGUN
    {
        getp[].ammo_amount WEAPON_MINIGUN temp
        ifg temp 0
        {
            ife player.kickback_pic 27
            {
                getp .q16horiz temp2
                add temp2 32768
                setp .q16horiz temp2
            }
        }
    }

    ife player[].curr_weapon WEAPON_BOWLINGBOMB
    {
        ifg player.kickback_pic 0
        {
            ifle player.kickback_pic WEAPON5_FIREDELAY
            {
                ifn w5alt 0
                {
                    geti[].bits temp2
                    ifand temp2 INPUT_FIRE
                    {
                        xor temp2 INPUT_FIRE
                        seti[].bits temp2
                    }
                }
                else ife w5alt_delay 1
                {
                    geti[].bits temp2
                    ifand temp2 INPUT_FIRE
                    {
                        xor temp2 INPUT_FIRE
                        seti[].bits temp2
                    }
                }
            }
        }
        else ife w5alt_delay 1
        {
            geti[].bits temp2
            ifand temp2 INPUT_FIRE
            {
                xor temp2 INPUT_FIRE
                seti[].bits temp2
            }
        }
    }
    ifn exp_aftershock 0
        state ashock_processinput_bike
endevent


//
// HUD weapon drawing below this point
//

// Old rotatesprite states and variables, should be removed!


var hud_tilenum
var hud_x
var hud_y
var hud_scale 65536 0
var hud_angle
var hud_shade
var hud_pal
var hud_orientation
var hud_alpha

var hud_shadef
var hud_palf

// It is unfortunate that we need so many temporary vars.
var hud_temp
var hud_temp2
var hud_temp3
var hud_temp4
var hud_need_mf
var hud_need_mf_shade
var hud_fast_shade -1 0


/*
// The following temporary vars are named differently because they are used
// in G_Draw[...] which would overwrite their values if used elsewhere.
*/
var hud_G_Draw_temp
var hud_G_Draw_temp2

var fix_aspect 1 0
var aspect_ratio

var hud_rescale_temp
var hud_rescale_temp2
var hud_rescale_temp3
var hud_rescale_temp4
var hud_rescale_temp5

var weapon_pos
var weaponscale
var playerid

// define ROTATESPRITE_MAX 2048

// preliminary functions

defstate G_DrawTilePal
    ifand hud_orientation 4
        add hud_angle 1024

    or hud_orientation 2

    rotatesprite hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation windowx1 windowy1 windowx2 windowy2

    ifand hud_orientation 2
        xor hud_orientation 2

    ifand hud_orientation 4
        sub hud_angle 1024
ends

var modaspect
var hud_noshift
defstate G_FixAspect
    // * = points where we could overflow or have imprecisions
    ife hud_noshift 0
    {
        shiftl hud_x 16
        shiftl hud_y 16
    }

    setvarvar aspect_ratio xdim
    shiftl aspect_ratio 8
    mulvar aspect_ratio 10
    divvarvar aspect_ratio ydim
    mul aspect_ratio 10
    sub aspect_ratio 40960 // 10485760
    set hud_rescale_temp4 0
    ifand hud_orientation 256
        set hud_rescale_temp4 1
    else ifand hud_orientation 512
        set hud_rescale_temp4 1
    ifn aspect_ratio 0 ife hud_rescale_temp4 1
    {
        set hud_rescale_temp4 aspect_ratio
        mul hud_rescale_temp4 10
        div hud_rescale_temp4 9
        shiftl hud_rescale_temp4 8
        ifand hud_orientation 512
            add hud_x hud_rescale_temp4
        else
        {
            mul hud_rescale_temp4 116
            div hud_rescale_temp4 100
            sub hud_x hud_rescale_temp4
        }
        div aspect_ratio 10
        shiftl aspect_ratio 8
        sub hud_y aspect_ratio
    }
    set hud_rescale_temp4 160
    shiftl hud_rescale_temp4 16
    sub hud_x hud_rescale_temp4
    shiftr hud_x 8 // *
    mul hud_x ydim
    shiftl hud_x 2
    div hud_x 3
    div hud_x xdim
    shiftl hud_x 8 // *
    add hud_x hud_rescale_temp4
    set hud_rescale_temp4 100
    shiftl hud_rescale_temp4 16
    sub hud_y hud_rescale_temp4
    shiftr hud_y 8 // *
    mul hud_y ydim
    shiftl hud_y 2
    div hud_y 3
    div hud_y xdim
    shiftl hud_y 8 // *
    add hud_y hud_rescale_temp4
    shiftr hud_scale 4 // *
    mul hud_scale ydim
    shiftl hud_scale 2
    div hud_scale 3
    div hud_scale xdim
    shiftl hud_scale 4 // *

    mul hud_scale 9
    shiftr hud_scale 3
    add hud_x 786432 // 12px
    add hud_y 786432 // 12px
    ife hud_need_mf 1
    {
        sub hud_x 196608 // 3px
        sub hud_y 393216 // 6px
    }
    ifn modaspect 0
    {
        // setaspect modaspect modaspect
        set modaspect 0
    }
    else
        // setaspect 65536 65536
    or hud_orientation 1024
ends

defstate G_DrawTileScaled
    set hud_G_Draw_temp 192 // xoff

    ifand hud_orientation 262144
    {
        set hud_G_Draw_temp 160
        xor hud_orientation 262144
    }

    ifand hud_orientation 4
        add hud_angle 1024

    mul hud_x weaponscale
    div hud_x 100
    set hud_G_Draw_temp2 hud_G_Draw_temp
    mul hud_G_Draw_temp2 weaponscale
    div hud_G_Draw_temp2 100
    sub hud_G_Draw_temp hud_G_Draw_temp2
    add hud_x hud_G_Draw_temp

    mul hud_y weaponscale
    div hud_y 100
    set hud_G_Draw_temp 200
    set hud_G_Draw_temp2 hud_G_Draw_temp
    mul hud_G_Draw_temp2 weaponscale
    div hud_G_Draw_temp2 100
    sub hud_G_Draw_temp hud_G_Draw_temp2
    add hud_y hud_G_Draw_temp

    // set hud_scale 65536 // do this elsewhere; leave it open for modification
    mul hud_scale weaponscale
    div hud_scale 100

    or hud_orientation 2
    set hud_rescale_temp hud_scale
    set hud_rescale_temp2 hud_x
    set hud_rescale_temp3 hud_y
    ife fix_aspect 1
        state G_FixAspect
    or hud_orientation 2048
    ife hud_need_mf_shade -255
        set hud_need_mf_shade 0
    ifn hud_fast_shade -1
    {
        rotatespritea hud_x hud_y hud_scale hud_angle hud_tilenum hud_fast_shade hud_pal hud_orientation hud_alpha windowx1 windowy1 windowx2 windowy2
        set hud_fast_shade -1
    }
    else ife hud_need_mf 1
        rotatespritea hud_x hud_y hud_scale hud_angle hud_tilenum hud_need_mf_shade hud_pal hud_orientation hud_alpha windowx1 windowy1 windowx2 windowy2
    else
        rotatespritea hud_x hud_y hud_scale hud_angle hud_tilenum hud_shade hud_pal hud_orientation hud_alpha windowx1 windowy1 windowx2 windowy2
    set hud_need_mf_shade 0
    set hud_alpha 0
    xor hud_orientation 2048
    ife fix_aspect 1
    {
        ife hud_noshift 0
        {
            shiftr hud_x 16
            shiftr hud_y 16
        }
    }
    set hud_noshift 0
    set hud_scale hud_rescale_temp
    set hud_x hud_rescale_temp2
    set hud_y hud_rescale_temp3
    set hud_need_mf 0
    ifand hud_orientation 2
        xor hud_orientation 2

    ifand hud_orientation 4
        sub hud_angle 1024

    set hud_rescale_temp 65536
    mul hud_rescale_temp ydim
    shiftl hud_rescale_temp 3

    set hud_rescale_temp2 xdim
    mul hud_rescale_temp2 5

    div hud_rescale_temp hud_rescale_temp2
    // setaspect 65536 hud_rescale_temp
ends


// special variables for text
var text_angle
var text_quote
var text_alpha
var text_xspace
var text_yline
var text_xbetween
var text_ybetween
var text_flags

// same as above but for screentext
defstate G_DrawTextScaled
    set hud_G_Draw_temp 192 // xoff

    ifand hud_orientation 262144
    {
        set hud_G_Draw_temp 160
        xor hud_orientation 262144
    }

    ifand hud_orientation 4
        add hud_angle 1024

    mul hud_x weaponscale
    div hud_x 100
    set hud_G_Draw_temp2 hud_G_Draw_temp
    mul hud_G_Draw_temp2 weaponscale
    div hud_G_Draw_temp2 100
    sub hud_G_Draw_temp hud_G_Draw_temp2
    add hud_x hud_G_Draw_temp

    mul hud_y weaponscale
    div hud_y 100
    set hud_G_Draw_temp 200
    set hud_G_Draw_temp2 hud_G_Draw_temp
    mul hud_G_Draw_temp2 weaponscale
    div hud_G_Draw_temp2 100
    sub hud_G_Draw_temp hud_G_Draw_temp2
    add hud_y hud_G_Draw_temp

    // set hud_scale 65536 // do this elsewhere; leave it open for modification
    mul hud_scale weaponscale
    div hud_scale 100

    or hud_orientation 2
    set hud_rescale_temp hud_scale
    set hud_rescale_temp2 hud_x
    set hud_rescale_temp3 hud_y
    ife fix_aspect 1
        state G_FixAspect
		
    or text_flags TEXT_VARHEIGHT

    or hud_orientation 2048
    and hud_orientation -17 // ~16
    shiftr hud_scale 1
    screentext hud_tilenum hud_x hud_y hud_scale hud_angle text_angle text_quote hud_shade hud_pal hud_orientation text_alpha text_xspace text_yline text_xbetween text_ybetween text_flags windowx1 windowy1 windowx2 windowy2
    ife fix_aspect 1
    {
        ife hud_noshift 0
        {
            shiftr hud_x 16
            shiftr hud_y 16
        }
    }
    set hud_noshift 0
    shiftl hud_scale 1
    set hud_scale hud_rescale_temp
    set hud_x hud_rescale_temp2
    set hud_y hud_rescale_temp3

    ifand hud_orientation 2
        xor hud_orientation 2

    ifand hud_orientation 4
        sub hud_angle 1024

    set hud_rescale_temp 65536
    mul hud_rescale_temp ydim
    shiftl hud_rescale_temp 3

    set hud_rescale_temp2 xdim
    mul hud_rescale_temp2 5

    div hud_rescale_temp hud_rescale_temp2
    // setaspect 65536 hud_rescale_temp
ends


defstate G_DrawWeaponTile
    // basic fading between player weapon shades
    ifn hud_shade hud_shadef
    {
        set hud_G_Draw_temp 0
        ife hud_pal 0 set hud_G_Draw_temp 1
        ife hud_pal hud_palf set hud_G_Draw_temp 1
        ife hud_G_Draw_temp 1
        {
            set hud_G_Draw_temp hud_shade
            sub hud_G_Draw_temp hud_shadef
            set hud_G_Draw_temp2 hud_G_Draw_temp
            shiftvarr hud_G_Draw_temp 2
            add hud_shadef hud_G_Draw_temp

            ife hud_G_Draw_temp 0
            {
                shiftvarr hud_G_Draw_temp2 1
                add hud_shadef hud_G_Draw_temp2
                ife hud_G_Draw_temp2 0
                    set hud_shadef hud_shade
            }
        }
    }
    else
        set hud_shadef hud_shade

    set hud_palf hud_pal
    set hud_shade hud_shadef

    state G_DrawTileScaled
ends

defstate G_DrawMuzzleFlashTile

    set hud_need_mf 1 // forces a rotatesprite with shade 0
    state G_DrawTileScaled // hijack code we already have
ends



// helper states

defstate reset_hud_weapon_x_coordinate
    set hud_x weapon_xoffset
    sub hud_x looking_angSR1
ends
defstate reset_hud_weapon_y_coordinate
    set hud_y looking_arc
    sub hud_y gun_pos
ends
defstate reset_hud_weapon_coordinates
    state reset_hud_weapon_x_coordinate
    state reset_hud_weapon_y_coordinate
ends


defstate determine_animation
    getuserdef[].pause_on hud_temp
    ifn hud_temp 0
        set hud_temp 1

    ifand player[].gm MODE_MENU
        or hud_temp 1

    geta[playerid].pal hud_G_Draw_temp
    ife hud_G_Draw_temp 1
        or hud_temp 1
ends

defstate init_weapon_x
    set hud_x LOVERBOY_X
    set temp weapon_xoffset2
    ifge hud_tilenum 6983 ifle hud_tilenum 6985
        shiftr temp 2
    add hud_x temp
    add hud_x 12
    sub hud_x looking_angSR1
    set temp weapon_look_ang
    shiftr temp 2
    sub hud_x temp
ends

defstate init_weapon_y
    set hud_y LOVERBOY_Y
    add hud_y looking_arc
    set temp gun_pos2
    sub hud_y temp
    ifn player[].weapon_pos 0
    {
        set temp gun_pos
        ifg temp 63
            set temp 63
        sub hud_y temp
        add hud_y 64
    }
    getp[].ohoriz temp
    sub temp player[].horiz
    shiftr temp 2
    sub hud_y weapon_horiz
ends

defstate apply_weapon_pos
    getp[].weapon_pos hud_angle
    ifg hud_angle 0 inv hud_angle
    shiftl hud_angle 4
    set temp weapon_look_ang
    shiftr temp 3
    add hud_angle temp
    getp[].poszv temp
    shiftr temp 8
    clamp temp -8 8
    sub hud_angle temp
ends

defstate apply_zvel
    getp[].poszv temp
    div temp 192
    clamp temp -16 16
    add hud_y temp
ends

defstate strafe_bobbing
    ifn player[].transporter_hold 0
        break
    set temp weapon_strafe // strafe bobbing
    abs temp
    div temp 3
    add hud_y temp
    set temp weapon_strafe
    shiftr temp 1
    add hud_x temp
ends

defstate predraw_final
    set hud_orientation 2
    // For some reason there's an annoying pixel at position 2047
    // that doesn't actually exist so we'll just work around it.
    and hud_angle 2047
    ife hud_angle 2047
        set hud_angle 0

    guniqhudid player[].curr_weapon
ends

// End old rotatesprite!

defstate flash_tile
    switch currentweapon
        case WEAPON_LOVERBOY
            set hudx_tilenum weaponcount
            mod hudx_tilenum 2
            add hudx_tilenum 6922
            set hudx_alpha -129
            set hudx_orientation 1
            add hudx_x 3
            state DrawTile640x480WeaponFullvisBob
            set hudx_orientation 0
            set hudx_alpha 180
            break
        case WEAPON_SHOTGUN
        case WEAPON_GRENADE
            set hudx_tilenum weaponcount
            mod hudx_tilenum 3
            add hudx_tilenum 5942
            break
        case WEAPON_SMG
            set hudx_tilenum 6922
            set hudx_alpha -129
            add hudx_x 2
            add hudx_y 2
            sub hudx_scale 18432
            sub hudx_scale 9216
            state DrawTile640x480WeaponFullvisBob
            add hudx_scale 9216
            add hudx_scale 18432
            sub hudx_x 2
            sub hudx_y 2
            set hudx_tilenum weaponcount
            mod hudx_tilenum 2
            add hudx_tilenum 6003
            set hudx_alpha -129
            break
        default
            set hudx_tilenum 6922
            break
    endswitch
ends

defstate draw_pistol_flash  // Muzzle Flash
    set temp hudx_angle
    set temp2 hudx_tilenum

    sub hudx_x 54
    sub hudx_y 92

    set hudx_angle muzzle_flash_ang
    set hudx_orientation 1
    state flash_tile
    switch currentweapon
        case WEAPON_SHOTGUN
        case WEAPON_GRENADE
            add hudx_scale 18432
            add hudx_x 4
            add hudx_y 1
            set hudx_angle temp
            break
       case WEAPON_SMG
            add hudx_shade 10
            add hudx_x 2
            add hudx_y 8
            sub hudx_scale 4608
            break
    endswitch
    state DrawTile640x480WeaponFullvisBob
    set hudx_alpha 0

    set temp3 2
    set hudx_orientation 33
    ifn currentweapon WEAPON_LOVERBOY
    {
        set temp9 temp3
        for itervar range temp9
        {
            ifg temp3 0
            {
                add hudx_tilenum temp3
                switch currentweapon
                    case WEAPON_SMG
                        sub hudx_tilenum temp3
                        set hudx_orientation 33
                        ife temp3 2
                            sub temp3 1
                        break
                    case WEAPON_SHOTGUN
                    //case WEAPON_GRENADE
                        mod hudx_tilenum 3
                        add hudx_tilenum 5942
                        set hudx_orientation 33
                        add hudx_angle 16
						ife p_usedammotype AM_AMMOTYPE_EXPLOSIVESHELL
							set hudx_pal 12
						else
							set hudx_pal 0
                        break
                    case WEAPON_MINIGUN
                        mod hudx_tilenum 2
                        add hudx_tilenum 6922
                        set hudx_orientation 33
                        add hudx_angle 16
                        break
                endswitch
                ife temp3 2 ifn currentweapon WEAPON_SMG
                    set hudx_alpha -129
                state DrawTile640x480WeaponFullvisBob
                set hudx_alpha 0
                ife currentweapon WEAPON_MINIGUN
                {
                    set hudx_orientation 33
                    add hudx_angle 16
                    state DrawTile640x480WeaponFullvisBob
                    add hudx_angle 16
                    state DrawTile640x480WeaponFullvisBob
                }
                state flash_tile
                sub temp3 1
                set hudx_orientation 1
            }
        }
    }
    // after drawing reset everything to previous values

    set hudx_angle temp
    set hudx_tilenum temp2

    add hudx_x 54
    add hudx_y 92

    switch currentweapon
        case WEAPON_SHOTGUN
        //case WEAPON_GRENADE
            sub hudx_scale 18432
            sub hudx_x 4
            sub hudx_y 1
            break
        case WEAPON_SMG
            sub hudx_x 2
            sub hudx_y 8
            add hudx_scale 4608
            sub hudx_shade 10
            break
        case WEAPON_LOVERBOY
            sub hudx_x 3
            break
    endswitch

    set hudx_shade 0
    set hudx_orientation 0
    set hudx_alpha 0
ends

defstate draw_pistol // PISTOL_WEAPON:

    state ResetTile
    set hudx_scale 73728
    set hudx_tilenum T_LOVERBOY_IDLE

    add hud_totaltime 1
    shiftl hud_totaltime 2

    set hudx_x 10

    ifle smooth_weaponcount hud_totaltime
    {
        set temp smooth_weaponcount
        shiftr temp 2
        ifg temp 6
            set temp 0
        ifg smooth_weaponcount 7 ifn temp 0
            sub temp 1
        ifg temp 5
        {
            ifl temp 8
                set temp 5
            else
                set temp 0
        }
        add hudx_tilenum temp
        ifg smooth_weaponcount 3 // automatic - adjust gun when firing
        {
            ifl smooth_weaponcount 24
            {
                set temp smooth_weaponcount
                ife interpolate_weapons 1
                  sub temp 4
                shiftl temp 1
                add hudx_angle temp
                add hudx_y temp
                shiftr temp 1
                add hudx_x temp
                ifl smooth_weaponcount 12
                    state draw_pistol_flash
            }
        }
    }
    else
    {
        set temp 0

        // 6 7 (8 9) 13 14 15
        ifg smooth_weaponcount 51
            set temp 5  // 6917
        ifg smooth_weaponcount 55
            add temp 1  // 6918
        ifg smooth_weaponcount 59
            add temp 1  // 6919
        ifg smooth_weaponcount 63
            add temp 6  // 6925
        ifg smooth_weaponcount 75
            add temp 1  // 6926
        ifg smooth_weaponcount 87
            add temp 1  // 6927
        ifg smooth_weaponcount 99
            add temp 1  // 6928
        ifg smooth_weaponcount 111
            add temp 1  // 6929

        ifg smooth_weaponcount 207
            sub temp 7  // 6921
        ifg smooth_weaponcount 215
            sub temp 1  // 6920
        ifg smooth_weaponcount 223
            sub temp 1  // 6919
        ifg smooth_weaponcount 231
            sub temp 1  // 6918
        ifg smooth_weaponcount 239
            sub temp 1  // 6917

        add hudx_tilenum temp

        ifg smooth_weaponcount 123
        {
            ifg smooth_weaponcount 207
            {
                set temp smooth_weaponcount
                sub temp 204
                shiftl temp 1
                set temp2 300
                add temp2 -temp
                set temp temp2
                add temp -smooth_weaponcount
                shiftr temp 1
            }
            else
            {
                set temp smooth_weaponcount
                sub temp 116
            }

            add hudx_x -temp
            shiftl temp 2
            add hudx_y temp
            shiftl temp 1
            add hudx_angle -temp
        }
        else ifg smooth_weaponcount 99
        {
            set temp smooth_weaponcount
            shiftr temp 2
            add hudx_y temp
            shiftr temp 1
            add hudx_x temp
            add hudx_angle -temp
        }
    }

    guniqhudid currentweapon

    state DrawTile640x480WeaponBob

    ifle smooth_weaponcount hud_totaltime
    ifge smooth_weaponcount 4
    ifl smooth_weaponcount 8
    {
        set hudx_tilenum T_LOVERBOY_MUZZLE
        set hudx_orientation 1
        set hudx_alpha -129
        state DrawTile640x480WeaponFullvisBob
    }

    ifn weapon1_alt 0
    {
        set hudx_orientation 0
        set hudx_alpha 0

        ifg smooth_weaponcount hud_totaltime
            set weapon1_alt 0
        set hudx_tilenum T_FANNING_HAND
        sub hudx_x 95
        add hudx_y 30
        set temp weapon1_alt
        ifl temp 0
            set temp 15
        shiftl temp 2
        add hudx_x temp
        sub hudx_y temp
        set temp smooth_weaponcount
        ifg smooth_weaponcount 19
            set temp 16
        mul temp 9
        shiftr temp 1
        add hudx_y temp
        shiftr temp 1
        add hudx_x temp
        add hudx_angle 64
        state DrawTile640x480WeaponBob
    }

    guniqhudid 0
ends

defstate draw_shotgun // SHOTGUN_WEAPON:
    state ResetTile
    set hudx_scale 73728
    set hudx_tilenum T_SHOTGUN_IDLE

    add hud_totaltime 1
    shiftl hud_totaltime 2

    set hudx_x -35
    set hudx_y -26

    ifg smooth_weaponcount 3 // WEAPON_AUTOMATIC, aka reset kickback_pic to 1
    {
        ifle smooth_weaponcount hud_totaltime
        {
            ifl smooth_weaponcount 16 // adjust gun when firing
            {
                set temp smooth_weaponcount
                shiftr temp 2
                add hudx_tilenum temp

                set temp smooth_weaponcount
                ife interpolate_weapons 1
                  sub temp 4
                shiftl temp 2
                add hudx_x temp

                shiftl temp 1
                add hudx_y temp

                shiftl temp 1
                add hudx_angle temp

                ifl smooth_weaponcount 12
                {
                    add hudx_x 25
                    add hudx_y 20
                    state draw_pistol_flash
                    sub hudx_x 25
                    sub hudx_y 20
                }
            }
            else ifg smooth_weaponcount 35
            {
                ifg smooth_weaponcount 51
                {
                    set temp smooth_weaponcount
                    sub temp 48
                    shiftr temp 2

                    ifg smooth_weaponcount 63
                    {
                        set temp smooth_weaponcount
                        sub temp 64
                        shiftr temp 3
                        add temp 4
                        ifg temp 8
                            set temp 0
                    }

                    add hudx_tilenum temp

                    shiftl temp 2
                    clamp temp 0 8
                    add hudx_x temp

                    ifl smooth_weaponcount 120
                    {
                        ifl smooth_weaponcount 100
                        {
                            sub hudx_y temp
                            sub hudx_y temp
                            ifg smooth_weaponcount 67
                            {
                                shiftl temp 1
                                add hudx_y temp
                            }
                            add hudx_x temp
                        }
                        else
                        {
                            shiftl temp 1
                            add hudx_y temp
                            shiftr temp 2
                            add hudx_x temp
                        }
                    }
                    else
                        set hudx_tilenum T_SHOTGUN_IDLE
                }
            }
            else
            {
                ifl smooth_weaponcount 24
                {
                    set temp smooth_weaponcount
                    shiftr temp 1
                    add hudx_x temp
                    set temp smooth_weaponcount
                    add hudx_angle temp
                    add hudx_y temp
                }

                ifge smooth_weaponcount 16
                    ifle smooth_weaponcount 35
                        set temp 1

                add hudx_tilenum temp
            }
        }
        else
        {
            ifl smooth_weaponcount 368
            {
                set temp hud_totaltime
                sub temp 400
                shiftr temp 4
                add hudx_y temp
                add hudx_x temp
            }

            ifl smooth_weaponcount 248
            {
                set temp smooth_weaponcount
                shiftr temp 3
                sub temp 9
                add hudx_tilenum temp
            }
            else ifge smooth_weaponcount 368
                nullop
            else ifge smooth_weaponcount 272
            {
                set temp smooth_weaponcount
                shiftr temp 3
                sub temp 56
                abs temp
                add hudx_tilenum temp
            }
            else
                set hudx_tilenum 5976

        }
    }
	
	ifn exp_aftershock 0
        state ashock_drawshotgun_alts
    else
        state fury_drawshotgun_alts
	
    guniqhudid currentweapon
    state DrawTile640x480WeaponBob
    switch hudx_tilenum
        case 5954
            set hudx_tilenum 5803
            break
        case 5955
        case 5962
            set hudx_tilenum 5804
            break
        case 5956
            set hudx_tilenum 5805
            break
        case 5957
        case 5961
            set hudx_tilenum 5806
            break
        case 5958
        case 5960
            set hudx_tilenum 5807
            break
        case 5959
            set hudx_tilenum 5808
            break
        case 5964
            set hudx_tilenum 5809
            break
        case 5965
            set hudx_tilenum 5810
            break
        case 5966
            set hudx_tilenum 5811
            break
        case 5967
            set hudx_tilenum 5812
            break
        default
            set hudx_tilenum -1
            break
    endswitch

    ifn hudx_tilenum -1
    {
		ifn exp_aftershock 0
            state ashock_drawgl_alts
        else
            state fury_drawgl_alts
        state DrawTile640x480WeaponBob
    }
    ifle smooth_weaponcount hud_totaltime
    ifge smooth_weaponcount 4
    ifl smooth_weaponcount 8
    {
        set hudx_tilenum T_SHOTGUN_MUZZLE
        set hudx_pal 0
        set hudx_orientation 1
        set hudx_alpha -129
        state DrawTile640x480WeaponFullvisBob
    }

    guniqhudid 0
ends

defstate draw_bowlingbombs // BOWLINGBOMB
    state ResetTile
    set hudx_scale 73728
    ifg p_pup_bomb_time 1
    {
        ifl p_pup_bomb_time 300
        {
            set hudx_pal 103
            ifl p_pup_bomb_time 30
            {
                set temp w5_sparkle
                mod temp 2
                
                ife temp 0
                    set hudx_pal 105
            }
            else ifl p_pup_bomb_time 140
            {
                set temp w5_sparkle
                mod temp 5
                
                ife temp 0
                    set hudx_pal 105
            }
            else
            {
                set temp w5_sparkle
                mod temp 10
                
                ife temp 0
                    set hudx_pal 105
            }
        }
        else
            set hudx_pal 103
    }
    ifand player[].weaponswitch 2
        nullop
    else
    {
        ifand delay_weapon_switch 2
            nullop
        else
        {
            ife player[].ammo_amount WEAPON_BOWLINGBOMB 0
                ife smooth_weaponcount 0
                    break
        }
    }
    ifg smooth_weaponcount 51
        ifl smooth_weaponcount 72
            break

    set hudx_tilenum T_BOWLINGBOMB_IDLE

    add hud_totaltime 1
    shiftl hud_totaltime 2

    getp[].horiz temp
    sub temp 100
    ifg temp 0
    {
        set temp2 WEAPON5_HOLDDELAY
        shiftl temp2 2
        ifg weaponcount temp2
            shiftl temp 1
        shiftr temp 2
        add hudx_y temp
    }
    else ifl temp 0 ifl smooth_weaponcount 12
    {
        shiftr temp 4
        add hudx_y temp
    }
    
    ifg w5alt 14
    {
        ifinwater
            sub hudx_tilenum 1
        else ifg w5alt 25
            sub hudx_tilenum 1
        else ifg w5alt 19
            sub hudx_tilenum 2
        else ifg w5alt 16
            sub hudx_tilenum 1
        ifl w5alt 25
        {
            sub hudx_shade 5
            clamp hudx_shade -127 127
        }
        guniqhudid currentweapon
        state DrawTile640x480WeaponBob
        ifl w5alt 25
        {
            set temp9 hudx_shade
            set hudx_shade -127
            add hudx_tilenum 7
            sub hudx_x 3
            set hudx_alpha -255
            ife hudx_tilenum 6946
                sub hudx_y 5
            clamp hudx_shade -127 127
            state DrawTile640x480WeaponBob
            ifand w5_sparkle 1
            {
                set temp hudx_pal
                set hudx_pal 1
                clamp hudx_shade -127 127
                state DrawTile640x480WeaponBob
                set hudx_pal temp
            }
            add hudx_x 3
            ife hudx_tilenum 6946
                add hudx_y 5
                
            ifg w5alt 15
            {
                set hudx_shade 20
                set temp w5_sparkle
                ifl w5alt 18
                {
                    mod temp 4
                    add temp 18
                    add hudx_shade 4
                }
                else
                    mod temp 20
                add temp 8440
                set hudx_tilenum temp
                set hudx_alpha -129
                sub hudx_y 80
                sub hudx_x 80
                clamp hudx_shade -127 127
                state DrawTile640x480WeaponFullvisBob
                add hudx_y 80
                add hudx_x 80
            }
            set hudx_alpha 0
            set hudx_shade -127
        }
        set hudx_tilenum T_BOWLINGBOMB_IDLE
        sub hudx_x 120
        // inittimer 30
        ifg w5alt 24
        {
            add hudx_y 224
            set temp w5alt
            sub temp 48
            shiftl temp 3
            add hudx_y temp
        }
        else ifl w5alt 20
        {
            set temp w5alt
            sub temp 21
            shiftl temp 3
            sub hudx_y temp
        }
        ifg w5alt 26
            sub hudx_tilenum 8
        else ifg w5alt 25
            sub hudx_tilenum 7
        else ifg w5alt 24
            sub hudx_tilenum 4
        else
            sub hudx_tilenum 6
        
        guniqhudid currentweapon
        set hudx_shade temp9
        clamp hudx_shade -127 127
        state DrawTile640x480WeaponBob
        ifl w5alt 25
        {
            set hudx_tilenum 5856
            sub hudx_y 85
            add hudx_x 45
            set hudx_scale 81920
            set hudx_alpha -129
            set hudx_shade 0
            state DrawTile640x480WeaponFullvisBob
        }
        guniqhudid 0
        break
    }
    add hud_firedelay 1
    shiftl hud_firedelay 2
    // inittimer 60
    ifl smooth_weaponcount hud_firedelay
    ifg smooth_weaponcount 0
    {

            ifg smooth_weaponcount 11
                add hudx_tilenum 1
            set temp smooth_weaponcount
            sub temp 16
            ifg temp 0
                shiftl temp 2
            ifg temp 19
                shiftl temp 1
            shiftr temp 2
            add hudx_y temp
            add hudx_x temp
            mul temp 6
            sub hudx_angle temp
    }
    else ifg smooth_weaponcount 59 ifl smooth_weaponcount 96
    {
        add hudx_tilenum 2
        set temp smooth_weaponcount
        add hudx_y 20
        sub temp 80
            mul temp 3

        sub hudx_y temp
        sub hudx_x 5
        sub hudx_x temp

    }
    else ifg smooth_weaponcount 95
    {
        add hudx_tilenum 3
        set temp smooth_weaponcount
        add hudx_y 20
        sub temp 112
            shiftl temp 1

        add hudx_y temp
        sub hudx_x 5
        ifg smooth_weaponcount 107
            shiftr temp 2
        add hudx_x temp

    }

    guniqhudid currentweapon

    state DrawTile640x480WeaponBob
    ifg p_pup_bomb_time 1
    {
        set temp w5_sparkle
        ifl p_pup_bomb_time 150
            mod temp 5
        else
            mod temp 10
        ife temp 0
        {
            ifl p_pup_bomb_time 300
            {
                set hudx_pal 9
                set hudx_shade 5
            }
            else
            {
                set hudx_pal 80
                set hudx_shade 15
            }
            set hudx_alpha -255
            or hudx_orientation 1
            add hudx_scale 512
            
            state DrawTile640x480WeaponFullvisBob
        }
        else ife temp 3
        {
            set hudx_alpha -129
            or hudx_orientation 1
            add hudx_scale 512
            ifl p_pup_bomb_time 300
                set hudx_pal 9
            else
                set hudx_pal 11
            state DrawTile640x480WeaponFullvisBob
        }
        
    }
    guniqhudid 0
ends


defstate draw_lam // LAM
    state ResetTile
    set hudx_scale 73728
    add hudx_scale 4096
   
    ifand w9_state 2
        set hudx_pal 15
    else
        set hudx_pal 21
    sub hudx_shade 2
    clamp hudx_shade -127 127
    ifg w9_lock_button 0
    {
        // set hudx_tilenum T_PUCK_THROW_IDLE
        // 5784 > 5783 > 5778 > 5779
        // 5776
        sub hudx_x 40
        sub hudx_y 20
        set temp w9_lock_button
        shiftr temp 2
        ifg temp 3
        {
            sub temp 7
            inv temp
        }
        ifand w9_state 1
        {
            
            add hudx_y 10
            add hudx_scale 16384
            sub temp 4
            abs temp
            clamp temp 2 3
        }
        else
            clamp temp 1 3
        switch temp
            case 0
                set hudx_tilenum 5784
                break
            case 1
                set hudx_tilenum 5783
                break
            case 2
                set hudx_tilenum 5778
                break
            case 3
                set hudx_tilenum 5779
                break
            default
                set hudx_tilenum 5784
                break
        endswitch
        guniqhudid currentweapon
        state DrawTile640x480WeaponBob
        switch w9_lock_button
            case 14
            case 15
            case 16
                sub hudx_tilenum 13
                set hudx_alpha 212
                set hudx_pal 1
                set temp2 hudx_shade
                set hudx_shade 30
                state DrawTile640x480WeaponFullvisBob
                set hudx_pal 0
                set hudx_shade temp2
                set hudx_alpha 0
                break
            default
                sub hudx_tilenum 13
                set hudx_alpha -255
                or hudx_orientation 1
                set temp2 hudx_shade
                set hudx_shade 0
                state DrawTile640x480WeaponFullvisBob
                set hudx_shade temp2
                set hudx_alpha 0
                xor hudx_orientation 1
                break
        endswitch
        set temp currentweapon
        add temp 1
        guniqhudid temp
        
        set temp w9_lock_button
        ifg temp 16
        {
            sub temp 32
            inv temp
        }
        shiftl temp 4
        add hudx_y 75
        sub hudx_y temp
        
        ifand w9_state 1
        {
            clamp hudx_y 8 900
            sub hudx_x 8
        }
        else
            clamp hudx_y 2 900
        sub hudx_x 65
        
        shiftr temp 1
        clamp temp 0 256
        add hudx_angle temp
        set hudx_tilenum 5776
        state DrawTile640x480WeaponBob
        guniqhudid 0
        break
    }
    ifand w9_state 1
    {
        add hudx_scale 16384
        set hudx_tilenum T_PUCK_PLACE_IDLE
        sub hudx_x 40
        sub hudx_y 10
        add hud_totaltime 1
        shiftl hud_totaltime 2
        
        set temp smooth_weaponcount
        shiftr temp 2
        ifl smooth_weaponcount 16
            clamp temp 0 2
        else
            clamp temp 0 3
        ifl smooth_weaponcount 60
        {
            add hudx_tilenum temp
            ifl temp 3 ifg temp 1
                add hudx_scale 16384
            
            ifg smooth_weaponcount 1
            {
                set temp smooth_weaponcount
                shiftr temp 2
                sub temp 7
                ifg temp 0
                    shiftl temp 2
                sub hudx_y temp
                set temp smooth_weaponcount
                shiftl temp 2
                clamp temp 0 40
                sub hudx_x temp
                ifg smooth_weaponcount 20
                {
                    set temp smooth_weaponcount
                    sub temp 16
                    sub hudx_x temp
                    shiftl temp 2
                    add hudx_y temp
                    ifg smooth_weaponcount 30
                        sub hudx_angle temp
                }
            }
        }
        else
        {
            set hudx_tilenum T_PUCK_THROW_IDLE
            set temp 192
            set temp2 smooth_weaponcount
            ifg temp2 80
            {
                shiftl temp2 1
                sub temp temp2
            }
            add hudx_y temp
            ifl temp 96
            {
                shiftl temp 2
                sub hudx_angle temp
            }
        }
    }
    else
    {
        set hudx_tilenum T_PUCK_THROW_IDLE
        sub hudx_x 40
        sub hudx_y 20
        add hud_totaltime 1
        shiftl hud_totaltime 2
        
        set temp smooth_weaponcount
        shiftr temp 2
        clamp temp 0 4
        ifl smooth_weaponcount 60
        {
            add hudx_tilenum temp
            ife temp 4
                add hudx_scale 24576
            ifg smooth_weaponcount 1
            {
                set temp smooth_weaponcount
                shiftr temp 2
                sub temp 7
                ifg temp 0
                    shiftl temp 2
                sub hudx_y temp
                ifg smooth_weaponcount 20
                {
                    set temp smooth_weaponcount
                    sub temp 16
                    sub hudx_x temp
                    shiftl temp 2
                    add hudx_y temp
                    ifg smooth_weaponcount 30
                        sub hudx_angle temp
                }
            }
        }
        else
        {
            set temp 192
            set temp2 smooth_weaponcount
            ifg temp2 80
            {
                shiftl temp2 1
                sub temp temp2
            }
            add hudx_y temp
            ifl temp 96
            {
                shiftl temp 2
                sub hudx_angle temp
            }
        }
    }
    ife player.ammo_amount WEAPON_LAM 0
    {
        ife player.kickback_pic 0
        {
            set hudx_tilenum T_PUCK_PLACE_IDLE
            add hudx_tilenum 4
        }
        else ifge smooth_weaponcount 60
        {
            set hudx_tilenum T_PUCK_THROW_IDLE
            add hudx_tilenum 4
        }
        add hudx_y 192
    }
    ifn w9_tween 0
        set hudx_tilenum 5778
    guniqhudid currentweapon
    state DrawTile640x480WeaponBob
/*
    5778 - 5765
    5779 - 5766
    5780 - 5767
    5781 - 5768
    5783 - 5770
    5784 - 5771
    5785 - 5772
    5786 - 5773 */
    sub hudx_tilenum 13
    set hudx_alpha -255
    or hudx_orientation 1
    set hudx_shade 0
    state DrawTile640x480WeaponFullvisBob

    guniqhudid 0
ends

var dosmg_temp
var dosmg_temp2
var dosmg_temp3
var dosmg_temp4
appendevent EVENT_WORLD
    setu[].vm_player myconnectindex
    set temp other_smg_toggle
    ife other_smg_toggle 0
        set temp 12
    ifle other_smg_toggle -10
        set temp -10
    ifg temp 1 sub temp 2
    ifl temp 0
        add temp 11
    set dosmg_temp4 dosmg_temp3
    set dosmg_temp3 temp
endevent

defstate draw_smg_each
    ife weapon_mirrored 1
        ife other_smg_toggle 0
            break

    ifn other_smg_toggle 0
    {
        set temp smooth_weaponcount
        set temp2 kickback_other
        shiftl temp2 2
        /* ife interpolate_weapons 1
            ifn kickback_other last_kickback_other
                add temp2 smooth_totalclock */

        ife weapon_mirrored 1
        {
            set smooth_weaponcount temp2

            set smooth_weapon_pos_2 other_smg_toggle
            ifl smooth_weapon_pos_2 0
                add smooth_weapon_pos_2 13
            sub smooth_weapon_pos_2 1
            shiftl smooth_weapon_pos_2 2
            /* ife interpolate_weapons 1
                ifn other_smg_toggle last_other_smg_toggle
                    add smooth_weapon_pos_2 smooth_totalclock */
        }

        ife weapon_mirrored 1
            set temp3 temp
        else
            set temp3 temp2
        ifg temp3 hud_totaltime
        {
            sub temp3 hud_totaltime
            ifl temp3 140
            {
                ifg temp3 100
                {
                    inv temp3
                    add temp3 140
                }
                add smooth_weapon_pos_2 temp3
            }
        }

        clamp smooth_weapon_pos_2 0 40
    }

    // temporary hack to workaround the problem with weaponcount
    ifge smooth_weaponcount 16
        sub smooth_weaponcount 4
    ifge smooth_weaponcount 8
        sub smooth_weaponcount 4

    state ResetTile
    set hudx_scale 73728
    set hudx_tilenum T_SMG_IDLE

    set hudx_x -4
    set hudx_y -20
	
    ifg smooth_weaponcount 60 ifl smooth_weaponcount 140
    {
        add hudx_x 15
        sub hudx_x smooth_weaponcount
        sub hudx_y 50
        set temp smooth_weaponcount
        add hudx_angle temp
        shiftr temp 1
        add temp smooth_weaponcount
        add hudx_y temp
        set hudx_tilenum 6025
        add hudx_shade 5

        state DrawTile640x480WeaponBob
        sub hudx_x 15
        add hudx_x smooth_weaponcount
        add hudx_y 80
        set temp smooth_weaponcount
        sub hudx_angle temp
        shiftr temp 1
        add temp smooth_weaponcount
        sub hudx_y temp
        set hudx_tilenum T_SMG_IDLE
        sub hudx_shade 5
    }
	
    ifg smooth_weaponcount 3 // WEAPON_AUTOMATIC, aka reset kickback_pic to 1
    ifl smooth_weaponcount 13
    {
        set hudx_pal 0
        set hudx_orientation 0
        set hudx_alpha 0

        set temp7 hudx_shade
        ifn player[].cursectnum -1
        {
            ifoutside            
                set temp sector[].ceilingshade
            else
                set temp sector[].floorshade
           shiftr temp 1
           set hudx_shade temp
        }
        set hudx_tilenum A_SHELL1
        add hudx_tilenum 3
        add hudx_angle 192
        add hudx_x 21
        sub hudx_y 26
        set temp smooth_weaponcount
        sub temp 4
        shiftr temp 1
        mul temp temp
        add hudx_x temp
        mul temp 3
        shiftr temp 2
        sub hudx_y temp
        ife smooth_weaponcount 12
            or hudx_orientation 1
        state DrawTile640x480WeaponBob
        ife smooth_weaponcount 12
            xor hudx_orientation 1
        set hudx_shade temp7

    }
    set hudx_angle 0
    set hudx_tilenum T_SMG_IDLE
    set hudx_x -4
    set hudx_y -20

	add hudx_tilenum 1 // 6007

    ifle smooth_weaponcount hud_totaltime
    {
        ifg smooth_weaponcount 2 // 6006
            sub hudx_tilenum 1
        ifg smooth_weaponcount 4 // 6008
            add hudx_tilenum 2
        ifg smooth_weaponcount 6 // 6007
            sub hudx_tilenum 1
        ifg smooth_weaponcount 8 // 6006
            sub hudx_tilenum 1
        ifg smooth_weaponcount 10
            add hudx_tilenum 2 // 6008

        ifg smooth_weaponcount 3 // WEAPON_AUTOMATIC, aka reset kickback_pic to 1
        {
            set temp smooth_weaponcount
            shiftr temp 4
            sub hudx_angle temp
            sub hudx_y temp
            sub hudx_x temp
            set temp smooth_weaponcount
            shiftr temp 2
            add hudx_x temp
            set temp smooth_weaponcount
            sub temp 12
            shiftr temp 2
            sub hudx_x temp
            sub hudx_y temp
            ifl smooth_weaponcount 24
            {
                add hudx_y 30
                add hudx_x 8
                state draw_pistol_flash
                sub hudx_y 30
                sub hudx_x 8
            }
        }
    }
    else
    {
        ifg smooth_weaponcount 35
            set hudx_tilenum 6023 // 6023
        ifg smooth_weaponcount 39
            sub hudx_tilenum 1
        ifg smooth_weaponcount 43
            sub hudx_tilenum 9 // 6013
        ifg smooth_weaponcount 47
            add hudx_tilenum 1
        ifg smooth_weaponcount 51
            add hudx_tilenum 1
        ifg smooth_weaponcount 55
            add hudx_tilenum 1
        ifg smooth_weaponcount 59
            add hudx_tilenum 1 // 6017
        ifg smooth_weaponcount 91
            add hudx_tilenum 1
        ifg smooth_weaponcount 95
            add hudx_tilenum 1
        ifg smooth_weaponcount 99
            add hudx_tilenum 1
        ifg smooth_weaponcount 103
            add hudx_tilenum 1
        ifg smooth_weaponcount 107
            add hudx_tilenum 1
        ifg smooth_weaponcount 111
            add hudx_tilenum 1
        ifg smooth_weaponcount 119
            set hudx_tilenum 6009
        ifg smooth_weaponcount 123
            add hudx_tilenum 1
        ifg smooth_weaponcount 127
            add hudx_tilenum 1
        ifg smooth_weaponcount 147
            sub hudx_tilenum 1
        ifg smooth_weaponcount 151
            sub hudx_tilenum 1        
            
        ifl smooth_weaponcount 60
        {
            set temp 60
            sub temp smooth_weaponcount
            scalevar temp temp 25 40
            sub hudx_y temp
        }
        else ifl smooth_weaponcount 120
        {
            //sub hudx_y 30
            ifg smooth_weaponcount 91            
            {
                set temp 120
                sub temp smooth_weaponcount
                scalevar temp temp 30 40
                add hudx_y temp
            }
        }
        else ifg smooth_weaponcount 161
        {
            set hudx_tilenum T_SMG_IDLE
            add hudx_tilenum 1
        }                    
        else ifg smooth_weaponcount 119
            ifl smooth_weaponcount 145
            {
                set temp 145
                sub temp smooth_weaponcount
                mul temp 3
                add hudx_y temp
            }
            
        set temp 174
        sub temp smooth_weaponcount
        clamp temp 0 174

        shiftr temp 1
        add hudx_angle temp
        ifg temp 0
           shiftr temp 1
        add hudx_x temp
        ifg temp 10
            sub hudx_y 10
        else
            sub hudx_y temp
        ifg temp 25
        {
            scalevar temp temp 125 100
            add hudx_y temp
        }
        ifn other_smg_toggle 0 ifn weapon_mirrored 1 ifl kickback_other 40 ifl smooth_weaponcount 176
        {
            set temp smooth_weaponcount
            
            ifg smooth_weaponcount 70
            {
                scalevar temp temp 66 100
                add hudx_y temp
            }
            ifg kickback_other 0 ifl kickback_other 35
            {
                shiftl hudx_angle 1
                add hudx_y kickback_other
            }
        }
    }

    guniqhudid currentweapon
    state DrawTile640x480WeaponBob
    set temp hudx_tilenum
    ifge smooth_weaponcount 4
    ifl smooth_weaponcount 8
    {
        set hudx_tilenum 6027
        state DrawTile640x480WeaponBob
    }

    set hudx_tilenum temp
    set hudx_alpha -129
    or hudx_orientation 1
    ifle smooth_weaponcount hud_totaltime
    ifge smooth_weaponcount 4
    ifl smooth_weaponcount 24
    {
        sub hudx_tilenum T_SMG_IDLE
        add hudx_tilenum T_SMG_MUZZLE
        state DrawTile640x480WeaponFullvisBob
    }

    set hudx_tilenum temp
    set hudx_pal 34
    ifge hudx_tilenum 6012
    {
        ifge hudx_tilenum 6018
        {
            sub hudx_tilenum 6018
            inv hudx_tilenum
            add hudx_tilenum 6055
        }
        else
            add hudx_tilenum 38
    }
    else
        add hudx_tilenum 22
    set hudx_shade 8
    state DrawTile640x480WeaponFullvisBob
	
    state ResetTile
        
    ifg smooth_weaponcount 77 ifl smooth_weaponcount 145
    {
        set hudx_orientation 0
        set hudx_alpha 0
        set hudx_pal 0    
        
        set hudx_x -48
        set hudx_y 476
        set temp smooth_weaponcount
        shiftl temp 2

        set hudx_tilenum 5622
        sub hudx_y temp
        
        ifg smooth_weaponcount 119
        {
            set hudx_tilenum 5621
            
            ifg smooth_weaponcount 135
                set hudx_tilenum 5623
                
            sub hudx_y 30
            sub temp 476

            inv temp
            shiftl temp 1
            sub hudx_y temp
            shiftr temp 1
            //sub hudx_y temp
        }        
        ifn other_smg_toggle 0 ifn weapon_mirrored 1 ifl kickback_other 40 ifg smooth_weaponcount 70 ifl smooth_weaponcount 176
        {
            set temp smooth_weaponcount
            scalevar temp temp 33 100
            add hudx_y temp
        }
        sub hudx_scale 8192

        state DrawTile640x480WeaponBob
    }

    guniqhudid 0
    ifn other_smg_toggle 0
        set smooth_weapon_pos_2 0
ends

defstate draw_smg // WEAPON_SMG:
    add hud_totaltime 1
    shiftl hud_totaltime 2

    state draw_smg_each

    xor weapon_mirrored 1
    
    set temp8 weapon_sway2 // ever so slightly modify the x sway for the second smg
    shiftr temp8 8
    add temp8 weapon_sway2
    shiftr temp8 8
    add weapon_draw_xoff temp8
    
    state draw_smg_each
    
    sub weapon_draw_xoff temp8 // in case we decide to draw later
    
    xor weapon_mirrored 1
ends

// remove for demo

defstate draw_crossbow // CROSSBOW_WEAPON:
    state ResetTile
    set hudx_tilenum T_CROSSBOW
    set hudx_scale 73728

    add hud_totaltime 1

    set hudx_x -40
    set hudx_y -20

    ifl weaponcount hud_totaltime
    {

        ifg weaponcount 0
        {
            getu[].pause_on temp2
            ifl weaponcount 40
            {
                set temp weaponcount
                shiftr temp 2
                add hudx_y temp
                sub hudx_y 5
                shiftr temp 1
                add hudx_x temp

                ifg weaponcount 0
                {
                    sub hudx_x 6
                    sub hudx_y 48
                    set temp weaponcount
                    mul temp 1024
                    set hudx_scale temp
                    set hudx_pal 9
                    set hudx_alpha -255
                    set temp7 hudx_shade
                    set hudx_shade 2
                    set hudx_orientation 1
                    set temp6 hudx_tilenum
                    set hudx_tilenum 5994
                    ifge weaponcount 38
                    {
                        shiftl hudx_scale 2
                        div hudx_scale 2
                    }
                    set temp muzzle_flash_ang
                    mod temp 8
                    add hudx_tilenum temp
                    state DrawTile640x480WeaponFullvisBob
                    set hudx_tilenum temp6
                    set hudx_shade temp7
                    set hudx_orientation 0
                    set hudx_alpha 0
                    set hudx_pal 0
                    set hudx_scale 73728
                    add hudx_x 6
                    add hudx_y 48
                }
            }
            else
            {
                set temp weaponcount
                sub temp 40
                set temp2 temp
                ifl weaponcount 45
                {
                    ifl weaponcount 42
                        add temp2 1
                    ifg temp2 2
                        set temp2 2
                    ifg w3alt_count 90
                        ifl w3alt_ammo 15
                        {
                            ifg weaponcount 42
                            {
                                sub hudx_x temp
                                sub hudx_y temp
                            }
                        }
                }
                else
                {
                    sub temp2 3
                    ifg temp2 8
                        set temp2 0
                }
                add hudx_tilenum temp2
                ifl weaponcount 52
                {
                    set temp weaponcount
                    sub temp 80
                    inv temp
                    shiftl temp 2
                    div temp 5
                    shiftr temp 1
                    ifg weaponcount 43
                        shiftr temp 2
                    add hudx_x temp
                    add hudx_y temp
                }
            }
        }
    }
    else
    {
        set hudx_scale 73728
        
        set temp weaponcount
        sub temp 55
        ifg temp 22
            set temp 0
        ifg temp 11
        {
            sub temp 22
            clamp temp -30 30
            abs temp
        }
        shiftl temp 2
        mul temp 5
        shiftr temp 2
        sub hudx_y temp
        add hudx_x temp
        
        ifl weaponcount 72
        {
            ifg weaponcount 60
            {
                set hudx_tilenum 5837
                set temp4 hudx_scale
                set hudx_scale 73728
                guniqhudid currentweapon
                set temp2 hudx_x
                set temp3 hudx_y
                sub hudx_x 15
                add hudx_y 80
                sub hudx_y 5
                add hudx_x 5
                set temp weaponcount
                sub temp 69
                clamp temp -30 0
                abs temp
                shiftl temp 2
                add hudx_y temp
                sub hudx_x temp
                state DrawTile640x480WeaponBob
                set hudx_x temp2
                set hudx_y temp3
                set hudx_scale temp4
                
            }
            else ifg weaponcount 57
            {
                set hudx_tilenum 5837
                set temp4 hudx_scale
                set hudx_scale 73728
                guniqhudid currentweapon
                set temp2 hudx_x
                set temp3 hudx_y
                sub hudx_x 15
                add hudx_y 80
                sub hudx_y 5
                add hudx_x 5
                set temp weaponcount
                sub temp 58
                abs temp
                shiftl temp 2
                add hudx_y temp
                sub hudx_x temp
                state DrawTile640x480WeaponBob
                set hudx_x temp2
                set hudx_y temp3
                set hudx_scale temp4
            }
        }
        
        
        set hudx_tilenum 5830
        set temp weaponcount
        sub temp hud_totaltime
        ifg temp 3
        {
            ifl temp 16
                set temp 3
            else
            {
                sub temp 16
                add temp 3
                ifg temp 6
                {
                    set temp 6
                    set temp 230
                }
            }
        }
        add hudx_tilenum temp
    }
    guniqhudid currentweapon
    ifge w3alt_count 60
    {
        ifg w3alt_count 84
        {
            ifg w3alt_count 90
            {
                ife weaponcount 40
                    set hudx_pal 9
            }
            else ifand w3alt_count 1
                set hudx_pal 9
        }
        else ifg w3alt_count 70
        {
            ifand w3alt_count 3
                set hudx_pal 10
        }
        else
        {
            ifand w3alt_count 6
                set hudx_pal 11
        }
    }
    ife hudx_tilenum 6068
        set hudx_tilenum 6060
    set temp9 hudx_tilenum
    state DrawTile640x480WeaponBob
    set temp3 hudx_tilenum
    sub hudx_y 37
    set hudx_scale 73728
    set hudx_alpha -255
    set hudx_tilenum 5789
    set temp crossbow_idle_count
    shiftl temp 1
    div temp 3
    set temp2 WEAPON7_SHOTSPERBURST
    clamp temp2 1 5
    mul temp temp2
    div temp 3
    ifg weaponcount 0
        mod temp 12
    else
        mod temp 8
    set hudx_pal 0
    set hudx_shade 0
    add hudx_tilenum temp
    ife temp3 T_CROSSBOW
        state DrawTile640x480WeaponFullvisBob
    ifl weaponcount 58 ifg player[].ammo_amount WEAPON_CROSSBOW 0 ifg temp9 6059 ifl temp9 6063 
    {
        set hudx_pal 9
        ifl weaponcount 40
        {
            set temp w6_sparkle
            shiftl temp 1
            ifg weaponcount 0
                shiftl temp 1
            set temp2 WEAPON7_SHOTSPERBURST
            clamp temp2 1 5
            mul temp temp2
            mod temp 120
            shiftr temp 2
            ifle temp 15
            {
                set hudx_tilenum 5840
                set temp WEAPON7_SHOTSPERBURST
                sub temp 1
                clamp temp 0 4
                add hudx_y 37
                add hudx_tilenum temp
                ifg w3alt_count 90
                    set hudx_tilenum 5844
                state DrawTile640x480WeaponFullvisBob
            }
        }
        else
        {
            set temp w6_sparkle
            shiftl temp 2
            set temp2 crossbow_fire_amt
            ifg w3alt_count 90
                set temp2 5
            clamp temp2 1 5
            mul temp temp2
            mod temp 120
            shiftr temp 2
            ifle temp 15
            {
                set hudx_tilenum 5840
                set temp crossbow_fire_amt
                ifg w3alt_count 90
                    set temp 5
                sub temp 1
                clamp temp 0 4
                add hudx_y 37
                add hudx_tilenum temp
                ifg w3alt_count 90
                    set hudx_tilenum 5844
                state DrawTile640x480WeaponFullvisBob
            }
        }
    }
    guniqhudid 0
ends


var minigun_temp
var minigun_temp2
defstate draw_minigun // MINIGUN_WEAPON:
    add hud_totaltime 1
    shiftl hud_totaltime 2

    state ResetTile

    set hudx_x -50
    set hudx_y -40

    set temp 0
    set temp6 0
    ifn press_alt 0
    {
        ifand input[].bits INPUT_FIRE
            set temp6 1
        else
            set temp6 2
    }
    ifg smooth_weaponcount 0
    ifle smooth_weaponcount hud_totaltime
    {
        ifl smooth_weaponcount 120
        {
            set temp2 smooth_weaponcount
            shiftr temp2 5
            ife temp6 2
                set temp2 0
            add hudx_y temp2

            shiftr temp2 1
            add hudx_x temp2
            ifge smooth_weaponcount 108
            {
                set temp2 smooth_weaponcount
                sub temp2 104
                // sub temp2 12
                shiftr temp2 2
                ife temp6 2
                    set temp2 0
                add hudx_x temp2
                add hudx_y temp2
            }

            add hudx_x 30
            add hudx_y 45
            set hudx_scale 92160
            ifg smooth_weaponcount 83
                ifg weapon_mini_fire 1
                    // this state modifies temp
                    state draw_pistol_flash
            sub hudx_x 30
            sub hudx_y 45
        }


        ifge weapon_mini_fire 1
        {
            set temp smooth_weaponcount
            mod temp 24
            ifge smooth_weaponcount 108
            ifl smooth_weaponcount 120
            {
                inv temp
                add temp 116
                shiftl temp 1
            }
            else
                sub temp 52
        }
        else
        {
            set temp smooth_inv_weaponcount
            mod temp 24
            ifge smooth_inv_weaponcount 108
            ifl smooth_inv_weaponcount 120
            {
                inv temp
                add temp 116
                shiftl temp 1
            }
            else
            {
                ife weapon_mini_fire -1
                    sub temp 52
            }
        }
        abs temp
        mod temp 24
        mul temp 7 // number of minigum frames
        div temp 24
    }

    guniqhudid currentweapon

    set hudx_scale 73728
    set hudx_tilenum T_MINIGUN_IDLE
    state DrawTile640x480WeaponBob

    ifle smooth_weaponcount hud_totaltime
    ifl smooth_weaponcount 120
    ifge smooth_weaponcount 80
    ifg weapon_mini_fire 1
    {
        set hudx_tilenum T_MINIGUN_BLUR_BARREL
        add hudx_tilenum temp
        state DrawTile640x480WeaponBob

        set hudx_tilenum T_MINIGUN_BLUR_BELT
        add hudx_tilenum 6
        sub hudx_tilenum temp
        state DrawTile640x480WeaponBob

        set hudx_tilenum T_MINIGUN_MUZZLE
        add hudx_tilenum temp
        set hudx_alpha -129
        state DrawTile640x480WeaponFullvisBob
    }
    else
    {
        set hudx_tilenum T_MINIGUN_IDLE_BARREL
        add hudx_tilenum temp
        state DrawTile640x480WeaponBob

        set hudx_tilenum T_MINIGUN_IDLE_BELT
        ifge weaponcount 20
        {
            add hudx_tilenum 6
            sub hudx_tilenum temp
        }
        state DrawTile640x480WeaponBob
    }

    guniqhudid 0
ends

// framework

// weapon frame tester doesn't belong in demo!
appendevent EVENT_FIRE
    ifn exp_aftershock 0
        state ashock_fire_weap9
    else
        state fury_fire_weap9
endevent

// we have a different fire sound for sg
/*appendevent EVENT_DOFIRE
    ife player[].curr_weapon WEAPON_SHOTGUN
    {
        rand temp9 55
        sub temp9 222
        setp .sound_pitch temp9
        screensound S_TRIFIRE_OLD4
        setp .sound_pitch 0
    }
endevent*/

// WEAPON FRAME TESTER... doesn't belong in demo

defstate draw_guntester // PISTOL_WEAPON:
    // hud_firedelay = FIREDELAY
    // hud_reload = RELOAD

    set hud_tilenum T_GUNTESTER
    add hud_tilenum guntester_tileadd
    state init_weapon_x
    add hud_x GUNTEST_XOFF
    state init_weapon_y
    add hud_y GUNTEST_YOFF
    state apply_zvel
    state strafe_bobbing
    state apply_weapon_pos


    state predraw_final
    state G_DrawWeaponTile
    ife T_GUNTESTER 6035
    {

        ifge guntester_counter 20
            add hud_tilenum 7
        else
            set hud_tilenum 6042
        state G_DrawWeaponTile
    }
    guniqhudid 0
ends

defstate draw_shocker_hand
    ife baton_strikes 0
        ifg smooth_weaponcount 83 ifl smooth_weaponcount 200
            break
    state ResetTile
    set hudx_tilenum T_SHOCKER_HAND
    set hudx_x -230
    set hudx_y 48
    set temp2 smooth_weaponcount
    ifg smooth_weaponcount 215
    {
        sub smooth_weaponcount 212
        add smooth_weaponcount temp2
    }
    ifge smooth_weaponcount 4
    {
        ifl smooth_weaponcount 16
        {
            set temp3 smooth_weaponcount
            shiftr temp3 2
            add hudx_x temp3
            sub hudx_y temp3
        }
        ifge smooth_weaponcount 16
        {
            ifl smooth_weaponcount 24
            {
                set temp3 smooth_weaponcount
                add hudx_x temp3
                sub hudx_y temp3
            }
            else ifl smooth_weaponcount 36
            {
                set temp3 smooth_weaponcount
                shiftr temp3 2
                add hudx_x temp3
                sub hudx_y temp3
            }
            add hudx_tilenum 1 // 2
            ifge smooth_weaponcount 36
            {
                ifl smooth_weaponcount 56
                {
                    set temp3 smooth_weaponcount
                    shiftr temp3 1
                    sub hudx_x temp3
                    set temp3 smooth_weaponcount
                    shiftr temp3 2
                    add hudx_y temp3
                }
                add hudx_tilenum 1 // 3
                ifge smooth_weaponcount 56
                {
                    ifl smooth_weaponcount 92
                        break
                    ifge smooth_weaponcount 92
                    {
                        ifl smooth_weaponcount 100
                        {
                            sub hudx_x 20
                            add hudx_y 100
                            set temp3 smooth_weaponcount
                            shiftr temp3 2
                            add hudx_x temp3
                            sub hudx_y smooth_weaponcount
                        }
                        else ifl smooth_weaponcount 112
                        {
                            set temp3 smooth_weaponcount
                            shiftr temp3 1
                            sub hudx_x temp3
                            shiftr temp3 1
                            add hudx_y temp3
                        }
                        else ifl smooth_weaponcount 136
                        {
                            set temp3 smooth_weaponcount
                            shiftr temp3 1
                            sub hudx_x temp3
                            set temp3 smooth_weaponcount
                            shiftl temp3 1
                            add hudx_y temp3
                        }
                        sub hudx_tilenum 2 // 1
                        ifge smooth_weaponcount 136
                        {
                            ifl smooth_weaponcount 156
                            {
                                set temp3 smooth_weaponcount
                                shiftr temp3 2
                                add hudx_x temp3
                                ifl smooth_weaponcount 148
                                {
                                    add hudx_y 80
                                    shiftl temp3 1
                                    sub hudx_y temp3
                                }
                                else
                                    add hudx_y temp3
                            }
                            add hudx_tilenum 2 // 3
                            ifge smooth_weaponcount 156
                            {
                                ifl smooth_weaponcount 212
                                {
                                    set temp3 smooth_weaponcount
                                    shiftr temp3 1
                                    sub hudx_x temp3
                                    shiftr temp3 1
                                    add hudx_y temp3
                                }
                                else ifge smooth_weaponcount 212
                                {
                                    ifl smooth_weaponcount 244
                                        break
                                    else ifl smooth_weaponcount 280
                                    {
                                        add hudx_x 70
                                        add hudx_y 140
                                        set temp3 smooth_weaponcount
                                        shiftr temp3 2
                                        sub hudx_x temp3
                                        set temp3 smooth_weaponcount
                                        shiftr temp3 1
                                        sub hudx_y temp3
                                    }
                                }
                                sub hudx_tilenum 2 // 1
                            }
                        }
                    }
                }
            }
        }
    }
    set smooth_weaponcount temp2
    set temp currentweapon
    add temp MAX_WEAPONS
    guniqhudid temp
    set hudx_scale 65536 // 64512
    inv hudx_angle
    ife smooth_weaponcount 0
    {
        ifg baton_idle 0
        {
            set hudx_shade baton_idle
            shiftl hudx_shade 1
            inv hudx_shade
        }
        else
            set hudx_shade 0
    }
    else
        set hudx_shade -15
    state DrawTile640x480WeaponSlowBob
    guniqhudid 0
ends

defstate draw_shocker
    state draw_shocker_hand
    ife baton_strikes 0
        ifg smooth_weaponcount 99 ifl smooth_weaponcount 200
            break
    state ResetTile

    set hudx_tilenum T_SHOCKER

    set hudx_x 17
    set hudx_y -68
    ifge smooth_weaponcount 4
    {
        ifl smooth_weaponcount 12
        {
            set temp smooth_weaponcount
            mul temp 13
            shiftr temp 2
            add hudx_x temp
            set temp smooth_weaponcount
            shiftr temp 2
            add hudx_y temp
            set temp smooth_weaponcount
            mul temp 3
            shiftr temp 2
            add hudx_angle temp
        }
        ifge smooth_weaponcount 12
        {
            ifl smooth_weaponcount 24
            {
                set temp smooth_weaponcount
                mul temp 13
                shiftr temp 2
                add hudx_x temp
                set temp smooth_weaponcount
                shiftr temp 2
                add hudx_y temp

                ifg smooth_weaponcount 15
                {
                    set temp smooth_weaponcount
                    shiftr temp 1
                    add hudx_angle temp
                }
            }
            add hudx_tilenum 1 // 2
            ifge smooth_weaponcount 24
            {

                ifl smooth_weaponcount 68
                {
                    set temp smooth_weaponcount
                    mul temp 11
                    shiftr temp 2
                    add hudx_x temp
                    set temp smooth_weaponcount
                    shiftr temp 2
                    add hudx_y temp

                    set temp smooth_weaponcount
                    shiftr temp 3
                    add hudx_angle temp
                }
                add hudx_tilenum 1 // 3
                ifge smooth_weaponcount 68
                {
                    ifl smooth_weaponcount 76
                    {
                        set temp smooth_weaponcount
                        mul temp 11
                        shiftr temp 2
                        add hudx_x temp
                        set temp smooth_weaponcount
                        shiftr temp 2
                        add hudx_y temp
                    }
                    else ifl smooth_weaponcount 84
                    {
                        set temp smooth_weaponcount
                        add hudx_x temp
                    }

                    add hudx_tilenum 1 // 4
                    ifge smooth_weaponcount 84
                    {
                        ifl smooth_weaponcount 88
                        {
                            set temp smooth_weaponcount
                            sub hudx_x temp
                            set temp smooth_weaponcount
                            shiftr temp 2
                            add hudx_y temp
                        }
                        add hudx_tilenum 1 // 5
                        ifge smooth_weaponcount 88
                        {
                            ifl smooth_weaponcount 92
                            {
                                set temp smooth_weaponcount
                                mul temp 6
                                shiftr temp 2
                                sub hudx_x temp
                                set temp smooth_weaponcount
                                shiftr temp 2
                                add hudx_y temp

                                set temp smooth_weaponcount
                                shiftr temp 1
                                add hudx_angle temp
                            }
                            else ifl smooth_weaponcount 96
                            {
                                set temp smooth_weaponcount
                                shiftl temp 1
                                sub hudx_x temp
                                set temp smooth_weaponcount
                                shiftr temp 2
                                add hudx_y temp
                                add hudx_y 10
                            }
                            add hudx_tilenum 1 // 6
                            ifge smooth_weaponcount 96
                            {
                                ifl smooth_weaponcount 104
                                {
                                    set temp smooth_weaponcount
                                    shiftr temp 2
                                    sub hudx_x 360

                                    add hudx_x temp
                                    set temp smooth_weaponcount
                                    mul temp 3
                                    shiftr temp 2
                                    sub hudx_y 10
                                    add hudx_y temp

                                    set temp smooth_weaponcount
                                    shiftr temp 2
                                    sub hudx_angle 387
                                    add hudx_angle temp
                                }
                                sub hudx_tilenum 3 // jump back to 3 and offset
                                ifge smooth_weaponcount 104 // second strike
                                {
                                    ifl smooth_weaponcount 112
                                    {
                                        set temp smooth_weaponcount
                                        sub hudx_x 300
                                        ifge smooth_weaponcount 108
                                            shiftl temp 1
                                        shiftr temp 1
                                        add hudx_x temp
                                        set temp smooth_weaponcount
                                        mul temp 3
                                        shiftr temp 2
                                        sub hudx_y 10
                                        add hudx_y temp

                                        ifge smooth_weaponcount 108
                                            set temp 10
                                        else
                                        {
                                            set temp smooth_weaponcount
                                            mul temp 3
                                            shiftr temp 1
                                        }
                                        // sub hudx_angle 387
                                        add hudx_angle temp
                                    }
                                    else ifl smooth_weaponcount 116
                                    {
                                        set temp smooth_weaponcount
                                        // mul temp 2
                                        shiftr temp 2
                                        add hudx_x 10
                                        sub hudx_x temp
                                        set temp smooth_weaponcount
                                       // mul temp 2
                                        shiftr temp 2
                                        add hudx_y temp

                                        set temp smooth_weaponcount
                                        shiftr temp 1
                                        add hudx_angle temp
                                    }
                                    else ifl smooth_weaponcount 140
                                    {
                                        set temp smooth_weaponcount
                                        ifge smooth_weaponcount 120
                                            shiftl temp 1
                                        ifge smooth_weaponcount 124
                                            shiftl temp 1
                                        shiftr temp 1
                                        add hudx_x temp

                                        set temp smooth_weaponcount
                                            mul temp 3
                                        shiftr temp 2
                                        add hudx_angle temp
                                    }
                                    add hudx_tilenum 4 // jump back to 7
                                    ifge smooth_weaponcount 140
                                    {
                                        ifl smooth_weaponcount 168
                                        {
                                            set temp smooth_weaponcount
                                            add hudx_x 160
                                            shiftr temp 1
                                            add hudx_x temp

                                            set temp smooth_weaponcount
                                                mul temp 3
                                            shiftr temp 2
                                            add hudx_angle temp
                                        }
                                        sub hudx_tilenum 7 // now back to 1
                                        ifge smooth_weaponcount 168 // third strike
                                        {

                                            ife smooth_weaponcount 168
                                            {
                                                set temp smooth_weaponcount
                                                add hudx_x 160
                                                shiftr temp 1
                                                add hudx_x temp

                                                set temp smooth_weaponcount
                                                    mul temp 3
                                                shiftr temp 2
                                                add hudx_angle temp
                                            }
                                            else ifg smooth_weaponcount 171 ifl smooth_weaponcount 180
                                            {
                                                set temp smooth_weaponcount
                                                shiftr temp 2
                                                ifge smooth_weaponcount 176
                                                    sub hudx_x 80
                                                add hudx_x 120
                                                sub hudx_x temp
                                                set temp smooth_weaponcount
                                                add hudx_y 210
                                                ifge smooth_weaponcount 176
                                                    sub hudx_y 40
                                                mul temp 3
                                                shiftr temp 2
                                                sub hudx_y temp

                                                set temp smooth_weaponcount
                                                shiftr temp 2
                                                ifge smooth_weaponcount 176
                                                    add hudx_angle temp
                                            }
                                            add hudx_tilenum 8 // 8
                                            ifge smooth_weaponcount 180
                                            {
                                                ifl smooth_weaponcount 240
                                                {
                                                    set temp smooth_weaponcount
                                                    ifg smooth_weaponcount 203
                                                    {
                                                            shiftl temp 1
                                                            ifg smooth_weaponcount 207
                                                                shiftl temp 1
                                                    }
                                                    shiftr temp 2
                                                    sub hudx_x 17
                                                    add hudx_x temp
                                                    set temp smooth_weaponcount
                                                    ifg smooth_weaponcount 203
                                                    {
                                                            shiftl temp 1
                                                            ifg smooth_weaponcount 207
                                                                shiftl temp 1
                                                    }
                                                    shiftr temp 2
                                                    add hudx_y temp

                                                    set temp smooth_weaponcount
                                                    shiftr temp 2
                                                    ifl smooth_weaponcount 200
                                                    {
                                                        sub hudx_angle 85
                                                        add hudx_angle temp
                                                    }
                                                }
                                                add hudx_tilenum 1 // 9
                                                ifge smooth_weaponcount 240
                                                {
                                                    ifl smooth_weaponcount 264
                                                    {
                                                        set temp smooth_weaponcount
                                                        sub hudx_x 17
                                                        add hudx_x temp
                                                        set temp smooth_weaponcount
                                                        add hudx_y temp

                                                        set temp smooth_weaponcount
                                                        shiftr temp 2
                                                        add hudx_angle temp
                                                    }
                                                    sub hudx_tilenum 9 // 1
                                                    ifge smooth_weaponcount 264
                                                    {
                                                        ifl smooth_weaponcount 276
                                                        {
                                                            set temp smooth_weaponcount
                                                            ifg smooth_weaponcount 267
                                                                shiftl temp 1
                                                            shiftr temp 1
                                                            add hudx_y 280
                                                            sub hudx_y temp
                                                            ifl smooth_weaponcount 268
                                                                sub hudx_angle 85
                                                            set temp smooth_weaponcount
                                                            shiftr temp 3
                                                            sub hudx_x temp
                                                            add hudx_x 75

                                                            add hudx_x 20
                                                                add hudx_y 20
                                                        }
                                                        ifg smooth_weaponcount 271
                                                        {
                                                            set temp smooth_weaponcount
                                                            shiftr temp 2
                                                            sub hudx_angle temp
                                                            ifge smooth_weaponcount 280
                                                                sub hudx_angle 30
                                                            sub hudx_x 20
                                                            sub hudx_y 20
                                                        }
                                                        add hudx_tilenum 10 // 10
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    guniqhudid currentweapon
    set hudx_scale 65536 // 64512
    ifn player[].weapon_pos 0
    {
        set temp player[].weapon_pos
        abs temp
        shiftl temp 1
        add hudx_y temp

    }

    set temp4 1
    ifg smooth_weaponcount 71 ifl smooth_weaponcount 180
    ifn last_xbaton_x hudx_x
    ifn last_xbaton_y hudx_y
    {
        ife baton_strikes 0
        {
            ifg smooth_weaponcount 95
            ifl smooth_weaponcount 100
                nullop
            else
                set temp4 5
        }
        else
            set temp4 5
    }

    ifg temp4 0
    {
        set temp hudx_x
        set temp2 hudx_y
        set temp3 hudx_tilenum
    }

    for temp5 range temp4
    {
        ifg temp5 0
        {
            set hudx_x temp
            set hudx_y temp2
            set hudx_tilenum temp3
            set hudx_orientation 0

            set temp6 temp5
            shiftl temp6 9
            div temp6 5
            sin temp6 temp6
            inv temp6
            add temp6 16384
            sqrt temp6 temp6

            sub hudx_x last_xbaton_x
            mul hudx_x temp6
            shiftr hudx_x 7
            add hudx_x last_xbaton_x

            sub hudx_y last_xbaton_y
            mul hudx_y temp6
            shiftr hudx_y 7
            add hudx_y last_xbaton_y

            set hudx_alpha temp5
            shiftl hudx_alpha 5
            add hudx_alpha 80
            clamp hudx_alpha 0 255
        }

        ifinwater
            nullop
        else
        {
            ife smooth_weaponcount 0
            {
                ifg baton_idle 0
                {
                    set hudx_shade baton_idle
                    shiftl hudx_shade 1
                    inv hudx_shade
                }
                else
                    set hudx_shade 0
            }
            else
                set hudx_shade -15
        }

        set hudx_pal 0

        state DrawTile640x480WeaponBob
        ife hudx_tilenum T_SHOCKER // smooth_weaponcount 0
        {
            ifn baton_idle 0
            {
                set hudx_shade hudx_alpha
                shiftr hudx_shade 3
                sub hudx_tilenum 17
                add hudx_tilenum baton_idle
                set hudx_orientation 1
                set hudx_alpha -129

                set temp6 totalclock
                and temp6 7
                ifg temp6 3
                    set hudx_pal 62

                state DrawTile640x480WeaponFullvisBob
            }
        }
        else
        {
            ifg baton_fizzer 0
            {
                set hudx_shade hudx_alpha
                shiftr hudx_shade 3
                sub hudx_tilenum T_SHOCKER
                mul hudx_tilenum 3
                add hudx_tilenum baton_fizzer
                ife hudx_tilenum 0
                    sub hudx_tilenum 9
                else
                    add hudx_tilenum 389
                add hudx_tilenum T_SHOCKER
                set hudx_orientation 1
                set hudx_alpha -129

                set temp6 totalclock
                and temp6 7
                ifg temp6 3
                    set hudx_pal 62

                state DrawTile640x480WeaponFullvisBob
            }
        }
    }

    set temp3 smooth_weaponcount
    shiftr temp3 2
    ifg temp3 0
    {
        ifn last_xbaton_weaponcount temp3
        {
            set temp4 temp3
            mod temp4 3
            ife temp4 2
            {
                set last_xbaton_x temp
                set last_xbaton_y temp2
            }
        }
    }
    else
    {
        set last_xbaton_x temp
        set last_xbaton_y temp2
    }
    set last_xbaton_weaponcount temp3

    guniqhudid 0
ends

defstate draw_dart // PISTOL_WEAPON:
    ifg player[].access_incs 9
        break
    state ResetTile
    set hudx_scale 73728
    set hudx_tilenum T_DART_HAND
    add hud_totaltime 1
    shiftl hud_totaltime 2
    set hudx_x -120
    set hudx_y 80
    set hudx_pal p_dart_pal
    ifg p_have_dart 18
    {
        set temp p_have_dart
        shiftr temp 1
        sub temp 5
        clamp temp 0 2
        add hudx_tilenum temp

    }
    set temp p_have_dart
    ifg temp 20
    {
        sub temp 30
        inv temp
    }
    clamp temp 0 9
    shiftl temp 4
    sub hudx_y temp
    shiftr temp 3
    sub hudx_x temp
    
    sub hudx_y smooth_weapon_pos
    set temp smooth_weapon_pos
    shiftr temp 1
    sub hudx_x smooth_weapon_pos
    
    set hudx_temp smooth_weapon_pos
    abs hudx_temp
    add hudx_temp smooth_weapon_pos_2

    set temp p_have_dart
    ifl p_have_dart 15
    {
        sub temp 10
        clamp temp -15 0
        shiftl temp 4
        sub hudx_angle temp
    }
    else ifg p_have_dart 15
    {
        set temp p_have_dart
        sub temp 15
        ifg p_have_dart 17
            sub temp 6
        abs temp
        ifg p_have_dart 17
        {
            sub temp 4
            shiftl temp 5
        }
        else
            mul temp 48
        sub hudx_angle temp

        shiftr temp 1
        sub hudx_x temp
        shiftr temp 1
        add hudx_y temp
        ifg p_have_dart 21
        {
            set temp p_have_dart
            sub temp 15
            shiftl temp 1
            add hudx_y temp
            add hudx_x temp
        }
    }
    state DrawTile640x480WeaponBob
ends

defstate draw_idle // PISTOL_WEAPON:

    state ResetTile
    set hudx_scale 73728
    set hudx_tilenum T_IDLE_HAND 
    add hud_totaltime 1
    shiftl hud_totaltime 2
    set hudx_x -180
    set hudx_y 60
    set temp smooth_weapon_pos
    abs temp
    shiftl temp 2
    sub hudx_y temp


    set temp p_idle_timer
    sub temp IDLE_TIME
    set temp2 temp
    shiftr temp2 1
    sub temp2 20
    clamp temp2 -20 20
    shiftr temp2 1
    sub hudx_y temp2
    
    ifg temp 25
        add hudx_tilenum 1
    ifg temp 58
        add hudx_tilenum 1
    ifg temp 60
        add hudx_tilenum 1
    ifg temp 63
        add hudx_tilenum 1
    ife hudx_tilenum 5620
    {
        set temp2 temp
        sub temp2 10
        abs temp2
        shiftl temp2 2
        add hudx_y temp2
        ifg temp 20
        {
            set temp2 temp
            shiftr temp2 1
            sub temp2 10
            shiftl temp2 1
            sub hudx_y temp2
        }
        ife temp 25 // slight tweak to prevent disappearing
            sub hudx_y 10
    }
    else ife hudx_tilenum 5621
    {
        set temp2 temp
        shiftr temp2 1
        sub temp2 41
        shiftl temp2 1
        add hudx_y temp2
        ifg temp 25
        {
            set temp2 temp
            sub temp2 25
            shiftl temp2 2
            add hudx_y temp2
            ifg temp 30
            {
                set temp2 temp
                sub temp2 30
                shiftl temp2 1
                add hudx_y temp2
            }
        }
        set temp2 temp
        sub temp2 29
        shiftr temp2 1
        sub hudx_x temp2
    }
    else ifl temp 63
    {
        set temp2 temp
        sub temp2 63
        sub temp2 2
        shiftl temp2 2
        sub hudx_y temp2


        set temp2 temp
        sub temp2 63
        sub temp2 4
        shiftl temp2 2
        add hudx_x temp2
    }
    state DrawTile640x480WeaponBob
    set temp p_idle_timer
    sub temp IDLE_TIME
    ifg temp 25 ifl temp 63
    {
        
        set hudx_tilenum 5625
        set temp2 temp
        sub temp2 26
        mod temp2 8
        add hudx_tilenum temp2
        set hudx_angle 0
        set hudx_x -160
        set hudx_y -100
        
        set temp2 temp
        sub temp2 25
        ifg temp2 19
        {
            sub temp2 38
            inv temp2
        }
        shiftl temp2 4
        sub hudx_y temp2
        
        state do_idle_pal
        state DrawTile640x480WeaponNoBob
    }
ends
defstate draw_hazardmask
    state ResetTile
    set hudx_scale 53248
    set hudx_tilenum 5595
    set hudx_x -88
    set hudx_y -10
    set temp p_hazard_amount
    ifg temp 895
    {
        sub temp 895
        shiftl temp 2
        add hudx_y temp
    }
    else ifl temp 6
    {
        sub temp 5
        inv temp
        shiftl temp 3
        add hudx_y temp
    }
    set temp 64
    sub temp gun_pos2
    clamp temp 1 40
    add hudx_y temp
    state do_idle_pal
    state DrawTile640x480WeaponNoBob
ends
defstate weapon_shade
    /*
    // prepare shade
    ifoutside
        set hud_weapon_shade sector[].ceilingshade
    else
    {
        set hud_weapon_shade hud_shade_nextsector
        mul hud_weapon_shade 3
        add hud_weapon_shade sector[].floorshade
        shiftr hud_weapon_shade 2
    }

    // combine shade with previous frame
    sub hud_weapon_shade old_hud_weapon_shade
    clamp hud_weapon_shade -4 4
    add hud_weapon_shade old_hud_weapon_shade

    set old_hud_weapon_shade hud_weapon_shade

    // apply the difference between the sector and sprite shade
    add hud_weapon_shade sprite[].shade
    ifoutside
        sub hud_weapon_shade sector[].ceilingshade
    else
        sub hud_weapon_shade sector[].floorshade

    // finish shade
    clamp hud_weapon_shade 0 127
    */

    set hud_weapon_shade gs
    ifoutside
        nullop
    else
    {
        add hud_weapon_shade hud_shade_nextsector
        shiftr hud_weapon_shade 1
        clamp hud_weapon_shade 0 127
    }
ends

state weapon_bob
    // this compensates for the bobbing offset
    // this way the bobbing won't affect the weapon normal position
    set weapon_draw_yoff 128

    // init weapon x
    set weapon_draw_xoff weapon_xoffset2
    sub weapon_draw_xoff looking_angSR1
    shiftl weapon_draw_xoff 1
    set temp weapon_look_ang
    shiftr temp 1
    sub weapon_draw_xoff temp

    // init weapon y
    set temp looking_arc
    sub temp gun_pos2
    sub temp weapon_horiz
    shiftl temp 1
    add weapon_draw_yoff temp
    set temp player[].ohoriz
    sub temp player[].horiz
    shiftr temp 1

    // apply zvel
    set temp player[].poszv
    div temp 96
    clamp temp -32 32
    add weapon_draw_yoff temp

    // strafebobbing
    ife player[].transporter_hold 0
    {
        set temp weapon_strafe // strafe bobbing
        abs temp
        shiftl temp 1
        div temp 3
        add weapon_draw_yoff temp
        add weapon_draw_xoff weapon_strafe
    }
ends

appendevent EVENT_FIRE
    ifg p_have_dart 0
    {
        ife p_have_dart 15
            set p_have_dart 16
        set RETURN -1
    }
endevent

appendevent EVENT_DISPLAYWEAPON // P_DisplayWeapon
    set RETURN -1

    ife userdef.drawweapon 0
        break

    ife nodrawweapon 1
        break

    state weapon_shade

    set smooth_weaponcount weaponcount
    shiftl smooth_weaponcount 2
    set smooth_inv_weaponcount weaponcount
    shiftl smooth_inv_weaponcount 2

    set smooth_weapon_pos player[myconnectindex].weapon_pos
    ifg p_idle_timer IDLE_TIME
    {
        set temp p_idle_timer
        sub temp IDLE_TIME
        ifg temp 70
        {
            sub temp 80
            inv temp
        }
        clamp temp 0 10
        ifl smooth_weapon_pos 0
            inv temp
        add temp smooth_weapon_pos
        clamp temp -10 10
        set smooth_weapon_pos temp
    }
    else ifg p_have_dart 0
    {
        set temp2 p_have_dart
        ifg temp2 24
        {
            sub temp2 32
            inv temp2
        }
        mul temp2 3
        shiftr temp2 1
        clamp temp2 0 9
        set smooth_weapon_pos temp2
    }
    shiftl smooth_weapon_pos 2

    ife interpolate_weapons 1
    {
        set smooth_totalclock totalclock
        sub smooth_totalclock smooth_world_totalclock
        clamp smooth_totalclock 0 4


        ifl smooth_totalclock 4
        {
            // do last frame plus, instead of current frame minus
            set smooth_weaponcount last_weaponcount
            shiftl smooth_weaponcount 2
            ifn weaponcount last_weaponcount
                add smooth_weaponcount smooth_totalclock

            set smooth_inv_weaponcount last_weaponcount
            shiftl smooth_inv_weaponcount 2
            ifn weaponcount last_weaponcount
                sub smooth_inv_weaponcount smooth_totalclock


            ifn player[myconnectindex].weapon_pos last_weapon_pos
            {
                ife last_weapon_pos -9
                ife player[myconnectindex].weapon_pos 10
                {
                    add smooth_weapon_pos 4
                    sub smooth_weapon_pos smooth_totalclock
                }
                else
                {
                    set temp player[myconnectindex].weapon_pos
                    sub temp last_weapon_pos
                    ifg temp 0
                    {
                        sub smooth_weapon_pos 4
                        add smooth_weapon_pos smooth_totalclock
                    }
                    else
                    {
                        add smooth_weapon_pos 4
                        sub smooth_weapon_pos smooth_totalclock
                    }
                }
            }
        }
    }


    set smooth_gun_pos 160
    set temp weapon_sway2 // player[].weapon_sway
    shiftr temp 1
    sin temp temp
    shiftr temp 9
    abs temp
    sub smooth_gun_pos temp
    set temp player[].hard_landing
    shiftl temp 4
    sub smooth_gun_pos temp


    state weapon_bob



    /*
    redefinequote 0 weaponcount: %ld
    qsprintf 0 0 weaponcount
    screentext 2822 5 50 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim

    redefinequote 0 weaponcount 4x (1): %ld.%ld
    qsprintf 0 0 last_weaponcount smooth_totalclock
    screentext 2822 5 55 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim

    redefinequote 0 weaponcount 4x (2): %ld
    qsprintf 0 0 smooth_weaponcount
    screentext 2822 5 60 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim


    redefinequote 0 weapon_pos: %ld
    qsprintf 0 0 weapon_pos
    screentext 2822 5 70 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim

    redefinequote 0 weapon_pos 4x (1): %ld.%ld
    qsprintf 0 0 last_weapon_pos smooth_totalclock
    screentext 2822 5 75 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim

    redefinequote 0 weapon_pos 4x (2): %ld
    qsprintf 0 0 smooth_weapon_pos
    screentext 2822 5 80 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim


    redefinequote 0 gun_pos: %ld
    qsprintf 0 0 gun_pos
    screentext 2822 5 90 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim

    redefinequote 0 gun_pos 4x (1): %ld
    qsprintf 0 0 smooth_gun_pos
    screentext 2822 5 95 userdef[].gametext_zoom 0 0 0 0 0 280 0 0 0 0 0 262224 0 0 xdim ydim
    */


    ifg p_idle_timer IDLE_TIME
    {
        set temp IDLE_TIME
        add temp 80
        ifl p_idle_timer temp
            state draw_idle
        set temp p_idle_timer
        sub temp IDLE_TIME
        ifg temp 70
        {
            sub temp 90
            inv temp
            clamp temp 0 10
            ifl smooth_weapon_pos 0
                inv temp
            add temp smooth_weapon_pos
            clamp temp -10 10
            set smooth_weapon_pos temp
            shiftl smooth_weapon_pos 2
        }
        shiftl smooth_weapon_pos 2
    }
    ifn p_have_dart 0
        state draw_dart
    // same as currentweapon, but ignore workslike
    ifn player[].last_weapon -1
        set temp player[].last_weapon
    else
        set temp player[].curr_weapon


    switch temp
        case WEAPON_SHOCKER
            set hud_reload WEAPON0_RELOAD
            set hud_firedelay WEAPON0_FIREDELAY
            set hud_totaltime WEAPON1_TOTALTIME
            state draw_shocker
            break
        case WEAPON_LOVERBOY
            set hud_reload WEAPON1_RELOAD
            set hud_firedelay WEAPON1_FIREDELAY
            set hud_totaltime WEAPON1_TOTALTIME
            state draw_pistol
            break
        case WEAPON_SHOTGUN // weapon display tester
            set hud_reload WEAPON2_RELOAD
            set hud_firedelay WEAPON2_FIREDELAY
            set hud_totaltime WEAPON2_TOTALTIME
            state draw_shotgun
            break
        case WEAPON_GRENADE // weapon display tester
            set hud_reload WEAPON6_RELOAD
            set hud_firedelay WEAPON6_FIREDELAY
            set hud_totaltime WEAPON6_TOTALTIME
            state draw_shotgun
            break
        case WEAPON_MINIGUN
            set hud_reload WEAPON4_RELOAD
            set hud_firedelay WEAPON4_FIREDELAY
            set hud_totaltime WEAPON4_TOTALTIME
            state draw_minigun
            break
        case WEAPON_BOWLINGBOMB
            set hud_reload WEAPON5_RELOAD
            set hud_firedelay WEAPON5_FIREDELAY
            set hud_totaltime WEAPON5_TOTALTIME
            state draw_bowlingbombs
            break
        // remove for demo
        
        case WEAPON_CROSSBOW
            set hud_reload WEAPON7_RELOAD
            set hud_firedelay WEAPON7_FIREDELAY
            set hud_totaltime WEAPON7_TOTALTIME
            state draw_crossbow
            break
        case 8
            set hud_reload WEAPON8_RELOAD
            set hud_firedelay WEAPON8_FIREDELAY
            set hud_totaltime WEAPON8_TOTALTIME
            state draw_lam
            break
        // weapon frame tester... old stuff!
        /* case 9 // weapon display tester
            set hud_reload WEAPON1_RELOAD
            set hud_firedelay WEAPON1_FIREDELAY
            set hud_totaltime WEAPON1_TOTALTIME
            state draw_guntester
            break */
        case WEAPON_SMG
            set hud_reload WEAPON3_RELOAD
            set hud_firedelay WEAPON3_FIREDELAY
            set hud_totaltime WEAPON3_TOTALTIME
            state draw_smg
            break
        default
            ifn exp_aftershock 0
                state ashock_displayweapon_extensions
            break
    endswitch
    ifg p_hazard_amount 0
        state draw_hazardmask
endevent
